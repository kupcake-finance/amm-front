{"ast":null,"code":"import _objectSpread from\"/home/someone/kucoin/tesnet20_08/amm-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _defineProperty from\"/home/someone/kucoin/tesnet20_08/amm-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _slicedToArray from\"/home/someone/kucoin/tesnet20_08/amm-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/home/someone/kucoin/tesnet20_08/amm-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7,_templateObject8,_templateObject9,_templateObject10;import{JSBI,Token}from'@pancakeswap-libs/sdk-v2';import React,{useCallback,useContext,useEffect,useMemo,useState}from'react';import{ArrowDown}from'react-feather';import{CardBody,Button,IconButton,Text,Heading}from'@pancakeswap-libs/uikit';import styled,{ThemeContext}from'styled-components';import AddressInputPanel from'components/AddressInputPanel';import Card,{GreyCard}from'components/Card';import{AutoColumn}from'components/Column';import ConfirmSwapModal from'components/swap/ConfirmSwapModal';import CurrencyInputPanel from'components/CurrencyInputPanel';import CardNav from'components/CardNav';import{AutoRow,RowBetween}from'components/Row';import AdvancedSwapDetailsDropdown from'components/swap/AdvancedSwapDetailsDropdown';import BetterTradeLink from'components/swap/BetterTradeLink';import confirmPriceImpactWithoutFee from'components/swap/confirmPriceImpactWithoutFee';import{ArrowWrapper,BottomGrouping,SwapCallbackError,Wrapper}from'components/swap/styleds';import TradePrice from'components/swap/TradePrice';import TokenWarningModal from'components/TokenWarningModal';import SyrupWarningModal from'components/SyrupWarningModal';import ProgressSteps from'components/ProgressSteps';import SwapVertIcon from'@material-ui/icons/SwapVert';import{BETTER_TRADE_LINK_THRESHOLD,INITIAL_ALLOWED_SLIPPAGE}from'constants/index';import{isTradeBetter}from'data/V1';import{useActiveWeb3React}from'hooks';import{useCurrency}from'hooks/Tokens';import{ApprovalState,useApproveCallbackFromTrade}from'hooks/useApproveCallback';import{useSwapCallback}from'hooks/useSwapCallback';import useToggledVersion,{Version}from'hooks/useToggledVersion';import useWrapCallback,{WrapType}from'hooks/useWrapCallback';import{Field}from'state/swap/actions';import{useDefaultsFromURLSearch,useDerivedSwapInfo,useSwapActionHandlers,useSwapState}from'state/swap/hooks';import{useExpertModeManager,useUserDeadline,useUserSlippageTolerance}from'state/user/hooks';import{LinkStyledButton,TYPE}from'components/Shared';import{maxAmountSpend}from'utils/maxAmountSpend';import{computeTradePriceBreakdown,warningSeverity}from'utils/prices';import Loader from'components/Loader';import{TranslateString}from'utils/translateTextHelpers';import PageHeader from'components/PageHeader';import ConnectWalletButton from'components/ConnectWalletButton';import AppBody from'../AppBody';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Main=TYPE.main;var StyledCardBody=styled(CardBody)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  border-radius: 20px;\\n\"])));var Header=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  position: relative;\\n  margin-top: 5px;\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  background-color: #0c0c0c;\\n  background-position-x: center;\\n  background-position-y: bottom;\\n  background-repeat: no-repeat;\\n  background-size: 800px;\\n  padding-bottom: 120px;\\n  z-index: 100000000;\\n\\n  & > img {\\n    position: absolute;\\n    z-index: 50;\\n    bottom: -30px;\\n    max-width: 800px;\\n  }\\n\"])));var StyledIconButton=styled(IconButton)(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  background-color: #48cae4;\\n  margin-right: 5px;\\n  height: 70px;\\n  width: 70px;\\n  box-shadow: none;\\n  transition: all 0.2s ease-in-out;\\n  border: 6px solid white;\\n\\n  & > svg,\\n  & > svg > * {\\n    fill: #fff;\\n  }\\n\\n  &:hover {\\n    background-color: #fff;\\n    border: 6px solid #48cae4 !important;\\n\\n    & > svg,\\n    & > svg > * {\\n      fill: #48cae4;\\n    }\\n  }\\n\\n  &:focus {\\n    box-shadow: none !important;\\n  }\\n\\n  &:active {\\n    background-color: #fff;\\n  }\\n\"])));var StyledSwapButton=styled(Button)(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  background-color: #48cae4;\\n  box-shadow: none;\\n  transition: all 0.2s ease-in-out;\\n  border: 2px solid white;\\n  font-size: 20px;\\n  font-weight: 600;\\n\\n  &:hover {\\n    background-color: #fff;\\n    border: 2px solid #48cae4 !important;\\n    color: #48cae4;\\n\\n    & > svg,\\n    & > svg > * {\\n      fill: #48cae4;\\n    }\\n  }\\n\\n  &:focus {\\n    box-shadow: none !important;\\n  }\\n\\n  &:active {\\n    background-color: #fff;\\n  }\\n\"])));var MainTitle=styled(Heading)(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  color: #fff;\\n  font-size: 60px;\\n  font-weight: 500;\\n\"])));var SubTitle=styled(MainTitle)(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  font-size: 40px;\\n  font-weight: 400;\\n  margin: 0;\\n  margin-top: -15px;\\n\"])));var SubTitle2=styled(SubTitle)(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n  margin-top: 10px;\\n  margin-bottom: 10px;\\n  color: #86868b;\\n\"])));var MarginLink=styled.a(_templateObject8||(_templateObject8=_taggedTemplateLiteral([\"\\n  margin-top: -5px;\\n  margin-bottom: 50px;\\n\\n  & > * {\\n    font-size: 20px;\\n  }\\n\"])));var StyledAutoColumn=styled(AutoColumn)(_templateObject9||(_templateObject9=_taggedTemplateLiteral([\"\\n  margin-top: -50px;\\n  margin-bottom: -50px;\\n  z-index: 10;\\n\"])));var StyledSwapVertIcon=styled(SwapVertIcon)(_templateObject10||(_templateObject10=_taggedTemplateLiteral([\"\\n  font-size: 40px !important;\\n  font-weight: 800 !important;\\n\"])));var Swap=function Swap(){var _Version$v1$Version$v,_ref3,_ref4,_parsedAmounts$indepe,_parsedAmounts$indepe2,_parsedAmounts$depend,_parsedAmounts$depend2,_formattedAmounts,_parsedAmounts$indepe3,_parsedAmounts$Field$,_currencies$Field$INP;var loadedUrlParams=useDefaultsFromURLSearch();// token warning stuff\nvar _ref=[useCurrency(loadedUrlParams===null||loadedUrlParams===void 0?void 0:loadedUrlParams.inputCurrencyId),useCurrency(loadedUrlParams===null||loadedUrlParams===void 0?void 0:loadedUrlParams.outputCurrencyId)],loadedInputCurrency=_ref[0],loadedOutputCurrency=_ref[1];var _useState=useState(false),_useState2=_slicedToArray(_useState,2),dismissTokenWarning=_useState2[0],setDismissTokenWarning=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isSyrup=_useState4[0],setIsSyrup=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),syrupTransactionType=_useState6[0],setSyrupTransactionType=_useState6[1];var urlLoadedTokens=useMemo(function(){var _filter,_ref2;return(_filter=(_ref2=[loadedInputCurrency,loadedOutputCurrency])===null||_ref2===void 0?void 0:_ref2.filter(function(c){return c instanceof Token;}))!==null&&_filter!==void 0?_filter:[];},[loadedInputCurrency,loadedOutputCurrency]);var handleConfirmTokenWarning=useCallback(function(){setDismissTokenWarning(true);},[]);var handleConfirmSyrupWarning=useCallback(function(){setIsSyrup(false);setSyrupTransactionType('');},[]);var _useActiveWeb3React=useActiveWeb3React(),account=_useActiveWeb3React.account;var theme=useContext(ThemeContext);var _useExpertModeManager=useExpertModeManager(),_useExpertModeManager2=_slicedToArray(_useExpertModeManager,1),isExpertMode=_useExpertModeManager2[0];// get custom setting values for user\nvar _useUserDeadline=useUserDeadline(),_useUserDeadline2=_slicedToArray(_useUserDeadline,1),deadline=_useUserDeadline2[0];var _useUserSlippageToler=useUserSlippageTolerance(),_useUserSlippageToler2=_slicedToArray(_useUserSlippageToler,1),allowedSlippage=_useUserSlippageToler2[0];// swap state\nvar _useSwapState=useSwapState(),independentField=_useSwapState.independentField,typedValue=_useSwapState.typedValue,recipient=_useSwapState.recipient;var _useDerivedSwapInfo=useDerivedSwapInfo(),v1Trade=_useDerivedSwapInfo.v1Trade,v2Trade=_useDerivedSwapInfo.v2Trade,currencyBalances=_useDerivedSwapInfo.currencyBalances,parsedAmount=_useDerivedSwapInfo.parsedAmount,currencies=_useDerivedSwapInfo.currencies,swapInputError=_useDerivedSwapInfo.inputError;var _useWrapCallback=useWrapCallback(currencies[Field.INPUT],currencies[Field.OUTPUT],typedValue),wrapType=_useWrapCallback.wrapType,onWrap=_useWrapCallback.execute,wrapInputError=_useWrapCallback.inputError;var showWrap=wrapType!==WrapType.NOT_APPLICABLE;//   const { address: recipientAddress } = useENSAddress(recipient)\nvar toggledVersion=useToggledVersion();var trade=showWrap?undefined:(_Version$v1$Version$v={},_defineProperty(_Version$v1$Version$v,Version.v1,v1Trade),_defineProperty(_Version$v1$Version$v,Version.v2,v2Trade),_Version$v1$Version$v)[toggledVersion];var betterTradeLinkVersion=toggledVersion===Version.v2&&isTradeBetter(v2Trade,v1Trade,BETTER_TRADE_LINK_THRESHOLD)?Version.v1:toggledVersion===Version.v1&&isTradeBetter(v1Trade,v2Trade)?Version.v2:undefined;var parsedAmounts=showWrap?(_ref3={},_defineProperty(_ref3,Field.INPUT,parsedAmount),_defineProperty(_ref3,Field.OUTPUT,parsedAmount),_ref3):(_ref4={},_defineProperty(_ref4,Field.INPUT,independentField===Field.INPUT?parsedAmount:trade===null||trade===void 0?void 0:trade.inputAmount),_defineProperty(_ref4,Field.OUTPUT,independentField===Field.OUTPUT?parsedAmount:trade===null||trade===void 0?void 0:trade.outputAmount),_ref4);var _useSwapActionHandler=useSwapActionHandlers(),onSwitchTokens=_useSwapActionHandler.onSwitchTokens,onCurrencySelection=_useSwapActionHandler.onCurrencySelection,onUserInput=_useSwapActionHandler.onUserInput,onChangeRecipient=_useSwapActionHandler.onChangeRecipient;var isValid=!swapInputError;var dependentField=independentField===Field.INPUT?Field.OUTPUT:Field.INPUT;var handleTypeInput=useCallback(function(value){onUserInput(Field.INPUT,value);},[onUserInput]);var handleTypeOutput=useCallback(function(value){onUserInput(Field.OUTPUT,value);},[onUserInput]);// modal and loading\nvar _useState7=useState({showConfirm:false,tradeToConfirm:undefined,attemptingTxn:false,swapErrorMessage:undefined,txHash:undefined}),_useState8=_slicedToArray(_useState7,2),_useState8$=_useState8[0],showConfirm=_useState8$.showConfirm,tradeToConfirm=_useState8$.tradeToConfirm,swapErrorMessage=_useState8$.swapErrorMessage,attemptingTxn=_useState8$.attemptingTxn,txHash=_useState8$.txHash,setSwapState=_useState8[1];var formattedAmounts=(_formattedAmounts={},_defineProperty(_formattedAmounts,independentField,typedValue),_defineProperty(_formattedAmounts,dependentField,showWrap?(_parsedAmounts$indepe=(_parsedAmounts$indepe2=parsedAmounts[independentField])===null||_parsedAmounts$indepe2===void 0?void 0:_parsedAmounts$indepe2.toExact())!==null&&_parsedAmounts$indepe!==void 0?_parsedAmounts$indepe:'':(_parsedAmounts$depend=(_parsedAmounts$depend2=parsedAmounts[dependentField])===null||_parsedAmounts$depend2===void 0?void 0:_parsedAmounts$depend2.toSignificant(6))!==null&&_parsedAmounts$depend!==void 0?_parsedAmounts$depend:''),_formattedAmounts);var route=trade===null||trade===void 0?void 0:trade.route;var userHasSpecifiedInputOutput=Boolean(currencies[Field.INPUT]&&currencies[Field.OUTPUT]&&((_parsedAmounts$indepe3=parsedAmounts[independentField])===null||_parsedAmounts$indepe3===void 0?void 0:_parsedAmounts$indepe3.greaterThan(JSBI.BigInt(0))));var noRoute=!route;// check whether the user has approved the router on the input token\nvar _useApproveCallbackFr=useApproveCallbackFromTrade(trade,allowedSlippage),_useApproveCallbackFr2=_slicedToArray(_useApproveCallbackFr,2),approval=_useApproveCallbackFr2[0],approveCallback=_useApproveCallbackFr2[1];// check if user has gone through approval process, used to show two step buttons, reset on token change\nvar _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),approvalSubmitted=_useState10[0],setApprovalSubmitted=_useState10[1];// mark when a user has submitted an approval, reset onTokenSelection for input field\nuseEffect(function(){if(approval===ApprovalState.PENDING){setApprovalSubmitted(true);}},[approval,approvalSubmitted]);var maxAmountInput=maxAmountSpend(currencyBalances[Field.INPUT]);var atMaxAmountInput=Boolean(maxAmountInput&&((_parsedAmounts$Field$=parsedAmounts[Field.INPUT])===null||_parsedAmounts$Field$===void 0?void 0:_parsedAmounts$Field$.equalTo(maxAmountInput)));// the callback to execute the swap\nvar _useSwapCallback=useSwapCallback(trade,allowedSlippage,deadline,recipient),swapCallback=_useSwapCallback.callback,swapCallbackError=_useSwapCallback.error;var _computeTradePriceBre=computeTradePriceBreakdown(trade),priceImpactWithoutFee=_computeTradePriceBre.priceImpactWithoutFee;var handleSwap=useCallback(function(){if(priceImpactWithoutFee&&!confirmPriceImpactWithoutFee(priceImpactWithoutFee)){return;}if(!swapCallback){return;}setSwapState(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{attemptingTxn:true,swapErrorMessage:undefined,txHash:undefined});});swapCallback().then(function(hash){setSwapState(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{attemptingTxn:false,swapErrorMessage:undefined,txHash:hash});});}).catch(function(error){setSwapState(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{attemptingTxn:false,swapErrorMessage:error.message,txHash:undefined});});});},[priceImpactWithoutFee,swapCallback,setSwapState]);// errors\nvar _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),showInverted=_useState12[0],setShowInverted=_useState12[1];// warnings on slippage\nvar priceImpactSeverity=warningSeverity(priceImpactWithoutFee);// show approve flow when: no error on inputs, not approved or pending, or approved in current session\n// never show if price impact is above threshold in non expert mode\nvar showApproveFlow=!swapInputError&&(approval===ApprovalState.NOT_APPROVED||approval===ApprovalState.PENDING||approvalSubmitted&&approval===ApprovalState.APPROVED)&&!(priceImpactSeverity>3&&!isExpertMode);var handleConfirmDismiss=useCallback(function(){setSwapState(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{showConfirm:false});});// if there was a tx hash, we want to clear the input\nif(txHash){onUserInput(Field.INPUT,'');}},[onUserInput,txHash,setSwapState]);var handleAcceptChanges=useCallback(function(){setSwapState(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{tradeToConfirm:trade});});},[trade]);// This will check to see if the user has selected Syrup to either buy or sell.\n// If so, they will be alerted with a warning message.\nvar checkForSyrup=useCallback(function(selected,purchaseType){if(selected==='syrup'){setIsSyrup(true);setSyrupTransactionType(purchaseType);}},[setIsSyrup,setSyrupTransactionType]);var handleInputSelect=useCallback(function(inputCurrency){setApprovalSubmitted(false);// reset 2 step UI for approvals\nonCurrencySelection(Field.INPUT,inputCurrency);if(inputCurrency.symbol.toLowerCase()==='syrup'){checkForSyrup(inputCurrency.symbol.toLowerCase(),'Selling');}},[onCurrencySelection,setApprovalSubmitted,checkForSyrup]);var handleMaxInput=useCallback(function(){if(maxAmountInput){onUserInput(Field.INPUT,maxAmountInput.toExact());}},[maxAmountInput,onUserInput]);var handleOutputSelect=useCallback(function(outputCurrency){onCurrencySelection(Field.OUTPUT,outputCurrency);if(outputCurrency.symbol.toLowerCase()==='syrup'){checkForSyrup(outputCurrency.symbol.toLowerCase(),'Buying');}},[onCurrencySelection,checkForSyrup]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(TokenWarningModal,{isOpen:urlLoadedTokens.length>0&&!dismissTokenWarning,tokens:urlLoadedTokens,onConfirm:handleConfirmTokenWarning}),/*#__PURE__*/_jsx(SyrupWarningModal,{isOpen:isSyrup,transactionType:syrupTransactionType,onConfirm:handleConfirmSyrupWarning}),/*#__PURE__*/_jsx(CardNav,{}),/*#__PURE__*/_jsx(AppBody,{children:/*#__PURE__*/_jsxs(Wrapper,{id:\"swap-page\",children:[/*#__PURE__*/_jsx(ConfirmSwapModal,{isOpen:showConfirm,trade:trade,originalTrade:tradeToConfirm,onAcceptChanges:handleAcceptChanges,attemptingTxn:attemptingTxn,txHash:txHash,recipient:recipient,allowedSlippage:allowedSlippage,onConfirm:handleSwap,swapErrorMessage:swapErrorMessage,onDismiss:handleConfirmDismiss}),/*#__PURE__*/_jsx(PageHeader,{title:\"Exchange\",description:\"Instantly trade KCC tokens\"}),/*#__PURE__*/_jsxs(StyledCardBody,{children:[/*#__PURE__*/_jsxs(AutoColumn,{gap:\"md\",children:[/*#__PURE__*/_jsx(CurrencyInputPanel,{label:independentField===Field.OUTPUT&&!showWrap&&trade?'From (estimated)':TranslateString(76,'From'),value:formattedAmounts[Field.INPUT],showMaxButton:!atMaxAmountInput,currency:currencies[Field.INPUT],onUserInput:handleTypeInput,onMax:handleMaxInput,onCurrencySelect:handleInputSelect,otherCurrency:currencies[Field.OUTPUT],id:\"swap-currency-input\"}),/*#__PURE__*/_jsx(StyledAutoColumn,{justify:\"space-between\",children:/*#__PURE__*/_jsxs(AutoRow,{justify:isExpertMode?'space-between':'center',children:[/*#__PURE__*/_jsx(ArrowWrapper,{clickable:true,children:/*#__PURE__*/_jsx(StyledIconButton,{variant:\"tertiary\",onClick:function onClick(){setApprovalSubmitted(false);// reset 2 step UI for approvals\nonSwitchTokens();},style:{borderRadius:'50%'},size:\"sm\",children:/*#__PURE__*/_jsx(StyledSwapVertIcon,{})})}),recipient===null&&!showWrap&&isExpertMode?/*#__PURE__*/_jsx(LinkStyledButton,{id:\"add-recipient-button\",onClick:function onClick(){return onChangeRecipient('');},children:\"+ Add a send (optional)\"}):null]})}),/*#__PURE__*/_jsx(CurrencyInputPanel,{value:formattedAmounts[Field.OUTPUT],onUserInput:handleTypeOutput,label:independentField===Field.INPUT&&!showWrap&&trade?'To (estimated)':TranslateString(80,'To'),showMaxButton:false,currency:currencies[Field.OUTPUT],onCurrencySelect:handleOutputSelect,otherCurrency:currencies[Field.INPUT],id:\"swap-currency-output\"}),recipient!==null&&!showWrap?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(AutoRow,{justify:\"space-between\",children:[/*#__PURE__*/_jsx(ArrowWrapper,{clickable:false,children:/*#__PURE__*/_jsx(ArrowDown,{size:\"16\",color:theme.colors.textSubtle})}),/*#__PURE__*/_jsx(LinkStyledButton,{id:\"remove-recipient-button\",onClick:function onClick(){return onChangeRecipient(null);},children:\"- Remove send\"})]}),/*#__PURE__*/_jsx(AddressInputPanel,{id:\"recipient\",value:recipient,onChange:onChangeRecipient})]}):null,showWrap?null:/*#__PURE__*/_jsx(Card,{padding:\".25rem .75rem 0 .75rem\",borderRadius:\"20px\",children:/*#__PURE__*/_jsxs(AutoColumn,{gap:\"4px\",children:[Boolean(trade)&&/*#__PURE__*/_jsxs(RowBetween,{align:\"center\",children:[/*#__PURE__*/_jsx(Text,{fontSize:\"14px\",children:\"Price\"}),/*#__PURE__*/_jsx(TradePrice,{price:trade===null||trade===void 0?void 0:trade.executionPrice,showInverted:showInverted,setShowInverted:setShowInverted})]}),allowedSlippage!==INITIAL_ALLOWED_SLIPPAGE&&/*#__PURE__*/_jsxs(RowBetween,{align:\"center\",children:[/*#__PURE__*/_jsx(Text,{fontSize:\"14px\",children:\"Slippage Tolerance\"}),/*#__PURE__*/_jsxs(Text,{fontSize:\"14px\",children:[allowedSlippage/100,\"%\"]})]})]})})]}),/*#__PURE__*/_jsxs(BottomGrouping,{children:[!account?/*#__PURE__*/_jsx(ConnectWalletButton,{fullWidth:true}):showWrap?/*#__PURE__*/_jsx(StyledSwapButton,{disabled:Boolean(wrapInputError),onClick:onWrap,fullWidth:true,children:wrapInputError!==null&&wrapInputError!==void 0?wrapInputError:wrapType===WrapType.WRAP?'Wrap':wrapType===WrapType.UNWRAP?'Unwrap':null}):noRoute&&userHasSpecifiedInputOutput?/*#__PURE__*/_jsx(GreyCard,{style:{textAlign:'center'},children:/*#__PURE__*/_jsx(Main,{mb:\"4px\",children:\"Insufficient liquidity for this trade.\"})}):showApproveFlow?/*#__PURE__*/_jsxs(RowBetween,{children:[/*#__PURE__*/_jsx(StyledSwapButton,{onClick:approveCallback,disabled:approval!==ApprovalState.NOT_APPROVED||approvalSubmitted,style:{width:'48%'},variant:approval===ApprovalState.APPROVED?'success':'primary',children:approval===ApprovalState.PENDING?/*#__PURE__*/_jsxs(AutoRow,{gap:\"6px\",justify:\"center\",children:[\"Approving \",/*#__PURE__*/_jsx(Loader,{stroke:\"white\"})]}):approvalSubmitted&&approval===ApprovalState.APPROVED?'Approved':\"Approve \".concat((_currencies$Field$INP=currencies[Field.INPUT])===null||_currencies$Field$INP===void 0?void 0:_currencies$Field$INP.symbol)}),/*#__PURE__*/_jsx(StyledSwapButton,{onClick:function onClick(){if(isExpertMode){handleSwap();}else{setSwapState({tradeToConfirm:trade,attemptingTxn:false,swapErrorMessage:undefined,showConfirm:true,txHash:undefined});}},style:{width:'48%'},id:\"swap-button\",disabled:!isValid||approval!==ApprovalState.APPROVED||priceImpactSeverity>3&&!isExpertMode,variant:isValid&&priceImpactSeverity>2?'danger':'primary',children:priceImpactSeverity>3&&!isExpertMode?\"Price Impact High\":\"Swap\".concat(priceImpactSeverity>2?' Anyway':'')})]}):/*#__PURE__*/_jsx(StyledSwapButton,{onClick:function onClick(){if(isExpertMode){handleSwap();}else{setSwapState({tradeToConfirm:trade,attemptingTxn:false,swapErrorMessage:undefined,showConfirm:true,txHash:undefined});}},id:\"swap-button\",disabled:!isValid||priceImpactSeverity>3&&!isExpertMode||!!swapCallbackError,variant:isValid&&priceImpactSeverity>2&&!swapCallbackError?'danger':'primary',fullWidth:true,children:swapInputError||(priceImpactSeverity>3&&!isExpertMode?\"Price Impact Too High\":\"Swap\".concat(priceImpactSeverity>2?' Anyway':''))}),showApproveFlow&&/*#__PURE__*/_jsx(ProgressSteps,{steps:[approval===ApprovalState.APPROVED]}),isExpertMode&&swapErrorMessage?/*#__PURE__*/_jsx(SwapCallbackError,{error:swapErrorMessage}):null,betterTradeLinkVersion&&/*#__PURE__*/_jsx(BetterTradeLink,{version:betterTradeLinkVersion})]})]})]})}),/*#__PURE__*/_jsx(AdvancedSwapDetailsDropdown,{trade:trade})]});};export default Swap;","map":{"version":3,"sources":["/home/someone/kucoin/tesnet20_08/amm-front/src/pages/Swap/index.tsx"],"names":["JSBI","Token","React","useCallback","useContext","useEffect","useMemo","useState","ArrowDown","CardBody","Button","IconButton","Text","Heading","styled","ThemeContext","AddressInputPanel","Card","GreyCard","AutoColumn","ConfirmSwapModal","CurrencyInputPanel","CardNav","AutoRow","RowBetween","AdvancedSwapDetailsDropdown","BetterTradeLink","confirmPriceImpactWithoutFee","ArrowWrapper","BottomGrouping","SwapCallbackError","Wrapper","TradePrice","TokenWarningModal","SyrupWarningModal","ProgressSteps","SwapVertIcon","BETTER_TRADE_LINK_THRESHOLD","INITIAL_ALLOWED_SLIPPAGE","isTradeBetter","useActiveWeb3React","useCurrency","ApprovalState","useApproveCallbackFromTrade","useSwapCallback","useToggledVersion","Version","useWrapCallback","WrapType","Field","useDefaultsFromURLSearch","useDerivedSwapInfo","useSwapActionHandlers","useSwapState","useExpertModeManager","useUserDeadline","useUserSlippageTolerance","LinkStyledButton","TYPE","maxAmountSpend","computeTradePriceBreakdown","warningSeverity","Loader","TranslateString","PageHeader","ConnectWalletButton","AppBody","Main","main","StyledCardBody","Header","div","StyledIconButton","StyledSwapButton","MainTitle","SubTitle","SubTitle2","MarginLink","a","StyledAutoColumn","StyledSwapVertIcon","Swap","loadedUrlParams","inputCurrencyId","outputCurrencyId","loadedInputCurrency","loadedOutputCurrency","dismissTokenWarning","setDismissTokenWarning","isSyrup","setIsSyrup","syrupTransactionType","setSyrupTransactionType","urlLoadedTokens","filter","c","handleConfirmTokenWarning","handleConfirmSyrupWarning","account","theme","isExpertMode","deadline","allowedSlippage","independentField","typedValue","recipient","v1Trade","v2Trade","currencyBalances","parsedAmount","currencies","swapInputError","inputError","INPUT","OUTPUT","wrapType","onWrap","execute","wrapInputError","showWrap","NOT_APPLICABLE","toggledVersion","trade","undefined","v1","v2","betterTradeLinkVersion","parsedAmounts","inputAmount","outputAmount","onSwitchTokens","onCurrencySelection","onUserInput","onChangeRecipient","isValid","dependentField","handleTypeInput","value","handleTypeOutput","showConfirm","tradeToConfirm","attemptingTxn","swapErrorMessage","txHash","setSwapState","formattedAmounts","toExact","toSignificant","route","userHasSpecifiedInputOutput","Boolean","greaterThan","BigInt","noRoute","approval","approveCallback","approvalSubmitted","setApprovalSubmitted","PENDING","maxAmountInput","atMaxAmountInput","equalTo","swapCallback","callback","swapCallbackError","error","priceImpactWithoutFee","handleSwap","prevState","then","hash","catch","message","showInverted","setShowInverted","priceImpactSeverity","showApproveFlow","NOT_APPROVED","APPROVED","handleConfirmDismiss","handleAcceptChanges","checkForSyrup","selected","purchaseType","handleInputSelect","inputCurrency","symbol","toLowerCase","handleMaxInput","handleOutputSelect","outputCurrency","length","borderRadius","colors","textSubtle","executionPrice","WRAP","UNWRAP","textAlign","width"],"mappings":"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","sourcesContent":["import { CurrencyAmount, JSBI, Token, Trade } from '@pancakeswap-libs/sdk-v2'\nimport React, { useCallback, useContext, useEffect, useMemo, useState } from 'react'\nimport { ArrowDown } from 'react-feather'\nimport { CardBody, ArrowDownIcon, Button, IconButton, Text, Heading } from '@pancakeswap-libs/uikit'\nimport styled, { ThemeContext } from 'styled-components'\nimport AddressInputPanel from 'components/AddressInputPanel'\nimport Card, { GreyCard } from 'components/Card'\nimport { AutoColumn } from 'components/Column'\nimport ConfirmSwapModal from 'components/swap/ConfirmSwapModal'\nimport CurrencyInputPanel from 'components/CurrencyInputPanel'\nimport CardNav from 'components/CardNav'\nimport { AutoRow, RowBetween } from 'components/Row'\nimport AdvancedSwapDetailsDropdown from 'components/swap/AdvancedSwapDetailsDropdown'\nimport BetterTradeLink from 'components/swap/BetterTradeLink'\nimport confirmPriceImpactWithoutFee from 'components/swap/confirmPriceImpactWithoutFee'\nimport { ArrowWrapper, BottomGrouping, SwapCallbackError, Wrapper } from 'components/swap/styleds'\nimport TradePrice from 'components/swap/TradePrice'\nimport TokenWarningModal from 'components/TokenWarningModal'\nimport SyrupWarningModal from 'components/SyrupWarningModal'\nimport ProgressSteps from 'components/ProgressSteps'\nimport SwapVertIcon from '@material-ui/icons/SwapVert'\nimport { BETTER_TRADE_LINK_THRESHOLD, INITIAL_ALLOWED_SLIPPAGE } from 'constants/index'\nimport { isTradeBetter } from 'data/V1'\nimport { useActiveWeb3React } from 'hooks'\nimport { useCurrency } from 'hooks/Tokens'\nimport { ApprovalState, useApproveCallbackFromTrade } from 'hooks/useApproveCallback'\nimport { useSwapCallback } from 'hooks/useSwapCallback'\nimport useToggledVersion, { Version } from 'hooks/useToggledVersion'\nimport useWrapCallback, { WrapType } from 'hooks/useWrapCallback'\nimport { Field } from 'state/swap/actions'\nimport { useDefaultsFromURLSearch, useDerivedSwapInfo, useSwapActionHandlers, useSwapState } from 'state/swap/hooks'\nimport { useExpertModeManager, useUserDeadline, useUserSlippageTolerance } from 'state/user/hooks'\nimport { LinkStyledButton, TYPE } from 'components/Shared'\nimport { maxAmountSpend } from 'utils/maxAmountSpend'\nimport { computeTradePriceBreakdown, warningSeverity } from 'utils/prices'\nimport Loader from 'components/Loader'\nimport { TranslateString } from 'utils/translateTextHelpers'\nimport PageHeader from 'components/PageHeader'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport AppBody from '../AppBody'\n\nconst { main: Main } = TYPE\n\nconst StyledCardBody = styled(CardBody)`\n  border-radius: 20px;\n`\nconst Header = styled.div`\n  position: relative;\n  margin-top: 5px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: #0c0c0c;\n  background-position-x: center;\n  background-position-y: bottom;\n  background-repeat: no-repeat;\n  background-size: 800px;\n  padding-bottom: 120px;\n  z-index: 100000000;\n\n  & > img {\n    position: absolute;\n    z-index: 50;\n    bottom: -30px;\n    max-width: 800px;\n  }\n`\nconst StyledIconButton = styled(IconButton)`\n  background-color: #48cae4;\n  margin-right: 5px;\n  height: 70px;\n  width: 70px;\n  box-shadow: none;\n  transition: all 0.2s ease-in-out;\n  border: 6px solid white;\n\n  & > svg,\n  & > svg > * {\n    fill: #fff;\n  }\n\n  &:hover {\n    background-color: #fff;\n    border: 6px solid #48cae4 !important;\n\n    & > svg,\n    & > svg > * {\n      fill: #48cae4;\n    }\n  }\n\n  &:focus {\n    box-shadow: none !important;\n  }\n\n  &:active {\n    background-color: #fff;\n  }\n`\n\nconst StyledSwapButton = styled(Button)`\n  background-color: #48cae4;\n  box-shadow: none;\n  transition: all 0.2s ease-in-out;\n  border: 2px solid white;\n  font-size: 20px;\n  font-weight: 600;\n\n  &:hover {\n    background-color: #fff;\n    border: 2px solid #48cae4 !important;\n    color: #48cae4;\n\n    & > svg,\n    & > svg > * {\n      fill: #48cae4;\n    }\n  }\n\n  &:focus {\n    box-shadow: none !important;\n  }\n\n  &:active {\n    background-color: #fff;\n  }\n`\n\n\nconst MainTitle = styled(Heading)`\n  color: #fff;\n  font-size: 60px;\n  font-weight: 500;\n`\n\nconst SubTitle = styled(MainTitle)`\n  font-size: 40px;\n  font-weight: 400;\n  margin: 0;\n  margin-top: -15px;\n`\n\nconst SubTitle2 = styled(SubTitle)`\n  margin-top: 10px;\n  margin-bottom: 10px;\n  color: #86868b;\n`\n\nconst MarginLink = styled.a`\n  margin-top: -5px;\n  margin-bottom: 50px;\n\n  & > * {\n    font-size: 20px;\n  }\n`\n\nconst StyledAutoColumn = styled(AutoColumn)`\n  margin-top: -50px;\n  margin-bottom: -50px;\n  z-index: 10;\n`\nconst StyledSwapVertIcon = styled(SwapVertIcon)`\n  font-size: 40px !important;\n  font-weight: 800 !important;\n`\n\nconst Swap = () => {\n  const loadedUrlParams = useDefaultsFromURLSearch()\n\n  // token warning stuff\n  const [loadedInputCurrency, loadedOutputCurrency] = [\n    useCurrency(loadedUrlParams?.inputCurrencyId),\n    useCurrency(loadedUrlParams?.outputCurrencyId),\n  ]\n  const [dismissTokenWarning, setDismissTokenWarning] = useState<boolean>(false)\n  const [isSyrup, setIsSyrup] = useState<boolean>(false)\n  const [syrupTransactionType, setSyrupTransactionType] = useState<string>('')\n  const urlLoadedTokens: Token[] = useMemo(\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c instanceof Token) ?? [],\n    [loadedInputCurrency, loadedOutputCurrency]\n  )\n  const handleConfirmTokenWarning = useCallback(() => {\n    setDismissTokenWarning(true)\n  }, [])\n\n  const handleConfirmSyrupWarning = useCallback(() => {\n    setIsSyrup(false)\n    setSyrupTransactionType('')\n  }, [])\n\n  const { account } = useActiveWeb3React()\n  const theme = useContext(ThemeContext)\n\n  const [isExpertMode] = useExpertModeManager()\n\n  // get custom setting values for user\n  const [deadline] = useUserDeadline()\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  // swap state\n  const { independentField, typedValue, recipient } = useSwapState()\n  const {\n    v1Trade,\n    v2Trade,\n    currencyBalances,\n    parsedAmount,\n    currencies,\n    inputError: swapInputError,\n  } = useDerivedSwapInfo()\n  const { wrapType, execute: onWrap, inputError: wrapInputError } = useWrapCallback(\n    currencies[Field.INPUT],\n    currencies[Field.OUTPUT],\n    typedValue\n  )\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\n  //   const { address: recipientAddress } = useENSAddress(recipient)\n  const toggledVersion = useToggledVersion()\n  const trade = showWrap\n    ? undefined\n    : {\n        [Version.v1]: v1Trade,\n        [Version.v2]: v2Trade,\n      }[toggledVersion]\n\n  const betterTradeLinkVersion: Version | undefined =\n    toggledVersion === Version.v2 && isTradeBetter(v2Trade, v1Trade, BETTER_TRADE_LINK_THRESHOLD)\n      ? Version.v1\n      : toggledVersion === Version.v1 && isTradeBetter(v1Trade, v2Trade)\n      ? Version.v2\n      : undefined\n\n  const parsedAmounts = showWrap\n    ? {\n        [Field.INPUT]: parsedAmount,\n        [Field.OUTPUT]: parsedAmount,\n      }\n    : {\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\n      }\n\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\n  const isValid = !swapInputError\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\n\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      onUserInput(Field.INPUT, value)\n    },\n    [onUserInput]\n  )\n  const handleTypeOutput = useCallback(\n    (value: string) => {\n      onUserInput(Field.OUTPUT, value)\n    },\n    [onUserInput]\n  )\n\n  // modal and loading\n  const [{ showConfirm, tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\n    showConfirm: boolean\n    tradeToConfirm: Trade | undefined\n    attemptingTxn: boolean\n    swapErrorMessage: string | undefined\n    txHash: string | undefined\n  }>({\n    showConfirm: false,\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined,\n  })\n\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: showWrap\n      ? parsedAmounts[independentField]?.toExact() ?? ''\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  const route = trade?.route\n  const userHasSpecifiedInputOutput = Boolean(\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0))\n  )\n  const noRoute = !route\n\n  // check whether the user has approved the router on the input token\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage)\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  useEffect(() => {\n    if (approval === ApprovalState.PENDING) {\n      setApprovalSubmitted(true)\n    }\n  }, [approval, approvalSubmitted])\n\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\n  const atMaxAmountInput = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput))\n\n  // the callback to execute the swap\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(\n    trade,\n    allowedSlippage,\n    deadline,\n    recipient\n  )\n\n  const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade)\n\n  const handleSwap = useCallback(() => {\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee)) {\n      return\n    }\n    if (!swapCallback) {\n      return\n    }\n    setSwapState((prevState) => ({ ...prevState, attemptingTxn: true, swapErrorMessage: undefined, txHash: undefined }))\n    swapCallback()\n      .then((hash) => {\n        setSwapState((prevState) => ({\n          ...prevState,\n          attemptingTxn: false,\n          swapErrorMessage: undefined,\n          txHash: hash,\n        }))\n      })\n      .catch((error) => {\n        setSwapState((prevState) => ({\n          ...prevState,\n          attemptingTxn: false,\n          swapErrorMessage: error.message,\n          txHash: undefined,\n        }))\n      })\n  }, [priceImpactWithoutFee, swapCallback, setSwapState])\n\n  // errors\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n\n  // warnings on slippage\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n  const showApproveFlow =\n    !swapInputError &&\n    (approval === ApprovalState.NOT_APPROVED ||\n      approval === ApprovalState.PENDING ||\n      (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\n    !(priceImpactSeverity > 3 && !isExpertMode)\n\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState((prevState) => ({ ...prevState, showConfirm: false }))\n\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '')\n    }\n  }, [onUserInput, txHash, setSwapState])\n\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState((prevState) => ({ ...prevState, tradeToConfirm: trade }))\n  }, [trade])\n\n  // This will check to see if the user has selected Syrup to either buy or sell.\n  // If so, they will be alerted with a warning message.\n  const checkForSyrup = useCallback(\n    (selected: string, purchaseType: string) => {\n      if (selected === 'syrup') {\n        setIsSyrup(true)\n        setSyrupTransactionType(purchaseType)\n      }\n    },\n    [setIsSyrup, setSyrupTransactionType]\n  )\n\n  const handleInputSelect = useCallback(\n    (inputCurrency) => {\n      setApprovalSubmitted(false) // reset 2 step UI for approvals\n      onCurrencySelection(Field.INPUT, inputCurrency)\n      if (inputCurrency.symbol.toLowerCase() === 'syrup') {\n        checkForSyrup(inputCurrency.symbol.toLowerCase(), 'Selling')\n      }\n    },\n    [onCurrencySelection, setApprovalSubmitted, checkForSyrup]\n  )\n\n  const handleMaxInput = useCallback(() => {\n    if (maxAmountInput) {\n      onUserInput(Field.INPUT, maxAmountInput.toExact())\n    }\n  }, [maxAmountInput, onUserInput])\n\n  const handleOutputSelect = useCallback(\n    (outputCurrency) => {\n      onCurrencySelection(Field.OUTPUT, outputCurrency)\n      if (outputCurrency.symbol.toLowerCase() === 'syrup') {\n        checkForSyrup(outputCurrency.symbol.toLowerCase(), 'Buying')\n      }\n    },\n    [onCurrencySelection, checkForSyrup]\n  )\n\n  return (\n    <>\n      <TokenWarningModal\n        isOpen={urlLoadedTokens.length > 0 && !dismissTokenWarning}\n        tokens={urlLoadedTokens}\n        onConfirm={handleConfirmTokenWarning}\n      />\n      <SyrupWarningModal\n        isOpen={isSyrup}\n        transactionType={syrupTransactionType}\n        onConfirm={handleConfirmSyrupWarning}\n      />\n\n      <CardNav />\n\n      <AppBody>\n        <Wrapper id=\"swap-page\">\n          <ConfirmSwapModal\n            isOpen={showConfirm}\n            trade={trade}\n            originalTrade={tradeToConfirm}\n            onAcceptChanges={handleAcceptChanges}\n            attemptingTxn={attemptingTxn}\n            txHash={txHash}\n            recipient={recipient}\n            allowedSlippage={allowedSlippage}\n            onConfirm={handleSwap}\n            swapErrorMessage={swapErrorMessage}\n            onDismiss={handleConfirmDismiss}\n          />\n          <PageHeader title=\"Exchange\" description=\"Instantly trade KCC tokens\" />\n          <StyledCardBody>\n            <AutoColumn gap=\"md\">\n              <CurrencyInputPanel\n                label={\n                  independentField === Field.OUTPUT && !showWrap && trade\n                    ? 'From (estimated)'\n                    : TranslateString(76, 'From')\n                }\n                value={formattedAmounts[Field.INPUT]}\n                showMaxButton={!atMaxAmountInput}\n                currency={currencies[Field.INPUT]}\n                onUserInput={handleTypeInput}\n                onMax={handleMaxInput}\n                onCurrencySelect={handleInputSelect}\n                otherCurrency={currencies[Field.OUTPUT]}\n                id=\"swap-currency-input\"\n              />\n              <StyledAutoColumn justify=\"space-between\">\n                <AutoRow justify={isExpertMode ? 'space-between' : 'center'}>\n                  <ArrowWrapper clickable>\n                    <StyledIconButton\n                      variant=\"tertiary\"\n                      onClick={() => {\n                        setApprovalSubmitted(false) // reset 2 step UI for approvals\n                        onSwitchTokens()\n                      }}\n                      style={{ borderRadius: '50%' }}\n                      size=\"sm\"\n                    >\n                      <StyledSwapVertIcon />\n                    </StyledIconButton>\n                  </ArrowWrapper>\n                  {recipient === null && !showWrap && isExpertMode ? (\n                    <LinkStyledButton id=\"add-recipient-button\" onClick={() => onChangeRecipient('')}>\n                      + Add a send (optional)\n                    </LinkStyledButton>\n                  ) : null}\n                </AutoRow>\n              </StyledAutoColumn>\n              <CurrencyInputPanel\n                value={formattedAmounts[Field.OUTPUT]}\n                onUserInput={handleTypeOutput}\n                label={\n                  independentField === Field.INPUT && !showWrap && trade ? 'To (estimated)' : TranslateString(80, 'To')\n                }\n                showMaxButton={false}\n                currency={currencies[Field.OUTPUT]}\n                onCurrencySelect={handleOutputSelect}\n                otherCurrency={currencies[Field.INPUT]}\n                id=\"swap-currency-output\"\n              />\n\n              {recipient !== null && !showWrap ? (\n                <>\n                  <AutoRow justify=\"space-between\">\n                    <ArrowWrapper clickable={false}>\n                      <ArrowDown size=\"16\" color={theme.colors.textSubtle} />\n                    </ArrowWrapper>\n                    <LinkStyledButton id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\n                      - Remove send\n                    </LinkStyledButton>\n                  </AutoRow>\n                  <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\n                </>\n              ) : null}\n\n              {showWrap ? null : (\n                <Card padding=\".25rem .75rem 0 .75rem\" borderRadius=\"20px\">\n                  <AutoColumn gap=\"4px\">\n                    {Boolean(trade) && (\n                      <RowBetween align=\"center\">\n                        <Text fontSize=\"14px\">Price</Text>\n                        <TradePrice\n                          price={trade?.executionPrice}\n                          showInverted={showInverted}\n                          setShowInverted={setShowInverted}\n                        />\n                      </RowBetween>\n                    )}\n                    {allowedSlippage !== INITIAL_ALLOWED_SLIPPAGE && (\n                      <RowBetween align=\"center\">\n                        <Text fontSize=\"14px\">Slippage Tolerance</Text>\n                        <Text fontSize=\"14px\">{allowedSlippage / 100}%</Text>\n                      </RowBetween>\n                    )}\n                  </AutoColumn>\n                </Card>\n              )}\n            </AutoColumn>\n            <BottomGrouping>\n              {!account ? (\n                <ConnectWalletButton fullWidth />\n              ) : showWrap ? (\n                <StyledSwapButton disabled={Boolean(wrapInputError)} onClick={onWrap} fullWidth>\n                  {wrapInputError ??\n                    (wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null)}\n                </StyledSwapButton>\n              ) : noRoute && userHasSpecifiedInputOutput ? (\n                <GreyCard style={{ textAlign: 'center' }}>\n                  <Main mb=\"4px\">Insufficient liquidity for this trade.</Main>\n                </GreyCard>\n              ) : showApproveFlow ? (\n                <RowBetween>\n                  <StyledSwapButton\n                    onClick={approveCallback}\n                    disabled={approval !== ApprovalState.NOT_APPROVED || approvalSubmitted}\n                    style={{ width: '48%' }}\n                    variant={approval === ApprovalState.APPROVED ? 'success' : 'primary'}\n                  >\n                    {approval === ApprovalState.PENDING ? (\n                      <AutoRow gap=\"6px\" justify=\"center\">\n                        Approving <Loader stroke=\"white\" />\n                      </AutoRow>\n                    ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\n                      'Approved'\n                    ) : (\n                      `Approve ${currencies[Field.INPUT]?.symbol}`\n                    )}\n                  </StyledSwapButton>\n                  <StyledSwapButton\n                    onClick={() => {\n                      if (isExpertMode) {\n                        handleSwap()\n                      } else {\n                        setSwapState({\n                          tradeToConfirm: trade,\n                          attemptingTxn: false,\n                          swapErrorMessage: undefined,\n                          showConfirm: true,\n                          txHash: undefined,\n                        })\n                      }\n                    }}\n                    style={{ width: '48%' }}\n                    id=\"swap-button\"\n                    disabled={\n                      !isValid || approval !== ApprovalState.APPROVED || (priceImpactSeverity > 3 && !isExpertMode)\n                    }\n                    variant={isValid && priceImpactSeverity > 2 ? 'danger' : 'primary'}\n                  >\n                    {priceImpactSeverity > 3 && !isExpertMode\n                      ? `Price Impact High`\n                      : `Swap${priceImpactSeverity > 2 ? ' Anyway' : ''}`}\n                  </StyledSwapButton>\n                </RowBetween>\n              ) : (\n                <StyledSwapButton\n                  onClick={() => {\n                    if (isExpertMode) {\n                      handleSwap()\n                    } else {\n                      setSwapState({\n                        tradeToConfirm: trade,\n                        attemptingTxn: false,\n                        swapErrorMessage: undefined,\n                        showConfirm: true,\n                        txHash: undefined,\n                      })\n                    }\n                  }}\n                  id=\"swap-button\"\n                  disabled={!isValid || (priceImpactSeverity > 3 && !isExpertMode) || !!swapCallbackError}\n                  variant={isValid && priceImpactSeverity > 2 && !swapCallbackError ? 'danger' : 'primary'}\n                  fullWidth\n                >\n                  {swapInputError ||\n                    (priceImpactSeverity > 3 && !isExpertMode\n                      ? `Price Impact Too High`\n                      : `Swap${priceImpactSeverity > 2 ? ' Anyway' : ''}`)}\n                </StyledSwapButton>\n              )}\n              {showApproveFlow && <ProgressSteps steps={[approval === ApprovalState.APPROVED]} />}\n              {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n              {betterTradeLinkVersion && <BetterTradeLink version={betterTradeLinkVersion} />}\n            </BottomGrouping>\n          </StyledCardBody>\n        </Wrapper>\n      </AppBody>\n      <AdvancedSwapDetailsDropdown trade={trade} />\n    </>\n  )\n}\n\nexport default Swap\n"]},"metadata":{},"sourceType":"module"}