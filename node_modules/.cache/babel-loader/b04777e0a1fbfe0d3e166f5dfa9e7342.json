{"ast":null,"code":"var _jsxFileName = \"/home/someone/kucoin/tesnet20_08/amm-front/src/components/ConnectWalletButton/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useWeb3React } from '@web3-react/core';\nimport { Button, useWalletModal } from '@pancakeswap-libs/uikit';\nimport { injected, walletconnect } from 'connectors';\nimport useI18n from 'hooks/useI18n';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledSwapButton = styled(Button)`\n  background-color: #48cae4;\n  box-shadow: none;\n  transition: all 0.2s ease-in-out;\n  border: 2px solid white;\n  font-size: 20px;\n  font-weight: 600;\n\n  &:hover {\n    background-color: #fff;\n    border: 2px solid #48cae4 !important;\n    color: #48cae4;\n\n    & > svg,\n    & > svg > * {\n      fill: #48cae4;\n    }\n  }\n\n  &:focus {\n    box-shadow: none !important;\n  }\n\n  &:active {\n    background-color: #fff;\n  }\n`;\n_c = StyledSwapButton;\n\nconst UnlockButton = props => {\n  _s();\n\n  const TranslateString = useI18n();\n  const {\n    account,\n    activate,\n    deactivate\n  } = useWeb3React();\n\n  const handleLogin = connectorId => {\n    if (connectorId === 'walletconnect') {\n      return activate(walletconnect);\n    }\n\n    return activate(injected);\n  };\n\n  const {\n    onPresentConnectModal\n  } = useWalletModal(handleLogin, deactivate, account);\n  return /*#__PURE__*/_jsxDEV(StyledSwapButton, {\n    onClick: onPresentConnectModal,\n    ...props,\n    children: TranslateString(292, 'Unlock Wallet')\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UnlockButton, \"+03MW4BaMsLQsQM1I5ci5VVMMfc=\", false, function () {\n  return [useI18n, useWeb3React, useWalletModal];\n});\n\n_c2 = UnlockButton;\nexport default UnlockButton;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledSwapButton\");\n$RefreshReg$(_c2, \"UnlockButton\");","map":{"version":3,"sources":["/home/someone/kucoin/tesnet20_08/amm-front/src/components/ConnectWalletButton/index.tsx"],"names":["React","styled","useWeb3React","Button","useWalletModal","injected","walletconnect","useI18n","StyledSwapButton","UnlockButton","props","TranslateString","account","activate","deactivate","handleLogin","connectorId","onPresentConnectModal"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,MAAT,EAA2CC,cAA3C,QAAiE,yBAAjE;AACA,SAASC,QAAT,EAAmBC,aAAnB,QAAwC,YAAxC;AACA,OAAOC,OAAP,MAAoB,eAApB;;AAEA,MAAMC,gBAAgB,GAAGP,MAAM,CAACE,MAAD,CAAS;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA1BA;KAAMK,gB;;AA4BN,MAAMC,YAAmC,GAAGC,KAAK,IAAI;AAAA;;AACnD,QAAMC,eAAe,GAAGJ,OAAO,EAA/B;AACA,QAAM;AAAEK,IAAAA,OAAF;AAAWC,IAAAA,QAAX;AAAqBC,IAAAA;AAArB,MAAoCZ,YAAY,EAAtD;;AAEA,QAAMa,WAAW,GAAIC,WAAD,IAA8B;AAChD,QAAIA,WAAW,KAAK,eAApB,EAAqC;AACnC,aAAOH,QAAQ,CAACP,aAAD,CAAf;AACD;;AACD,WAAOO,QAAQ,CAACR,QAAD,CAAf;AACD,GALD;;AAOA,QAAM;AAAEY,IAAAA;AAAF,MAA4Bb,cAAc,CAACW,WAAD,EAAcD,UAAd,EAA0BF,OAA1B,CAAhD;AAEA,sBACE,QAAC,gBAAD;AAAkB,IAAA,OAAO,EAAEK,qBAA3B;AAAA,OAAsDP,KAAtD;AAAA,cACGC,eAAe,CAAC,GAAD,EAAM,eAAN;AADlB;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAlBD;;GAAMF,Y;UACoBF,O,EACkBL,Y,EASRE,c;;;MAX9BK,Y;AAoBN,eAAeA,YAAf","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport { Button, ButtonProps, ConnectorId, useWalletModal } from '@pancakeswap-libs/uikit'\nimport { injected, walletconnect } from 'connectors'\nimport useI18n from 'hooks/useI18n'\n\nconst StyledSwapButton = styled(Button)`\n  background-color: #48cae4;\n  box-shadow: none;\n  transition: all 0.2s ease-in-out;\n  border: 2px solid white;\n  font-size: 20px;\n  font-weight: 600;\n\n  &:hover {\n    background-color: #fff;\n    border: 2px solid #48cae4 !important;\n    color: #48cae4;\n\n    & > svg,\n    & > svg > * {\n      fill: #48cae4;\n    }\n  }\n\n  &:focus {\n    box-shadow: none !important;\n  }\n\n  &:active {\n    background-color: #fff;\n  }\n`\n\nconst UnlockButton: React.FC<ButtonProps> = props => {\n  const TranslateString = useI18n()\n  const { account, activate, deactivate } = useWeb3React()\n\n  const handleLogin = (connectorId: ConnectorId) => {\n    if (connectorId === 'walletconnect') {\n      return activate(walletconnect)\n    }\n    return activate(injected)\n  }\n\n  const { onPresentConnectModal } = useWalletModal(handleLogin, deactivate, account as string)\n\n  return (\n    <StyledSwapButton onClick={onPresentConnectModal} {...props}>\n      {TranslateString(292, 'Unlock Wallet')}\n    </StyledSwapButton>\n  )\n}\n\nexport default UnlockButton\n"]},"metadata":{},"sourceType":"module"}