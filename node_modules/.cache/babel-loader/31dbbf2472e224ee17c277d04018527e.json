{"ast":null,"code":"var _jsxFileName = \"/home/someone/kucoin/tesnet20_08/amm-front/src/components/swap/SwapModalFooter.tsx\",\n    _s = $RefreshSig$();\n\nimport { TradeType } from '@pancakeswap-libs/sdk-v2';\nimport React, { useMemo, useState } from 'react';\nimport styled from 'styled-components';\nimport { Text, Button } from '@pancakeswap-libs/uikit';\nimport { Repeat } from 'react-feather';\nimport { Field } from '../../state/swap/actions';\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown, formatExecutionPrice, warningSeverity } from '../../utils/prices';\nimport { AutoColumn } from '../Column';\nimport QuestionHelper from '../QuestionHelper';\nimport { AutoRow, RowBetween, RowFixed } from '../Row';\nimport FormattedPriceImpact from './FormattedPriceImpact';\nimport { StyledBalanceMaxMini, SwapCallbackError } from './styleds';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledSwapButton = styled(Button)`\n  background-color: #48cae4;\n  box-shadow: none;\n  transition: all 0.2s ease-in-out;\n  border: 2px solid white;\n  font-size: 20px;\n  font-weight: 600;\n\n  &:hover {\n    background-color: #fff;\n    border: 2px solid #48cae4 !important;\n    color: #48cae4;\n\n    & > svg,\n    & > svg > * {\n      fill: #48cae4;\n    }\n  }\n\n  &:focus {\n    box-shadow: none !important;\n  }\n\n  &:active {\n    background-color: #fff;\n  }\n`;\n_c = StyledSwapButton;\nexport default function SwapModalFooter({\n  trade,\n  onConfirm,\n  allowedSlippage,\n  swapErrorMessage,\n  disabledConfirm\n}) {\n  _s();\n\n  var _slippageAdjustedAmou, _slippageAdjustedAmou2, _slippageAdjustedAmou3, _slippageAdjustedAmou4;\n\n  const [showInverted, setShowInverted] = useState(false);\n  const slippageAdjustedAmounts = useMemo(() => computeSlippageAdjustedAmounts(trade, allowedSlippage), [allowedSlippage, trade]);\n  const {\n    priceImpactWithoutFee,\n    realizedLPFee\n  } = useMemo(() => computeTradePriceBreakdown(trade), [trade]);\n  const severity = warningSeverity(priceImpactWithoutFee);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AutoColumn, {\n      gap: \"0px\",\n      children: [/*#__PURE__*/_jsxDEV(RowBetween, {\n        align: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"17px\",\n          style: {\n            color: \"#ff629a\",\n            fontWeight: 600\n          },\n          children: \"Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"17px\",\n          style: {\n            justifyContent: 'center',\n            alignItems: 'center',\n            display: 'flex',\n            textAlign: 'right',\n            paddingLeft: '8px',\n            fontWeight: 500\n          },\n          children: [formatExecutionPrice(trade, showInverted), /*#__PURE__*/_jsxDEV(StyledBalanceMaxMini, {\n            onClick: () => setShowInverted(!showInverted),\n            children: /*#__PURE__*/_jsxDEV(Repeat, {\n              size: 14\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RowBetween, {\n        children: [/*#__PURE__*/_jsxDEV(RowFixed, {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"17px\",\n            style: {\n              color: \"#ff629a\",\n              fontWeight: 600\n            },\n            children: trade.tradeType === TradeType.EXACT_INPUT ? 'Minimum received' : 'Maximum sold'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(QuestionHelper, {\n            text: \"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RowFixed, {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"17px\",\n            children: trade.tradeType === TradeType.EXACT_INPUT ? (_slippageAdjustedAmou = (_slippageAdjustedAmou2 = slippageAdjustedAmounts[Field.OUTPUT]) === null || _slippageAdjustedAmou2 === void 0 ? void 0 : _slippageAdjustedAmou2.toSignificant(4)) !== null && _slippageAdjustedAmou !== void 0 ? _slippageAdjustedAmou : '-' : (_slippageAdjustedAmou3 = (_slippageAdjustedAmou4 = slippageAdjustedAmounts[Field.INPUT]) === null || _slippageAdjustedAmou4 === void 0 ? void 0 : _slippageAdjustedAmou4.toSignificant(4)) !== null && _slippageAdjustedAmou3 !== void 0 ? _slippageAdjustedAmou3 : '-'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"17px\",\n            marginLeft: \"4px\",\n            children: trade.tradeType === TradeType.EXACT_INPUT ? trade.outputAmount.currency.symbol : trade.inputAmount.currency.symbol\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RowBetween, {\n        children: [/*#__PURE__*/_jsxDEV(RowFixed, {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"17px\",\n            style: {\n              color: \"#ff629a\",\n              fontWeight: 600\n            },\n            children: \"Price Impact\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(QuestionHelper, {\n            text: \"The difference between the market price and your price due to trade size.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormattedPriceImpact, {\n          priceImpact: priceImpactWithoutFee\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RowBetween, {\n        children: [/*#__PURE__*/_jsxDEV(RowFixed, {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"17px\",\n            style: {\n              color: \"#ff629a\",\n              fontWeight: 600\n            },\n            children: \"Provider Fee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(QuestionHelper, {\n            text: \"For each trade a 0.2% fee is paid. 0.17% goes to liquidity providers and 0.03% goes to the PancakeSwap treasury.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"17px\",\n          children: realizedLPFee ? `${realizedLPFee === null || realizedLPFee === void 0 ? void 0 : realizedLPFee.toSignificant(6)} ${trade.inputAmount.currency.symbol}` : '-'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AutoRow, {\n      children: [/*#__PURE__*/_jsxDEV(StyledSwapButton, {\n        onClick: onConfirm,\n        disabled: disabledConfirm,\n        variant: severity > 2 ? 'danger' : 'primary',\n        mt: \"10px\",\n        id: \"confirm-swap-or-send\",\n        fullWidth: true,\n        children: severity > 2 ? 'Swap Anyway' : 'Confirm Swap'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), swapErrorMessage ? /*#__PURE__*/_jsxDEV(SwapCallbackError, {\n        error: swapErrorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 29\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(SwapModalFooter, \"EHVFZ8x+z7x1/4xs5fkdJEiuFR4=\");\n\n_c2 = SwapModalFooter;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledSwapButton\");\n$RefreshReg$(_c2, \"SwapModalFooter\");","map":{"version":3,"sources":["/home/someone/kucoin/tesnet20_08/amm-front/src/components/swap/SwapModalFooter.tsx"],"names":["TradeType","React","useMemo","useState","styled","Text","Button","Repeat","Field","computeSlippageAdjustedAmounts","computeTradePriceBreakdown","formatExecutionPrice","warningSeverity","AutoColumn","QuestionHelper","AutoRow","RowBetween","RowFixed","FormattedPriceImpact","StyledBalanceMaxMini","SwapCallbackError","StyledSwapButton","SwapModalFooter","trade","onConfirm","allowedSlippage","swapErrorMessage","disabledConfirm","showInverted","setShowInverted","slippageAdjustedAmounts","priceImpactWithoutFee","realizedLPFee","severity","color","fontWeight","justifyContent","alignItems","display","textAlign","paddingLeft","tradeType","EXACT_INPUT","OUTPUT","toSignificant","INPUT","outputAmount","currency","symbol","inputAmount"],"mappings":"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","sourcesContent":["import { Trade, TradeType } from '@pancakeswap-libs/sdk-v2'\nimport React, { useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Text , Button } from '@pancakeswap-libs/uikit'\nimport { Repeat } from 'react-feather'\n\nimport { Field } from '../../state/swap/actions'\nimport {\n  computeSlippageAdjustedAmounts,\n  computeTradePriceBreakdown,\n  formatExecutionPrice,\n  warningSeverity\n} from '../../utils/prices'\nimport { AutoColumn } from '../Column'\nimport QuestionHelper from '../QuestionHelper'\nimport { AutoRow, RowBetween, RowFixed } from '../Row'\nimport FormattedPriceImpact from './FormattedPriceImpact'\nimport { StyledBalanceMaxMini, SwapCallbackError } from './styleds'\n\nconst StyledSwapButton = styled(Button)`\n  background-color: #48cae4;\n  box-shadow: none;\n  transition: all 0.2s ease-in-out;\n  border: 2px solid white;\n  font-size: 20px;\n  font-weight: 600;\n\n  &:hover {\n    background-color: #fff;\n    border: 2px solid #48cae4 !important;\n    color: #48cae4;\n\n    & > svg,\n    & > svg > * {\n      fill: #48cae4;\n    }\n  }\n\n  &:focus {\n    box-shadow: none !important;\n  }\n\n  &:active {\n    background-color: #fff;\n  }\n`\n\nexport default function SwapModalFooter({\n  trade,\n  onConfirm,\n  allowedSlippage,\n  swapErrorMessage,\n  disabledConfirm\n}: {\n  trade: Trade\n  allowedSlippage: number\n  onConfirm: () => void\n  swapErrorMessage: string | undefined\n  disabledConfirm: boolean\n}) {\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n  const slippageAdjustedAmounts = useMemo(() => computeSlippageAdjustedAmounts(trade, allowedSlippage), [\n    allowedSlippage,\n    trade\n  ])\n  const { priceImpactWithoutFee, realizedLPFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const severity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <>\n      <AutoColumn gap=\"0px\">\n        <RowBetween align=\"center\">\n          <Text fontSize=\"17px\" style={{color:\"#ff629a\", fontWeight:600}} >Price</Text>\n          <Text\n            fontSize=\"17px\"\n            style={{\n              justifyContent: 'center',\n              alignItems: 'center',\n              display: 'flex',\n              textAlign: 'right',\n              paddingLeft: '8px',\n              fontWeight: 500\n            }}\n          >\n            {formatExecutionPrice(trade, showInverted)}\n            <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n              <Repeat size={14} />\n            </StyledBalanceMaxMini>\n          </Text>\n        </RowBetween>\n\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"17px\" style={{color:\"#ff629a\", fontWeight:600}}>\n              {trade.tradeType === TradeType.EXACT_INPUT ? 'Minimum received' : 'Maximum sold'}\n            </Text>\n            <QuestionHelper text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\" />\n          </RowFixed>\n          <RowFixed>\n            <Text fontSize=\"17px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4) ?? '-'\n                : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4) ?? '-'}\n            </Text>\n            <Text fontSize=\"17px\" marginLeft=\"4px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? trade.outputAmount.currency.symbol\n                : trade.inputAmount.currency.symbol}\n            </Text>\n          </RowFixed>\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"17px\" style={{color:\"#ff629a\", fontWeight:600}}>Price Impact</Text>\n            <QuestionHelper text=\"The difference between the market price and your price due to trade size.\" />\n          </RowFixed>\n          <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"17px\" style={{color:\"#ff629a\", fontWeight:600}}>Provider Fee</Text>\n            <QuestionHelper text=\"For each trade a 0.2% fee is paid. 0.17% goes to liquidity providers and 0.03% goes to the PancakeSwap treasury.\" />\n          </RowFixed>\n          <Text fontSize=\"17px\">\n            {realizedLPFee ? `${realizedLPFee?.toSignificant(6)  } ${  trade.inputAmount.currency.symbol}` : '-'}\n          </Text>\n        </RowBetween>\n      </AutoColumn>\n\n      <AutoRow>\n        <StyledSwapButton\n          onClick={onConfirm}\n          disabled={disabledConfirm}\n          variant={severity > 2 ? 'danger' : 'primary'}\n          mt=\"10px\"\n          id=\"confirm-swap-or-send\"\n          fullWidth\n        >\n          {severity > 2 ? 'Swap Anyway' : 'Confirm Swap'}\n        </StyledSwapButton>\n\n        {swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n      </AutoRow>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}