{"ast":null,"code":"import _taggedTemplateLiteral from\"/home/someone/kucoin/tesnet20_08/amm-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React from'react';import styled from'styled-components';import{Button}from'@pancakeswap-libs/uikit';import{RowBetween,RowFixed}from'../../components/Row';import CurrencyLogo from'../../components/CurrencyLogo';import{Field}from'../../state/mint/actions';import{TYPE}from'../../components/Shared';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Body=TYPE.body;var StyledSwapButton=styled(Button)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  background-color: #48cae4;\\n  box-shadow: none;\\n  transition: all 0.2s ease-in-out;\\n  border: 2px solid white;\\n  font-size: 20px;\\n  font-weight: 600;\\n  margin: 10px auto;\\n\\n  &:hover {\\n    background-color: #fff;\\n    border: 2px solid #48cae4 !important;\\n    color: #48cae4;\\n\\n    & > svg,\\n    & > svg > * {\\n      fill: #48cae4;\\n    }\\n  }\\n\\n  &:focus {\\n    box-shadow: none !important;\\n  }\\n\\n  &:active {\\n    background-color: #fff;\\n  }\\n\"])));export function ConfirmAddModalBottom(_ref){var _currencies$Field$CUR,_parsedAmounts$Field$,_currencies$Field$CUR2,_parsedAmounts$Field$2,_currencies$Field$CUR3,_currencies$Field$CUR4,_currencies$Field$CUR5,_currencies$Field$CUR6;var noLiquidity=_ref.noLiquidity,price=_ref.price,currencies=_ref.currencies,parsedAmounts=_ref.parsedAmounts,poolTokenPercentage=_ref.poolTokenPercentage,onAdd=_ref.onAdd;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(RowBetween,{children:[/*#__PURE__*/_jsxs(Body,{children:[(_currencies$Field$CUR=currencies[Field.CURRENCY_A])===null||_currencies$Field$CUR===void 0?void 0:_currencies$Field$CUR.symbol,\" Deposited\"]}),/*#__PURE__*/_jsxs(RowFixed,{children:[/*#__PURE__*/_jsx(CurrencyLogo,{currency:currencies[Field.CURRENCY_A],style:{marginRight:'8px'}}),/*#__PURE__*/_jsx(Body,{children:(_parsedAmounts$Field$=parsedAmounts[Field.CURRENCY_A])===null||_parsedAmounts$Field$===void 0?void 0:_parsedAmounts$Field$.toSignificant(6)})]})]}),/*#__PURE__*/_jsxs(RowBetween,{children:[/*#__PURE__*/_jsxs(Body,{children:[(_currencies$Field$CUR2=currencies[Field.CURRENCY_B])===null||_currencies$Field$CUR2===void 0?void 0:_currencies$Field$CUR2.symbol,\" Deposited\"]}),/*#__PURE__*/_jsxs(RowFixed,{children:[/*#__PURE__*/_jsx(CurrencyLogo,{currency:currencies[Field.CURRENCY_B],style:{marginRight:'8px'}}),/*#__PURE__*/_jsx(Body,{children:(_parsedAmounts$Field$2=parsedAmounts[Field.CURRENCY_B])===null||_parsedAmounts$Field$2===void 0?void 0:_parsedAmounts$Field$2.toSignificant(6)})]})]}),/*#__PURE__*/_jsxs(RowBetween,{children:[/*#__PURE__*/_jsx(Body,{children:\"Rates\"}),/*#__PURE__*/_jsx(Body,{children:\"1 \".concat((_currencies$Field$CUR3=currencies[Field.CURRENCY_A])===null||_currencies$Field$CUR3===void 0?void 0:_currencies$Field$CUR3.symbol,\" = \").concat(price===null||price===void 0?void 0:price.toSignificant(4),\" \").concat((_currencies$Field$CUR4=currencies[Field.CURRENCY_B])===null||_currencies$Field$CUR4===void 0?void 0:_currencies$Field$CUR4.symbol)})]}),/*#__PURE__*/_jsx(RowBetween,{style:{justifyContent:'flex-end'},children:/*#__PURE__*/_jsx(Body,{children:\"1 \".concat((_currencies$Field$CUR5=currencies[Field.CURRENCY_B])===null||_currencies$Field$CUR5===void 0?void 0:_currencies$Field$CUR5.symbol,\" = \").concat(price===null||price===void 0?void 0:price.invert().toSignificant(4),\" \").concat((_currencies$Field$CUR6=currencies[Field.CURRENCY_A])===null||_currencies$Field$CUR6===void 0?void 0:_currencies$Field$CUR6.symbol)})}),/*#__PURE__*/_jsxs(RowBetween,{children:[/*#__PURE__*/_jsx(Body,{children:\"Share of Pool:\"}),/*#__PURE__*/_jsxs(Body,{children:[noLiquidity?'100':poolTokenPercentage===null||poolTokenPercentage===void 0?void 0:poolTokenPercentage.toSignificant(4),\"%\"]})]}),/*#__PURE__*/_jsx(StyledSwapButton,{mt:\"20px\",onClick:onAdd,children:noLiquidity?'Create Pool & Supply':'Confirm Supply'})]});}export default ConfirmAddModalBottom;","map":{"version":3,"sources":["/home/someone/kucoin/tesnet20_08/amm-front/src/pages/AddLiquidity/ConfirmAddModalBottom.tsx"],"names":["React","styled","Button","RowBetween","RowFixed","CurrencyLogo","Field","TYPE","Body","body","StyledSwapButton","ConfirmAddModalBottom","noLiquidity","price","currencies","parsedAmounts","poolTokenPercentage","onAdd","CURRENCY_A","symbol","marginRight","toSignificant","CURRENCY_B","justifyContent","invert"],"mappings":"qMACA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,MAAT,KAAuB,yBAAvB,CACA,OAASC,UAAT,CAAqBC,QAArB,KAAqC,sBAArC,CACA,MAAOC,CAAAA,YAAP,KAAyB,+BAAzB,CACA,OAASC,KAAT,KAAsB,0BAAtB,CACA,OAASC,IAAT,KAAqB,yBAArB,C,6IAEA,GAAcC,CAAAA,IAAd,CAAuBD,IAAvB,CAAQE,IAAR,CAEA,GAAMC,CAAAA,gBAAgB,CAAGT,MAAM,CAACC,MAAD,CAAT,+gBAAtB,CA4BA,MAAO,SAASS,CAAAA,qBAAT,MAcJ,8LAbDC,CAAAA,WAaC,MAbDA,WAaC,CAZDC,KAYC,MAZDA,KAYC,CAXDC,UAWC,MAXDA,UAWC,CAVDC,aAUC,MAVDA,aAUC,CATDC,mBASC,MATDA,mBASC,CARDC,KAQC,MARDA,KAQC,CACD,mBACE,wCACE,MAAC,UAAD,yBACE,MAAC,IAAD,mCAAOH,UAAU,CAACR,KAAK,CAACY,UAAP,CAAjB,gDAAO,sBAA8BC,MAArC,gBADF,cAEE,MAAC,QAAD,yBACE,KAAC,YAAD,EAAc,QAAQ,CAAEL,UAAU,CAACR,KAAK,CAACY,UAAP,CAAlC,CAAsD,KAAK,CAAE,CAAEE,WAAW,CAAE,KAAf,CAA7D,EADF,cAEE,KAAC,IAAD,kCAAOL,aAAa,CAACT,KAAK,CAACY,UAAP,CAApB,gDAAO,sBAAiCG,aAAjC,CAA+C,CAA/C,CAAP,EAFF,GAFF,GADF,cAQE,MAAC,UAAD,yBACE,MAAC,IAAD,oCAAOP,UAAU,CAACR,KAAK,CAACgB,UAAP,CAAjB,iDAAO,uBAA8BH,MAArC,gBADF,cAEE,MAAC,QAAD,yBACE,KAAC,YAAD,EAAc,QAAQ,CAAEL,UAAU,CAACR,KAAK,CAACgB,UAAP,CAAlC,CAAsD,KAAK,CAAE,CAAEF,WAAW,CAAE,KAAf,CAA7D,EADF,cAEE,KAAC,IAAD,mCAAOL,aAAa,CAACT,KAAK,CAACgB,UAAP,CAApB,iDAAO,uBAAiCD,aAAjC,CAA+C,CAA/C,CAAP,EAFF,GAFF,GARF,cAeE,MAAC,UAAD,yBACE,KAAC,IAAD,oBADF,cAEE,KAAC,IAAD,+CACQP,UAAU,CAACR,KAAK,CAACY,UAAP,CADlB,iDACQ,uBAA8BC,MADtC,eACkDN,KADlD,SACkDA,KADlD,iBACkDA,KAAK,CAAEQ,aAAP,CAAqB,CAArB,CADlD,qCAEIP,UAAU,CAACR,KAAK,CAACgB,UAAP,CAFd,iDAEI,uBAA8BH,MAFlC,GAFF,GAfF,cAuBE,KAAC,UAAD,EAAY,KAAK,CAAE,CAAEI,cAAc,CAAE,UAAlB,CAAnB,uBACE,KAAC,IAAD,+CACQT,UAAU,CAACR,KAAK,CAACgB,UAAP,CADlB,iDACQ,uBAA8BH,MADtC,eACkDN,KADlD,SACkDA,KADlD,iBACkDA,KAAK,CAAEW,MAAP,GAAgBH,aAAhB,CAA8B,CAA9B,CADlD,qCAEIP,UAAU,CAACR,KAAK,CAACY,UAAP,CAFd,iDAEI,uBAA8BC,MAFlC,GADF,EAvBF,cA8BE,MAAC,UAAD,yBACE,KAAC,IAAD,6BADF,cAEE,MAAC,IAAD,YAAOP,WAAW,CAAG,KAAH,CAAWI,mBAAX,SAAWA,mBAAX,iBAAWA,mBAAmB,CAAEK,aAArB,CAAmC,CAAnC,CAA7B,OAFF,GA9BF,cAkCE,KAAC,gBAAD,EAAkB,EAAE,CAAC,MAArB,CAA4B,OAAO,CAAEJ,KAArC,UACGL,WAAW,CAAG,sBAAH,CAA4B,gBAD1C,EAlCF,GADF,CAwCD,CAED,cAAeD,CAAAA,qBAAf","sourcesContent":["import { Currency, CurrencyAmount, Fraction, Percent } from '@pancakeswap-libs/sdk-v2'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@pancakeswap-libs/uikit'\nimport { RowBetween, RowFixed } from '../../components/Row'\nimport CurrencyLogo from '../../components/CurrencyLogo'\nimport { Field } from '../../state/mint/actions'\nimport { TYPE } from '../../components/Shared'\n\nconst { body: Body } = TYPE\n\nconst StyledSwapButton = styled(Button)`\n  background-color: #48cae4;\n  box-shadow: none;\n  transition: all 0.2s ease-in-out;\n  border: 2px solid white;\n  font-size: 20px;\n  font-weight: 600;\n  margin: 10px auto;\n\n  &:hover {\n    background-color: #fff;\n    border: 2px solid #48cae4 !important;\n    color: #48cae4;\n\n    & > svg,\n    & > svg > * {\n      fill: #48cae4;\n    }\n  }\n\n  &:focus {\n    box-shadow: none !important;\n  }\n\n  &:active {\n    background-color: #fff;\n  }\n`\nexport function ConfirmAddModalBottom({\n  noLiquidity,\n  price,\n  currencies,\n  parsedAmounts,\n  poolTokenPercentage,\n  onAdd,\n}: {\n  noLiquidity?: boolean\n  price?: Fraction\n  currencies: { [field in Field]?: Currency }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  poolTokenPercentage?: Percent\n  onAdd: () => void\n}) {\n  return (\n    <>\n      <RowBetween>\n        <Body>{currencies[Field.CURRENCY_A]?.symbol} Deposited</Body>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_A]} style={{ marginRight: '8px' }} />\n          <Body>{parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}</Body>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Body>{currencies[Field.CURRENCY_B]?.symbol} Deposited</Body>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_B]} style={{ marginRight: '8px' }} />\n          <Body>{parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}</Body>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Body>Rates</Body>\n        <Body>\n          {`1 ${currencies[Field.CURRENCY_A]?.symbol} = ${price?.toSignificant(4)} ${\n            currencies[Field.CURRENCY_B]?.symbol\n          }`}\n        </Body>\n      </RowBetween>\n      <RowBetween style={{ justifyContent: 'flex-end' }}>\n        <Body>\n          {`1 ${currencies[Field.CURRENCY_B]?.symbol} = ${price?.invert().toSignificant(4)} ${\n            currencies[Field.CURRENCY_A]?.symbol\n          }`}\n        </Body>\n      </RowBetween>\n      <RowBetween>\n        <Body>Share of Pool:</Body>\n        <Body>{noLiquidity ? '100' : poolTokenPercentage?.toSignificant(4)}%</Body>\n      </RowBetween>\n      <StyledSwapButton mt=\"20px\" onClick={onAdd}>\n        {noLiquidity ? 'Create Pool & Supply' : 'Confirm Supply'}\n      </StyledSwapButton>\n    </>\n  )\n}\n\nexport default ConfirmAddModalBottom\n"]},"metadata":{},"sourceType":"module"}