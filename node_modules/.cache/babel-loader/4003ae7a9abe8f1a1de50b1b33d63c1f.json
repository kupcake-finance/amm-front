{"ast":null,"code":"import _slicedToArray from\"/home/someone/kucoin/tesnet20_08/amm-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/home/someone/kucoin/tesnet20_08/amm-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import{TradeType}from'@pancakeswap-libs/sdk-v2';import React,{useMemo,useState}from'react';import styled from'styled-components';import{Text,Button}from'@pancakeswap-libs/uikit';import{Repeat}from'react-feather';import{Field}from'../../state/swap/actions';import{computeSlippageAdjustedAmounts,computeTradePriceBreakdown,formatExecutionPrice,warningSeverity}from'../../utils/prices';import{AutoColumn}from'../Column';import QuestionHelper from'../QuestionHelper';import{AutoRow,RowBetween,RowFixed}from'../Row';import FormattedPriceImpact from'./FormattedPriceImpact';import{StyledBalanceMaxMini,SwapCallbackError}from'./styleds';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var StyledSwapButton=styled(Button)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  background-color: #48cae4;\\n  box-shadow: none;\\n  transition: all 0.2s ease-in-out;\\n  border: 2px solid white;\\n  font-size: 20px;\\n  font-weight: 600;\\n\\n  &:hover {\\n    background-color: #fff;\\n    border: 2px solid #48cae4 !important;\\n    color: #48cae4;\\n\\n    & > svg,\\n    & > svg > * {\\n      fill: #48cae4;\\n    }\\n  }\\n\\n  &:focus {\\n    box-shadow: none !important;\\n  }\\n\\n  &:active {\\n    background-color: #fff;\\n  }\\n\"])));export default function SwapModalFooter(_ref){var _slippageAdjustedAmou,_slippageAdjustedAmou2,_slippageAdjustedAmou3,_slippageAdjustedAmou4;var trade=_ref.trade,onConfirm=_ref.onConfirm,allowedSlippage=_ref.allowedSlippage,swapErrorMessage=_ref.swapErrorMessage,disabledConfirm=_ref.disabledConfirm;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showInverted=_useState2[0],setShowInverted=_useState2[1];var slippageAdjustedAmounts=useMemo(function(){return computeSlippageAdjustedAmounts(trade,allowedSlippage);},[allowedSlippage,trade]);var _useMemo=useMemo(function(){return computeTradePriceBreakdown(trade);},[trade]),priceImpactWithoutFee=_useMemo.priceImpactWithoutFee,realizedLPFee=_useMemo.realizedLPFee;var severity=warningSeverity(priceImpactWithoutFee);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(AutoColumn,{gap:\"0px\",children:[/*#__PURE__*/_jsxs(RowBetween,{align:\"center\",children:[/*#__PURE__*/_jsx(Text,{fontSize:\"17px\",style:{color:\"#ff629a\",fontWeight:600},children:\"Price\"}),/*#__PURE__*/_jsxs(Text,{fontSize:\"17px\",style:{justifyContent:'center',alignItems:'center',display:'flex',textAlign:'right',paddingLeft:'8px',fontWeight:500},children:[formatExecutionPrice(trade,showInverted),/*#__PURE__*/_jsx(StyledBalanceMaxMini,{onClick:function onClick(){return setShowInverted(!showInverted);},children:/*#__PURE__*/_jsx(Repeat,{size:14})})]})]}),/*#__PURE__*/_jsxs(RowBetween,{children:[/*#__PURE__*/_jsxs(RowFixed,{children:[/*#__PURE__*/_jsx(Text,{fontSize:\"17px\",style:{color:\"#ff629a\",fontWeight:600},children:trade.tradeType===TradeType.EXACT_INPUT?'Minimum received':'Maximum sold'}),/*#__PURE__*/_jsx(QuestionHelper,{text:\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"})]}),/*#__PURE__*/_jsxs(RowFixed,{children:[/*#__PURE__*/_jsx(Text,{fontSize:\"17px\",children:trade.tradeType===TradeType.EXACT_INPUT?(_slippageAdjustedAmou=(_slippageAdjustedAmou2=slippageAdjustedAmounts[Field.OUTPUT])===null||_slippageAdjustedAmou2===void 0?void 0:_slippageAdjustedAmou2.toSignificant(4))!==null&&_slippageAdjustedAmou!==void 0?_slippageAdjustedAmou:'-':(_slippageAdjustedAmou3=(_slippageAdjustedAmou4=slippageAdjustedAmounts[Field.INPUT])===null||_slippageAdjustedAmou4===void 0?void 0:_slippageAdjustedAmou4.toSignificant(4))!==null&&_slippageAdjustedAmou3!==void 0?_slippageAdjustedAmou3:'-'}),/*#__PURE__*/_jsx(Text,{fontSize:\"17px\",marginLeft:\"4px\",children:trade.tradeType===TradeType.EXACT_INPUT?trade.outputAmount.currency.symbol:trade.inputAmount.currency.symbol})]})]}),/*#__PURE__*/_jsxs(RowBetween,{children:[/*#__PURE__*/_jsxs(RowFixed,{children:[/*#__PURE__*/_jsx(Text,{fontSize:\"17px\",style:{color:\"#ff629a\",fontWeight:600},children:\"Price Impact\"}),/*#__PURE__*/_jsx(QuestionHelper,{text:\"The difference between the market price and your price due to trade size.\"})]}),/*#__PURE__*/_jsx(FormattedPriceImpact,{priceImpact:priceImpactWithoutFee})]}),/*#__PURE__*/_jsxs(RowBetween,{children:[/*#__PURE__*/_jsxs(RowFixed,{children:[/*#__PURE__*/_jsx(Text,{fontSize:\"17px\",style:{color:\"#ff629a\",fontWeight:600},children:\"Provider Fee\"}),/*#__PURE__*/_jsx(QuestionHelper,{text:\"For each trade a 0.2% fee is paid. 0.17% goes to liquidity providers and 0.03% goes to the PancakeSwap treasury.\"})]}),/*#__PURE__*/_jsx(Text,{fontSize:\"17px\",children:realizedLPFee?\"\".concat(realizedLPFee===null||realizedLPFee===void 0?void 0:realizedLPFee.toSignificant(6),\" \").concat(trade.inputAmount.currency.symbol):'-'})]})]}),/*#__PURE__*/_jsxs(AutoRow,{children:[/*#__PURE__*/_jsx(StyledSwapButton,{onClick:onConfirm,disabled:disabledConfirm,variant:severity>2?'danger':'primary',mt:\"10px\",id:\"confirm-swap-or-send\",fullWidth:true,children:severity>2?'Swap Anyway':'Confirm Swap'}),swapErrorMessage?/*#__PURE__*/_jsx(SwapCallbackError,{error:swapErrorMessage}):null]})]});}","map":{"version":3,"sources":["/home/someone/kucoin/tesnet20_08/amm-front/src/components/swap/SwapModalFooter.tsx"],"names":["TradeType","React","useMemo","useState","styled","Text","Button","Repeat","Field","computeSlippageAdjustedAmounts","computeTradePriceBreakdown","formatExecutionPrice","warningSeverity","AutoColumn","QuestionHelper","AutoRow","RowBetween","RowFixed","FormattedPriceImpact","StyledBalanceMaxMini","SwapCallbackError","StyledSwapButton","SwapModalFooter","trade","onConfirm","allowedSlippage","swapErrorMessage","disabledConfirm","showInverted","setShowInverted","slippageAdjustedAmounts","priceImpactWithoutFee","realizedLPFee","severity","color","fontWeight","justifyContent","alignItems","display","textAlign","paddingLeft","tradeType","EXACT_INPUT","OUTPUT","toSignificant","INPUT","outputAmount","currency","symbol","inputAmount"],"mappings":"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","sourcesContent":["import { Trade, TradeType } from '@pancakeswap-libs/sdk-v2'\nimport React, { useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Text , Button } from '@pancakeswap-libs/uikit'\nimport { Repeat } from 'react-feather'\n\nimport { Field } from '../../state/swap/actions'\nimport {\n  computeSlippageAdjustedAmounts,\n  computeTradePriceBreakdown,\n  formatExecutionPrice,\n  warningSeverity\n} from '../../utils/prices'\nimport { AutoColumn } from '../Column'\nimport QuestionHelper from '../QuestionHelper'\nimport { AutoRow, RowBetween, RowFixed } from '../Row'\nimport FormattedPriceImpact from './FormattedPriceImpact'\nimport { StyledBalanceMaxMini, SwapCallbackError } from './styleds'\n\nconst StyledSwapButton = styled(Button)`\n  background-color: #48cae4;\n  box-shadow: none;\n  transition: all 0.2s ease-in-out;\n  border: 2px solid white;\n  font-size: 20px;\n  font-weight: 600;\n\n  &:hover {\n    background-color: #fff;\n    border: 2px solid #48cae4 !important;\n    color: #48cae4;\n\n    & > svg,\n    & > svg > * {\n      fill: #48cae4;\n    }\n  }\n\n  &:focus {\n    box-shadow: none !important;\n  }\n\n  &:active {\n    background-color: #fff;\n  }\n`\n\nexport default function SwapModalFooter({\n  trade,\n  onConfirm,\n  allowedSlippage,\n  swapErrorMessage,\n  disabledConfirm\n}: {\n  trade: Trade\n  allowedSlippage: number\n  onConfirm: () => void\n  swapErrorMessage: string | undefined\n  disabledConfirm: boolean\n}) {\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n  const slippageAdjustedAmounts = useMemo(() => computeSlippageAdjustedAmounts(trade, allowedSlippage), [\n    allowedSlippage,\n    trade\n  ])\n  const { priceImpactWithoutFee, realizedLPFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const severity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <>\n      <AutoColumn gap=\"0px\">\n        <RowBetween align=\"center\">\n          <Text fontSize=\"17px\" style={{color:\"#ff629a\", fontWeight:600}} >Price</Text>\n          <Text\n            fontSize=\"17px\"\n            style={{\n              justifyContent: 'center',\n              alignItems: 'center',\n              display: 'flex',\n              textAlign: 'right',\n              paddingLeft: '8px',\n              fontWeight: 500\n            }}\n          >\n            {formatExecutionPrice(trade, showInverted)}\n            <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n              <Repeat size={14} />\n            </StyledBalanceMaxMini>\n          </Text>\n        </RowBetween>\n\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"17px\" style={{color:\"#ff629a\", fontWeight:600}}>\n              {trade.tradeType === TradeType.EXACT_INPUT ? 'Minimum received' : 'Maximum sold'}\n            </Text>\n            <QuestionHelper text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\" />\n          </RowFixed>\n          <RowFixed>\n            <Text fontSize=\"17px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4) ?? '-'\n                : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4) ?? '-'}\n            </Text>\n            <Text fontSize=\"17px\" marginLeft=\"4px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? trade.outputAmount.currency.symbol\n                : trade.inputAmount.currency.symbol}\n            </Text>\n          </RowFixed>\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"17px\" style={{color:\"#ff629a\", fontWeight:600}}>Price Impact</Text>\n            <QuestionHelper text=\"The difference between the market price and your price due to trade size.\" />\n          </RowFixed>\n          <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"17px\" style={{color:\"#ff629a\", fontWeight:600}}>Provider Fee</Text>\n            <QuestionHelper text=\"For each trade a 0.2% fee is paid. 0.17% goes to liquidity providers and 0.03% goes to the PancakeSwap treasury.\" />\n          </RowFixed>\n          <Text fontSize=\"17px\">\n            {realizedLPFee ? `${realizedLPFee?.toSignificant(6)  } ${  trade.inputAmount.currency.symbol}` : '-'}\n          </Text>\n        </RowBetween>\n      </AutoColumn>\n\n      <AutoRow>\n        <StyledSwapButton\n          onClick={onConfirm}\n          disabled={disabledConfirm}\n          variant={severity > 2 ? 'danger' : 'primary'}\n          mt=\"10px\"\n          id=\"confirm-swap-or-send\"\n          fullWidth\n        >\n          {severity > 2 ? 'Swap Anyway' : 'Confirm Swap'}\n        </StyledSwapButton>\n\n        {swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n      </AutoRow>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}