{"ast":null,"code":"import _objectSpread from\"/home/someone/kucoin/tesnet20_08/amm-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _taggedTemplateLiteral from\"/home/someone/kucoin/tesnet20_08/amm-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React from'react';import styled from'styled-components';import{useWeb3React}from'@web3-react/core';import{Button,useWalletModal}from'@pancakeswap-libs/uikit';import{injected,walletconnect}from'connectors';import useI18n from'hooks/useI18n';import{jsx as _jsx}from\"react/jsx-runtime\";var StyledSwapButton=styled(Button)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  background-color: #48cae4;\\n  box-shadow: none;\\n  transition: all 0.2s ease-in-out;\\n  border: 2px solid white;\\n  font-size: 20px;\\n  font-weight: 600;\\n\\n  &:hover {\\n    background-color: #fff;\\n    border: 2px solid #48cae4 !important;\\n    color: #48cae4;\\n\\n    & > svg,\\n    & > svg > * {\\n      fill: #48cae4;\\n    }\\n  }\\n\\n  &:focus {\\n    box-shadow: none !important;\\n  }\\n\\n  &:active {\\n    background-color: #fff;\\n  }\\n\"])));var UnlockButton=function UnlockButton(props){var TranslateString=useI18n();var _useWeb3React=useWeb3React(),account=_useWeb3React.account,activate=_useWeb3React.activate,deactivate=_useWeb3React.deactivate;var handleLogin=function handleLogin(connectorId){if(connectorId==='walletconnect'){return activate(walletconnect);}return activate(injected);};var _useWalletModal=useWalletModal(handleLogin,deactivate,account),onPresentConnectModal=_useWalletModal.onPresentConnectModal;return/*#__PURE__*/_jsx(StyledSwapButton,_objectSpread(_objectSpread({onClick:onPresentConnectModal},props),{},{children:TranslateString(292,'Unlock Wallet')}));};export default UnlockButton;","map":{"version":3,"sources":["/home/someone/kucoin/tesnet20_08/amm-front/src/components/ConnectWalletButton/index.tsx"],"names":["React","styled","useWeb3React","Button","useWalletModal","injected","walletconnect","useI18n","StyledSwapButton","UnlockButton","props","TranslateString","account","activate","deactivate","handleLogin","connectorId","onPresentConnectModal"],"mappings":"qWAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,YAAT,KAA6B,kBAA7B,CACA,OAASC,MAAT,CAA2CC,cAA3C,KAAiE,yBAAjE,CACA,OAASC,QAAT,CAAmBC,aAAnB,KAAwC,YAAxC,CACA,MAAOC,CAAAA,OAAP,KAAoB,eAApB,C,2CAEA,GAAMC,CAAAA,gBAAgB,CAAGP,MAAM,CAACE,MAAD,CAAT,yfAAtB,CA4BA,GAAMM,CAAAA,YAAmC,CAAG,QAAtCA,CAAAA,YAAsC,CAAAC,KAAK,CAAI,CACnD,GAAMC,CAAAA,eAAe,CAAGJ,OAAO,EAA/B,CACA,kBAA0CL,YAAY,EAAtD,CAAQU,OAAR,eAAQA,OAAR,CAAiBC,QAAjB,eAAiBA,QAAjB,CAA2BC,UAA3B,eAA2BA,UAA3B,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,WAAD,CAA8B,CAChD,GAAIA,WAAW,GAAK,eAApB,CAAqC,CACnC,MAAOH,CAAAA,QAAQ,CAACP,aAAD,CAAf,CACD,CACD,MAAOO,CAAAA,QAAQ,CAACR,QAAD,CAAf,CACD,CALD,CAOA,oBAAkCD,cAAc,CAACW,WAAD,CAAcD,UAAd,CAA0BF,OAA1B,CAAhD,CAAQK,qBAAR,iBAAQA,qBAAR,CAEA,mBACE,KAAC,gBAAD,8BAAkB,OAAO,CAAEA,qBAA3B,EAAsDP,KAAtD,eACGC,eAAe,CAAC,GAAD,CAAM,eAAN,CADlB,GADF,CAKD,CAlBD,CAoBA,cAAeF,CAAAA,YAAf","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport { Button, ButtonProps, ConnectorId, useWalletModal } from '@pancakeswap-libs/uikit'\nimport { injected, walletconnect } from 'connectors'\nimport useI18n from 'hooks/useI18n'\n\nconst StyledSwapButton = styled(Button)`\n  background-color: #48cae4;\n  box-shadow: none;\n  transition: all 0.2s ease-in-out;\n  border: 2px solid white;\n  font-size: 20px;\n  font-weight: 600;\n\n  &:hover {\n    background-color: #fff;\n    border: 2px solid #48cae4 !important;\n    color: #48cae4;\n\n    & > svg,\n    & > svg > * {\n      fill: #48cae4;\n    }\n  }\n\n  &:focus {\n    box-shadow: none !important;\n  }\n\n  &:active {\n    background-color: #fff;\n  }\n`\n\nconst UnlockButton: React.FC<ButtonProps> = props => {\n  const TranslateString = useI18n()\n  const { account, activate, deactivate } = useWeb3React()\n\n  const handleLogin = (connectorId: ConnectorId) => {\n    if (connectorId === 'walletconnect') {\n      return activate(walletconnect)\n    }\n    return activate(injected)\n  }\n\n  const { onPresentConnectModal } = useWalletModal(handleLogin, deactivate, account as string)\n\n  return (\n    <StyledSwapButton onClick={onPresentConnectModal} {...props}>\n      {TranslateString(292, 'Unlock Wallet')}\n    </StyledSwapButton>\n  )\n}\n\nexport default UnlockButton\n"]},"metadata":{},"sourceType":"module"}