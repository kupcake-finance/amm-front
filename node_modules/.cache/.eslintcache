[{"/home/someone/kucoin/tesnet20_08/amm-front/src/index.tsx":"1","/home/someone/kucoin/tesnet20_08/amm-front/src/i18n.ts":"2","/home/someone/kucoin/tesnet20_08/amm-front/src/style/Global.ts":"3","/home/someone/kucoin/tesnet20_08/amm-front/src/state/application/updater.ts":"4","/home/someone/kucoin/tesnet20_08/amm-front/src/state/lists/updater.ts":"5","/home/someone/kucoin/tesnet20_08/amm-front/src/Providers.tsx":"6","/home/someone/kucoin/tesnet20_08/amm-front/src/pages/App.tsx":"7","/home/someone/kucoin/tesnet20_08/amm-front/src/state/multicall/updater.tsx":"8","/home/someone/kucoin/tesnet20_08/amm-front/src/state/transactions/updater.tsx":"9","/home/someone/kucoin/tesnet20_08/amm-front/src/state/application/actions.ts":"10","/home/someone/kucoin/tesnet20_08/amm-front/src/state/lists/actions.ts":"11","/home/someone/kucoin/tesnet20_08/amm-front/src/hooks/useIsWindowVisible.ts":"12","/home/someone/kucoin/tesnet20_08/amm-front/src/hooks/useDebounce.ts":"13","/home/someone/kucoin/tesnet20_08/amm-front/src/hooks/useInterval.ts":"14","/home/someone/kucoin/tesnet20_08/amm-front/src/hooks/useFetchListCallback.ts":"15","/home/someone/kucoin/tesnet20_08/amm-front/src/hooks/TranslationsContext.ts":"16","/home/someone/kucoin/tesnet20_08/amm-front/src/hooks/LanguageContext.ts":"17","/home/someone/kucoin/tesnet20_08/amm-front/src/utils/getLibrary.ts":"18","/home/someone/kucoin/tesnet20_08/amm-front/src/utils/retry.ts":"19","/home/someone/kucoin/tesnet20_08/amm-front/src/utils/chunkArray.ts":"20","/home/someone/kucoin/tesnet20_08/amm-front/src/hooks/useContract.ts":"21","/home/someone/kucoin/tesnet20_08/amm-front/src/state/application/hooks.ts":"22","/home/someone/kucoin/tesnet20_08/amm-front/src/state/multicall/actions.ts":"23","/home/someone/kucoin/tesnet20_08/amm-front/src/state/transactions/actions.ts":"24","/home/someone/kucoin/tesnet20_08/amm-front/src/ThemeContext.tsx":"25","/home/someone/kucoin/tesnet20_08/amm-front/src/pages/AddLiquidity/redirects.tsx":"26","/home/someone/kucoin/tesnet20_08/amm-front/src/pages/RemoveLiquidity/redirects.tsx":"27","/home/someone/kucoin/tesnet20_08/amm-front/src/pages/Swap/redirects.tsx":"28","/home/someone/kucoin/tesnet20_08/amm-front/src/pages/MigrateV1/RemoveV1Exchange.tsx":"29","/home/someone/kucoin/tesnet20_08/amm-front/src/components/NewMenu/Menu.tsx":"30","/home/someone/kucoin/tesnet20_08/amm-front/src/state/index.ts":"31","/home/someone/kucoin/tesnet20_08/amm-front/src/hooks/index.ts":"32","/home/someone/kucoin/tesnet20_08/amm-front/src/constants/index.ts":"33","/home/someone/kucoin/tesnet20_08/amm-front/src/utils/getTokenList.ts":"34","/home/someone/kucoin/tesnet20_08/amm-front/src/utils/resolveENSContentHash.ts":"35","/home/someone/kucoin/tesnet20_08/amm-front/src/constants/abis/erc20.ts":"36","/home/someone/kucoin/tesnet20_08/amm-front/src/constants/abis/migrator.ts":"37","/home/someone/kucoin/tesnet20_08/amm-front/src/pages/AddLiquidity/index.tsx":"38","/home/someone/kucoin/tesnet20_08/amm-front/src/pages/Swap/index.tsx":"39","/home/someone/kucoin/tesnet20_08/amm-front/src/pages/RemoveLiquidity/index.tsx":"40","/home/someone/kucoin/tesnet20_08/amm-front/src/pages/Pool/index.tsx":"41","/home/someone/kucoin/tesnet20_08/amm-front/src/pages/PoolFinder/index.tsx":"42","/home/someone/kucoin/tesnet20_08/amm-front/src/components/Popups/index.tsx":"43","/home/someone/kucoin/tesnet20_08/amm-front/src/components/Web3ReactManager/index.tsx":"44","/home/someone/kucoin/tesnet20_08/amm-front/src/data/TotalSupply.ts":"45","/home/someone/kucoin/tesnet20_08/amm-front/src/components/NewMenu/DocsMenu.tsx":"46","/home/someone/kucoin/tesnet20_08/amm-front/src/components/NewMenu/MobileMenu.tsx":"47","/home/someone/kucoin/tesnet20_08/amm-front/src/components/NewMenu/CustomizedMenus.tsx":"48","/home/someone/kucoin/tesnet20_08/amm-front/src/state/multicall/hooks.ts":"49","/home/someone/kucoin/tesnet20_08/amm-front/src/hooks/Tokens.ts":"50","/home/someone/kucoin/tesnet20_08/amm-front/src/components/swap/styleds.tsx":"51","/home/someone/kucoin/tesnet20_08/amm-front/src/pages/MigrateV1/MigrateV1Exchange.tsx":"52","/home/someone/kucoin/tesnet20_08/amm-front/src/pages/MigrateV1/EmptyState.tsx":"53","/home/someone/kucoin/tesnet20_08/amm-front/src/pages/AppBody.tsx":"54","/home/someone/kucoin/tesnet20_08/amm-front/src/state/wallet/hooks.ts":"55","/home/someone/kucoin/tesnet20_08/amm-front/src/state/transactions/hooks.tsx":"56","/home/someone/kucoin/tesnet20_08/amm-front/src/utils/theme.ts":"57","/home/someone/kucoin/tesnet20_08/amm-front/src/state/multicall/reducer.ts":"58","/home/someone/kucoin/tesnet20_08/amm-front/src/state/lists/reducer.ts":"59","/home/someone/kucoin/tesnet20_08/amm-front/src/state/transactions/reducer.ts":"60","/home/someone/kucoin/tesnet20_08/amm-front/src/state/application/reducer.ts":"61","/home/someone/kucoin/tesnet20_08/amm-front/src/utils/index.ts":"62","/home/someone/kucoin/tesnet20_08/amm-front/src/connectors/index.ts":"63","/home/someone/kucoin/tesnet20_08/amm-front/src/state/mint/reducer.ts":"64","/home/someone/kucoin/tesnet20_08/amm-front/src/state/burn/reducer.ts":"65","/home/someone/kucoin/tesnet20_08/amm-front/src/state/swap/reducer.ts":"66","/home/someone/kucoin/tesnet20_08/amm-front/src/state/user/reducer.ts":"67","/home/someone/kucoin/tesnet20_08/amm-front/src/state/global/actions.ts":"68","/home/someone/kucoin/tesnet20_08/amm-front/src/constants/v1/index.ts":"69","/home/someone/kucoin/tesnet20_08/amm-front/src/constants/multicall/index.ts":"70","/home/someone/kucoin/tesnet20_08/amm-front/src/pages/AddLiquidity/PoolPriceBar.tsx":"71","/home/someone/kucoin/tesnet20_08/amm-front/src/state/user/hooks.tsx":"72","/home/someone/kucoin/tesnet20_08/amm-front/src/components/Popups/PopupItem.tsx":"73","/home/someone/kucoin/tesnet20_08/amm-front/src/data/Reserves.ts":"74","/home/someone/kucoin/tesnet20_08/amm-front/src/hooks/useApproveCallback.ts":"75","/home/someone/kucoin/tesnet20_08/amm-front/src/components/Shared/index.tsx":"76","/home/someone/kucoin/tesnet20_08/amm-front/src/components/Row/index.tsx":"77","/home/someone/kucoin/tesnet20_08/amm-front/src/components/QuestionHelper/index.tsx":"78","/home/someone/kucoin/tesnet20_08/amm-front/src/components/Column/index.tsx":"79","/home/someone/kucoin/tesnet20_08/amm-front/src/components/Card/index.tsx":"80","/home/someone/kucoin/tesnet20_08/amm-front/src/constants/lists.ts":"81","/home/someone/kucoin/tesnet20_08/amm-front/src/state/mint/actions.ts":"82","/home/someone/kucoin/tesnet20_08/amm-front/src/state/swap/actions.ts":"83","/home/someone/kucoin/tesnet20_08/amm-front/src/state/burn/actions.ts":"84","/home/someone/kucoin/tesnet20_08/amm-front/src/state/user/actions.ts":"85","/home/someone/kucoin/tesnet20_08/amm-front/src/connectors/bsc/bscConnector.ts":"86","/home/someone/kucoin/tesnet20_08/amm-front/src/connectors/Fortmatic.ts":"87","/home/someone/kucoin/tesnet20_08/amm-front/src/connectors/NetworkConnector.ts":"88","/home/someone/kucoin/tesnet20_08/amm-front/src/components/Loader/index.tsx":"89","/home/someone/kucoin/tesnet20_08/amm-front/src/utils/wrappedCurrency.ts":"90","/home/someone/kucoin/tesnet20_08/amm-front/src/hooks/useToggledVersion.ts":"91","/home/someone/kucoin/tesnet20_08/amm-front/src/components/Popups/TransactionPopup.tsx":"92","/home/someone/kucoin/tesnet20_08/amm-front/src/utils/prices.ts":"93","/home/someone/kucoin/tesnet20_08/amm-front/src/data/V1.ts":"94","/home/someone/kucoin/tesnet20_08/amm-front/src/data/Allowances.ts":"95","/home/someone/kucoin/tesnet20_08/amm-front/src/components/CurrencyLogo/index.tsx":"96","/home/someone/kucoin/tesnet20_08/amm-front/src/components/Shared/Type.tsx":"97","/home/someone/kucoin/tesnet20_08/amm-front/src/components/Shared/Common.tsx":"98","/home/someone/kucoin/tesnet20_08/amm-front/src/components/ConnectWalletButton/index.tsx":"99","/home/someone/kucoin/tesnet20_08/amm-front/src/hooks/useParsedQueryString.ts":"100","/home/someone/kucoin/tesnet20_08/amm-front/src/state/lists/hooks.ts":"101","/home/someone/kucoin/tesnet20_08/amm-front/src/hooks/useHttpLocations.ts":"102","/home/someone/kucoin/tesnet20_08/amm-front/src/components/pancake/CoinLogo.ts":"103","/home/someone/kucoin/tesnet20_08/amm-front/src/components/Tooltip/index.tsx":"104","/home/someone/kucoin/tesnet20_08/amm-front/src/hooks/useENSContentHash.ts":"105","/home/someone/kucoin/tesnet20_08/amm-front/src/utils/uriToHttp.ts":"106","/home/someone/kucoin/tesnet20_08/amm-front/src/components/Logo/index.tsx":"107","/home/someone/kucoin/tesnet20_08/amm-front/src/utils/parseENSAddress.ts":"108","/home/someone/kucoin/tesnet20_08/amm-front/src/utils/contenthashToUri.ts":"109","/home/someone/kucoin/tesnet20_08/amm-front/src/hooks/useI18n.ts":"110","/home/someone/kucoin/tesnet20_08/amm-front/src/utils/isZero.ts":"111","/home/someone/kucoin/tesnet20_08/amm-front/src/components/Popover/index.tsx":"112","/home/someone/kucoin/tesnet20_08/amm-front/src/utils/translateTextHelpers.ts":"113","/home/someone/kucoin/tesnet20_08/amm-front/src/components/Popups/ListUpdatePopup.tsx":"114","/home/someone/kucoin/tesnet20_08/amm-front/src/pages/Pool/styleds.tsx":"115","/home/someone/kucoin/tesnet20_08/amm-front/src/state/burn/hooks.ts":"116","/home/someone/kucoin/tesnet20_08/amm-front/src/utils/currencyId.ts":"117","/home/someone/kucoin/tesnet20_08/amm-front/src/utils/useDebouncedChangeHandler.tsx":"118","/home/someone/kucoin/tesnet20_08/amm-front/src/utils/listVersionLabel.ts":"119","/home/someone/kucoin/tesnet20_08/amm-front/src/state/swap/hooks.ts":"120","/home/someone/kucoin/tesnet20_08/amm-front/src/pages/AddLiquidity/ConfirmAddModalBottom.tsx":"121","/home/someone/kucoin/tesnet20_08/amm-front/src/components/SearchModal/CurrencySearchModal.tsx":"122","/home/someone/kucoin/tesnet20_08/amm-front/src/components/Slider/index.tsx":"123","/home/someone/kucoin/tesnet20_08/amm-front/src/components/NavigationTabs/index.tsx":"124","/home/someone/kucoin/tesnet20_08/amm-front/src/components/PositionCard/index.tsx":"125","/home/someone/kucoin/tesnet20_08/amm-front/src/components/DoubleLogo/index.tsx":"126","/home/someone/kucoin/tesnet20_08/amm-front/src/components/CurrencyInputPanel/index.tsx":"127","/home/someone/kucoin/tesnet20_08/amm-front/src/components/TransactionConfirmationModal/index.tsx":"128","/home/someone/kucoin/tesnet20_08/amm-front/src/utils/maxAmountSpend.ts":"129","/home/someone/kucoin/tesnet20_08/amm-front/src/hooks/useWrapCallback.ts":"130","/home/someone/kucoin/tesnet20_08/amm-front/src/hooks/useSwapCallback.ts":"131","/home/someone/kucoin/tesnet20_08/amm-front/src/components/swap/TradePrice.tsx":"132","/home/someone/kucoin/tesnet20_08/amm-front/src/components/swap/confirmPriceImpactWithoutFee.ts":"133","/home/someone/kucoin/tesnet20_08/amm-front/src/components/swap/BetterTradeLink.tsx":"134","/home/someone/kucoin/tesnet20_08/amm-front/src/components/swap/AdvancedSwapDetailsDropdown.tsx":"135","/home/someone/kucoin/tesnet20_08/amm-front/src/state/mint/hooks.ts":"136","/home/someone/kucoin/tesnet20_08/amm-front/src/components/swap/ConfirmSwapModal.tsx":"137","/home/someone/kucoin/tesnet20_08/amm-front/src/components/TranslatedText/index.tsx":"138","/home/someone/kucoin/tesnet20_08/amm-front/src/hooks/useENS.ts":"139","/home/someone/kucoin/tesnet20_08/amm-front/src/hooks/Trades.ts":"140","/home/someone/kucoin/tesnet20_08/amm-front/src/components/CardNav/index.tsx":"141","/home/someone/kucoin/tesnet20_08/amm-front/src/components/PageHeader/index.tsx":"142","/home/someone/kucoin/tesnet20_08/amm-front/src/hooks/useLast.ts":"143","/home/someone/kucoin/tesnet20_08/amm-front/src/components/SearchModal/CurrencySearch.tsx":"144","/home/someone/kucoin/tesnet20_08/amm-front/src/components/SearchModal/ListSelect.tsx":"145","/home/someone/kucoin/tesnet20_08/amm-front/src/utils/v1SwapArguments.ts":"146","/home/someone/kucoin/tesnet20_08/amm-front/src/components/TransactionConfirmationModal/TransactionSubmittedContent.tsx":"147","/home/someone/kucoin/tesnet20_08/amm-front/src/components/TransactionConfirmationModal/TransactionErrorContent.tsx":"148","/home/someone/kucoin/tesnet20_08/amm-front/src/components/TransactionConfirmationModal/ConfirmationModalContent.tsx":"149","/home/someone/kucoin/tesnet20_08/amm-front/src/components/TransactionConfirmationModal/ConfirmationPendingContent.tsx":"150","/home/someone/kucoin/tesnet20_08/amm-front/src/components/TransactionConfirmationModal/TransactionConfirmationModal.tsx":"151","/home/someone/kucoin/tesnet20_08/amm-front/src/components/ProgressSteps/index.tsx":"152","/home/someone/kucoin/tesnet20_08/amm-front/src/components/SyrupWarningModal/index.tsx":"153","/home/someone/kucoin/tesnet20_08/amm-front/src/components/TokenWarningModal/index.tsx":"154","/home/someone/kucoin/tesnet20_08/amm-front/src/hooks/useENSAddress.ts":"155","/home/someone/kucoin/tesnet20_08/amm-front/src/hooks/useENSName.ts":"156","/home/someone/kucoin/tesnet20_08/amm-front/src/components/AddressInputPanel/index.tsx":"157","/home/someone/kucoin/tesnet20_08/amm-front/src/components/Pane/index.tsx":"158","/home/someone/kucoin/tesnet20_08/amm-front/src/components/swap/AdvancedSwapDetails.tsx":"159","/home/someone/kucoin/tesnet20_08/amm-front/src/components/swap/SwapModalHeader.tsx":"160","/home/someone/kucoin/tesnet20_08/amm-front/src/components/swap/SwapModalFooter.tsx":"161","/home/someone/kucoin/tesnet20_08/amm-front/src/components/PageHeader/SettingsModal.tsx":"162","/home/someone/kucoin/tesnet20_08/amm-front/src/components/PageHeader/RecentTransactionsModal.tsx":"163","/home/someone/kucoin/tesnet20_08/amm-front/src/components/SearchModal/filtering.ts":"164","/home/someone/kucoin/tesnet20_08/amm-front/src/components/SearchModal/sorting.ts":"165","/home/someone/kucoin/tesnet20_08/amm-front/src/hooks/useToggle.ts":"166","/home/someone/kucoin/tesnet20_08/amm-front/src/components/Modal/index.tsx":"167","/home/someone/kucoin/tesnet20_08/amm-front/src/components/SearchModal/styleds.tsx":"168","/home/someone/kucoin/tesnet20_08/amm-front/src/components/SearchModal/SortButton.tsx":"169","/home/someone/kucoin/tesnet20_08/amm-front/src/components/SearchModal/CommonBases.tsx":"170","/home/someone/kucoin/tesnet20_08/amm-front/src/hooks/useOnClickOutside.tsx":"171","/home/someone/kucoin/tesnet20_08/amm-front/src/components/SearchModal/CurrencyList.tsx":"172","/home/someone/kucoin/tesnet20_08/amm-front/src/components/NumericalInput/index.tsx":"173","/home/someone/kucoin/tesnet20_08/amm-front/src/components/TransactionConfirmationModal/helpers.tsx":"174","/home/someone/kucoin/tesnet20_08/amm-front/src/components/swap/FormattedPriceImpact.tsx":"175","/home/someone/kucoin/tesnet20_08/amm-front/src/components/swap/SwapRoute.tsx":"176","/home/someone/kucoin/tesnet20_08/amm-front/src/components/PageHeader/TransactionDeadlineSetting.tsx":"177","/home/someone/kucoin/tesnet20_08/amm-front/src/components/PageHeader/SlippageToleranceSetting.tsx":"178","/home/someone/kucoin/tesnet20_08/amm-front/src/components/ListLogo/index.tsx":"179","/home/someone/kucoin/tesnet20_08/amm-front/src/components/NewMenu/DexMenu.tsx":"180","/home/someone/kucoin/tesnet20_08/amm-front/src/components/NewMenu/YieldMenu.tsx":"181","/home/someone/kucoin/tesnet20_08/amm-front/src/components/Menu/index.tsx":"182","/home/someone/kucoin/tesnet20_08/amm-front/src/components/Menu/config.ts":"183","/home/someone/kucoin/tesnet20_08/amm-front/src/hooks/useGetPriceData.ts":"184","/home/someone/kucoin/tesnet20_08/amm-front/src/hooks/useTheme.ts":"185","/home/someone/kucoin/tesnet20_08/amm-front/src/constants/localisation/languageCodes.ts":"186","/home/someone/kucoin/tesnet20_08/amm-front/src/constants/eggPriceContracts.ts":"187"},{"size":1006,"mtime":1626715623851,"results":"188","hashOfConfig":"189"},{"size":509,"mtime":1626715623495,"results":"190","hashOfConfig":"189"},{"size":669,"mtime":1626715623491,"results":"191","hashOfConfig":"189"},{"size":1895,"mtime":1626715623603,"results":"192","hashOfConfig":"189"},{"size":3614,"mtime":1626715623591,"results":"193","hashOfConfig":"189"},{"size":859,"mtime":1626715623491,"results":"194","hashOfConfig":"189"},{"size":5850,"mtime":1626715623863,"results":"195","hashOfConfig":"189"},{"size":7902,"mtime":1626715623563,"results":"196","hashOfConfig":"189"},{"size":3043,"mtime":1626715623619,"results":"197","hashOfConfig":"189"},{"size":844,"mtime":1626715623603,"results":"198","hashOfConfig":"189"},{"size":982,"mtime":1626715623591,"results":"199","hashOfConfig":"189"},{"size":786,"mtime":1626715623687,"results":"200","hashOfConfig":"189"},{"size":711,"mtime":1626715623723,"results":"201","hashOfConfig":"189"},{"size":642,"mtime":1626715623711,"results":"202","hashOfConfig":"189"},{"size":1900,"mtime":1626715623723,"results":"203","hashOfConfig":"189"},{"size":420,"mtime":1626715623707,"results":"204","hashOfConfig":"189"},{"size":696,"mtime":1626715623699,"results":"205","hashOfConfig":"189"},{"size":221,"mtime":1626715623511,"results":"206","hashOfConfig":"189"},{"size":1858,"mtime":1626715623503,"results":"207","hashOfConfig":"189"},{"size":523,"mtime":1626715623499,"results":"208","hashOfConfig":"189"},{"size":3697,"mtime":1626715623699,"results":"209","hashOfConfig":"189"},{"size":1874,"mtime":1626715623599,"results":"210","hashOfConfig":"189"},{"size":1683,"mtime":1626715623563,"results":"211","hashOfConfig":"189"},{"size":938,"mtime":1626715623619,"results":"212","hashOfConfig":"189"},{"size":1551,"mtime":1626715623735,"results":"213","hashOfConfig":"189"},{"size":999,"mtime":1626715623871,"results":"214","hashOfConfig":"189"},{"size":562,"mtime":1626715623855,"results":"215","hashOfConfig":"189"},{"size":876,"mtime":1626715623867,"results":"216","hashOfConfig":"189"},{"size":7003,"mtime":1626715623855,"results":"217","hashOfConfig":"189"},{"size":4754,"mtime":1626827760380,"results":"218","hashOfConfig":"189"},{"size":1290,"mtime":1626717267575,"results":"219","hashOfConfig":"189"},{"size":3050,"mtime":1626715623703,"results":"220","hashOfConfig":"189"},{"size":6078,"mtime":1626909512700,"results":"221","hashOfConfig":"189"},{"size":2728,"mtime":1626715623535,"results":"222","hashOfConfig":"189"},{"size":1694,"mtime":1626715623523,"results":"223","hashOfConfig":"189"},{"size":350,"mtime":1626715623895,"results":"224","hashOfConfig":"189"},{"size":157,"mtime":1626715623903,"results":"225","hashOfConfig":"189"},{"size":18234,"mtime":1626715623875,"results":"226","hashOfConfig":"189"},{"size":21904,"mtime":1626715623867,"results":"227","hashOfConfig":"189"},{"size":26439,"mtime":1626715623859,"results":"228","hashOfConfig":"189"},{"size":6389,"mtime":1626995096759,"results":"229","hashOfConfig":"189"},{"size":7335,"mtime":1626715623863,"results":"230","hashOfConfig":"189"},{"size":1781,"mtime":1626715623819,"results":"231","hashOfConfig":"189"},{"size":2301,"mtime":1626715623851,"results":"232","hashOfConfig":"189"},{"size":712,"mtime":1626715623555,"results":"233","hashOfConfig":"189"},{"size":3733,"mtime":1626827760380,"results":"234","hashOfConfig":"189"},{"size":6784,"mtime":1626827760380,"results":"235","hashOfConfig":"189"},{"size":3201,"mtime":1626827760380,"results":"236","hashOfConfig":"189"},{"size":7869,"mtime":1626715623559,"results":"237","hashOfConfig":"189"},{"size":4009,"mtime":1626715623683,"results":"238","hashOfConfig":"189"},{"size":3339,"mtime":1626715623803,"results":"239","hashOfConfig":"189"},{"size":14503,"mtime":1626715623855,"results":"240","hashOfConfig":"189"},{"size":402,"mtime":1626715623855,"results":"241","hashOfConfig":"189"},{"size":698,"mtime":1626715623875,"results":"242","hashOfConfig":"189"},{"size":4708,"mtime":1626715623575,"results":"243","hashOfConfig":"189"},{"size":2798,"mtime":1626715623611,"results":"244","hashOfConfig":"189"},{"size":456,"mtime":1626715623535,"results":"245","hashOfConfig":"189"},{"size":3940,"mtime":1626715623559,"results":"246","hashOfConfig":"189"},{"size":5332,"mtime":1626715623587,"results":"247","hashOfConfig":"189"},{"size":1901,"mtime":1626715623611,"results":"248","hashOfConfig":"189"},{"size":1714,"mtime":1626715623599,"results":"249","hashOfConfig":"189"},{"size":3758,"mtime":1626909642915,"results":"250","hashOfConfig":"189"},{"size":2063,"mtime":1626909636830,"results":"251","hashOfConfig":"189"},{"size":1272,"mtime":1626715623567,"results":"252","hashOfConfig":"189"},{"size":525,"mtime":1626715623607,"results":"253","hashOfConfig":"189"},{"size":2459,"mtime":1626715623579,"results":"254","hashOfConfig":"189"},{"size":4788,"mtime":1626715623595,"results":"255","hashOfConfig":"189"},{"size":287,"mtime":1626715623575,"results":"256","hashOfConfig":"189"},{"size":638,"mtime":1626995096759,"results":"257","hashOfConfig":"189"},{"size":346,"mtime":1626914696412,"results":"258","hashOfConfig":"189"},{"size":1747,"mtime":1626715623871,"results":"259","hashOfConfig":"189"},{"size":8286,"mtime":1626715623591,"results":"260","hashOfConfig":"189"},{"size":2525,"mtime":1626715623819,"results":"261","hashOfConfig":"189"},{"size":2081,"mtime":1626715623551,"results":"262","hashOfConfig":"189"},{"size":4257,"mtime":1626715623727,"results":"263","hashOfConfig":"189"},{"size":48,"mtime":1626715623839,"results":"264","hashOfConfig":"189"},{"size":1098,"mtime":1626715623763,"results":"265","hashOfConfig":"189"},{"size":1050,"mtime":1626995096759,"results":"266","hashOfConfig":"189"},{"size":647,"mtime":1626715623743,"results":"267","hashOfConfig":"189"},{"size":1397,"mtime":1626715623771,"results":"268","hashOfConfig":"189"},{"size":232,"mtime":1626715623887,"results":"269","hashOfConfig":"189"},{"size":321,"mtime":1626715623571,"results":"270","hashOfConfig":"189"},{"size":670,"mtime":1626715623583,"results":"271","hashOfConfig":"189"},{"size":297,"mtime":1626715623607,"results":"272","hashOfConfig":"189"},{"size":1429,"mtime":1626715623599,"results":"273","hashOfConfig":"189"},{"size":6174,"mtime":1626715623543,"results":"274","hashOfConfig":"189"},{"size":1503,"mtime":1626715623547,"results":"275","hashOfConfig":"189"},{"size":5673,"mtime":1626717205237,"results":"276","hashOfConfig":"189"},{"size":1094,"mtime":1626715623811,"results":"277","hashOfConfig":"189"},{"size":855,"mtime":1626715623499,"results":"278","hashOfConfig":"189"},{"size":393,"mtime":1626715623711,"results":"279","hashOfConfig":"189"},{"size":1240,"mtime":1626715623815,"results":"280","hashOfConfig":"189"},{"size":3199,"mtime":1626715623523,"results":"281","hashOfConfig":"189"},{"size":6293,"mtime":1626715623551,"results":"282","hashOfConfig":"189"},{"size":704,"mtime":1626715623555,"results":"283","hashOfConfig":"189"},{"size":1953,"mtime":1626715623831,"results":"284","hashOfConfig":"189"},{"size":896,"mtime":1626715623835,"results":"285","hashOfConfig":"189"},{"size":3903,"mtime":1626715623835,"results":"286","hashOfConfig":"189"},{"size":1355,"mtime":1626715623811,"results":"287","hashOfConfig":"189"},{"size":359,"mtime":1626715623731,"results":"288","hashOfConfig":"189"},{"size":3678,"mtime":1626916150579,"results":"289","hashOfConfig":"189"},{"size":717,"mtime":1626715623703,"results":"290","hashOfConfig":"189"},{"size":208,"mtime":1626715623827,"results":"291","hashOfConfig":"189"},{"size":990,"mtime":1626995096759,"results":"292","hashOfConfig":"189"},{"size":1245,"mtime":1626715623715,"results":"293","hashOfConfig":"189"},{"size":775,"mtime":1626715623507,"results":"294","hashOfConfig":"189"},{"size":781,"mtime":1626715623827,"results":"295","hashOfConfig":"189"},{"size":360,"mtime":1626715623507,"results":"296","hashOfConfig":"189"},{"size":1418,"mtime":1626715623519,"results":"297","hashOfConfig":"189"},{"size":525,"mtime":1626715623687,"results":"298","hashOfConfig":"189"},{"size":185,"mtime":1626715623515,"results":"299","hashOfConfig":"189"},{"size":3100,"mtime":1626715623763,"results":"300","hashOfConfig":"189"},{"size":1408,"mtime":1626715623511,"results":"301","hashOfConfig":"189"},{"size":3630,"mtime":1626715623815,"results":"302","hashOfConfig":"189"},{"size":1225,"mtime":1626715623859,"results":"303","hashOfConfig":"189"},{"size":5301,"mtime":1626715623603,"results":"304","hashOfConfig":"189"},{"size":287,"mtime":1626715623531,"results":"305","hashOfConfig":"189"},{"size":1143,"mtime":1626715623535,"results":"306","hashOfConfig":"189"},{"size":182,"mtime":1626715623507,"results":"307","hashOfConfig":"189"},{"size":10364,"mtime":1626715623579,"results":"308","hashOfConfig":"189"},{"size":2781,"mtime":1626715623867,"results":"309","hashOfConfig":"189"},{"size":2366,"mtime":1626715623851,"results":"310","hashOfConfig":"189"},{"size":3207,"mtime":1626715623807,"results":"311","hashOfConfig":"189"},{"size":4369,"mtime":1626715623759,"results":"312","hashOfConfig":"189"},{"size":8939,"mtime":1626715623759,"results":"313","hashOfConfig":"189"},{"size":1115,"mtime":1626715623807,"results":"314","hashOfConfig":"189"},{"size":6713,"mtime":1626715623747,"results":"315","hashOfConfig":"189"},{"size":452,"mtime":1626715623775,"results":"316","hashOfConfig":"189"},{"size":655,"mtime":1626715623531,"results":"317","hashOfConfig":"189"},{"size":3143,"mtime":1626715623707,"results":"318","hashOfConfig":"189"},{"size":9796,"mtime":1626715623727,"results":"319","hashOfConfig":"189"},{"size":1169,"mtime":1626715623791,"results":"320","hashOfConfig":"189"},{"size":999,"mtime":1626715623799,"results":"321","hashOfConfig":"189"},{"size":1312,"mtime":1626715623795,"results":"322","hashOfConfig":"189"},{"size":960,"mtime":1626715623795,"results":"323","hashOfConfig":"189"},{"size":7136,"mtime":1626715623567,"results":"324","hashOfConfig":"189"},{"size":3226,"mtime":1626715623799,"results":"325","hashOfConfig":"189"},{"size":353,"mtime":1626715623763,"results":"326","hashOfConfig":"189"},{"size":765,"mtime":1626715623719,"results":"327","hashOfConfig":"189"},{"size":4241,"mtime":1626715623699,"results":"328","hashOfConfig":"189"},{"size":1100,"mtime":1626715623807,"results":"329","hashOfConfig":"189"},{"size":4674,"mtime":1626715623751,"results":"330","hashOfConfig":"189"},{"size":1024,"mtime":1626715623715,"results":"331","hashOfConfig":"189"},{"size":8432,"mtime":1626995096759,"results":"332","hashOfConfig":"189"},{"size":10607,"mtime":1626715623839,"results":"333","hashOfConfig":"189"},{"size":3049,"mtime":1626715623515,"results":"334","hashOfConfig":"189"},{"size":1970,"mtime":1626715623775,"results":"335","hashOfConfig":"189"},{"size":1162,"mtime":1626715623771,"results":"336","hashOfConfig":"189"},{"size":656,"mtime":1626715623771,"results":"337","hashOfConfig":"189"},{"size":1292,"mtime":1626715623775,"results":"338","hashOfConfig":"189"},{"size":1079,"mtime":1626715623771,"results":"339","hashOfConfig":"189"},{"size":2449,"mtime":1626715623735,"results":"340","hashOfConfig":"189"},{"size":2796,"mtime":1626715623803,"results":"341","hashOfConfig":"189"},{"size":5150,"mtime":1626715623851,"results":"342","hashOfConfig":"189"},{"size":1394,"mtime":1626715623691,"results":"343","hashOfConfig":"189"},{"size":1596,"mtime":1626715623703,"results":"344","hashOfConfig":"189"},{"size":3732,"mtime":1626715623755,"results":"345","hashOfConfig":"189"},{"size":157,"mtime":1626715623783,"results":"346","hashOfConfig":"189"},{"size":3781,"mtime":1626715623803,"results":"347","hashOfConfig":"189"},{"size":5663,"mtime":1626715623787,"results":"348","hashOfConfig":"189"},{"size":4824,"mtime":1626715623787,"results":"349","hashOfConfig":"189"},{"size":727,"mtime":1626715623751,"results":"350","hashOfConfig":"189"},{"size":3628,"mtime":1626995096759,"results":"351","hashOfConfig":"189"},{"size":980,"mtime":1626715623839,"results":"352","hashOfConfig":"189"},{"size":1687,"mtime":1626715623847,"results":"353","hashOfConfig":"189"},{"size":272,"mtime":1626715623731,"results":"354","hashOfConfig":"189"},{"size":3178,"mtime":1626715623823,"results":"355","hashOfConfig":"189"},{"size":1921,"mtime":1626715623847,"results":"356","hashOfConfig":"189"},{"size":720,"mtime":1626715623843,"results":"357","hashOfConfig":"189"},{"size":2250,"mtime":1626715623847,"results":"358","hashOfConfig":"189"},{"size":741,"mtime":1626715623699,"results":"359","hashOfConfig":"189"},{"size":6335,"mtime":1626715623843,"results":"360","hashOfConfig":"189"},{"size":2271,"mtime":1626715623823,"results":"361","hashOfConfig":"189"},{"size":2166,"mtime":1626715623775,"results":"362","hashOfConfig":"189"},{"size":582,"mtime":1626715623791,"results":"363","hashOfConfig":"189"},{"size":1388,"mtime":1626715623803,"results":"364","hashOfConfig":"189"},{"size":2149,"mtime":1626715623747,"results":"365","hashOfConfig":"189"},{"size":4378,"mtime":1626715623747,"results":"366","hashOfConfig":"189"},{"size":574,"mtime":1626715623755,"results":"367","hashOfConfig":"189"},{"size":3434,"mtime":1626827760380,"results":"368","hashOfConfig":"189"},{"size":3076,"mtime":1626827760380,"results":"369","hashOfConfig":"189"},{"size":1415,"mtime":1626715623739,"results":"370","hashOfConfig":"189"},{"size":2102,"mtime":1626715623739,"results":"371","hashOfConfig":"189"},{"size":1669,"mtime":1626715623719,"results":"372","hashOfConfig":"189"},{"size":354,"mtime":1626715623719,"results":"373","hashOfConfig":"189"},{"size":1997,"mtime":1626715623907,"results":"374","hashOfConfig":"189"},{"size":299,"mtime":1626715623887,"results":"375","hashOfConfig":"189"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},"93iu6w",{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"391","usedDeprecatedRules":"378"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"438","usedDeprecatedRules":"378"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"445","usedDeprecatedRules":"378"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"458","usedDeprecatedRules":"378"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"463"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"466","usedDeprecatedRules":"378"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"469","messages":"470","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"475","usedDeprecatedRules":"378"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"478","usedDeprecatedRules":"378"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"481","usedDeprecatedRules":"378"},{"filePath":"482","messages":"483","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"484","messages":"485","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"488","messages":"489","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"494","messages":"495","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"502","messages":"503","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"504","messages":"505","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"506","messages":"507","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"508","messages":"509","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"510","messages":"511","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"512","messages":"513","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"514","messages":"515","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"516","messages":"517","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"518","messages":"519","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"520","messages":"521","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"522","messages":"523","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"524","messages":"525","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"526","messages":"527","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"528","messages":"529","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"530","messages":"531","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"532","messages":"533","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"534","messages":"535","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"536","messages":"537","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"538","messages":"539","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"540","messages":"541","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"542","messages":"543","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"544","messages":"545","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"546","messages":"547","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"548","messages":"549","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"550","messages":"551","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"552","messages":"553","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"554","messages":"555","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"556","messages":"557","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"558","messages":"559","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"560","messages":"561","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"562","usedDeprecatedRules":"378"},{"filePath":"563","messages":"564","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"565","messages":"566","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"567","messages":"568","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"569","messages":"570","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"571","messages":"572","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"573","messages":"574","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"575","messages":"576","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"577","messages":"578","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"579","messages":"580","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"581","messages":"582","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"583","messages":"584","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"585","messages":"586","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"587","messages":"588","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"589"},{"filePath":"590","messages":"591","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"592","messages":"593","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"594","messages":"595","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"596","messages":"597","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"598","messages":"599","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"600","messages":"601","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"602","messages":"603","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"604","messages":"605","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"606","messages":"607","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"608","messages":"609","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"610","messages":"611","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"612","messages":"613","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"614","messages":"615","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"616","messages":"617","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"618","messages":"619","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"620","messages":"621","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"622","messages":"623","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"624","messages":"625","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"626","messages":"627","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"628","messages":"629","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"630","messages":"631","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"632","messages":"633","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"634","messages":"635","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"636","messages":"637","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"638","usedDeprecatedRules":"378"},{"filePath":"639","messages":"640","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"641","messages":"642","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"643","messages":"644","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"645","messages":"646","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"647","messages":"648","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"649","messages":"650","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"651","messages":"652","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"653","messages":"654","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"655","messages":"656","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"657","messages":"658","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"659","messages":"660","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"661","messages":"662","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"663","messages":"664","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"665","messages":"666","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"667","messages":"668","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"669","messages":"670","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"671","usedDeprecatedRules":"378"},{"filePath":"672","messages":"673","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"674","messages":"675","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"676","messages":"677","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"678"},{"filePath":"679","messages":"680","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"681","messages":"682","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"683","messages":"684","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"685","usedDeprecatedRules":"378"},{"filePath":"686","messages":"687","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"688","messages":"689","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"690","messages":"691","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"692","messages":"693","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"694","messages":"695","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"696","messages":"697","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"698","messages":"699","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"700","usedDeprecatedRules":"378"},{"filePath":"701","messages":"702","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"703","messages":"704","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"705","messages":"706","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"707","messages":"708","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"709","messages":"710","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"711","usedDeprecatedRules":"378"},{"filePath":"712","messages":"713","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"714","messages":"715","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"716","messages":"717","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"718","messages":"719","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"720","messages":"721","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"722","messages":"723","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"724","messages":"725","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"726","messages":"727","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"728","messages":"729","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"730","messages":"731","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"732","messages":"733","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"734","messages":"735","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"736","messages":"737","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"738","messages":"739","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"740","messages":"741","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"742","messages":"743","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"744","messages":"745","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"746","messages":"747","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"748","usedDeprecatedRules":"378"},{"filePath":"749","messages":"750","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"751","usedDeprecatedRules":"378"},{"filePath":"752","messages":"753","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"754","messages":"755","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"756","usedDeprecatedRules":"378"},{"filePath":"757","messages":"758","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"759","usedDeprecatedRules":"378"},{"filePath":"760","messages":"761","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"762","messages":"763","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"764","messages":"765","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"766","usedDeprecatedRules":"378"},{"filePath":"767","messages":"768","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"769","messages":"770","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"771","messages":"772","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},"/home/someone/kucoin/tesnet20_08/amm-front/src/index.tsx",[],["773","774","775","776","777"],"/home/someone/kucoin/tesnet20_08/amm-front/src/i18n.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/style/Global.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/state/application/updater.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/state/lists/updater.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/Providers.tsx",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/pages/App.tsx",["778","779","780","781","782"],"import React, { Suspense, useEffect, useState } from 'react'\nimport { HashRouter, Route, Switch } from 'react-router-dom'\nimport styled from 'styled-components'\n// import { Credentials, StringTranslations } from '@crowdin/crowdin-api-client'\nimport Popups from '../components/Popups'\nimport Web3ReactManager from '../components/Web3ReactManager'\nimport AddLiquidity from './AddLiquidity'\nimport {\n  RedirectDuplicateTokenIds,\n  RedirectOldAddLiquidityPathStructure,\n  RedirectToAddLiquidity\n} from './AddLiquidity/redirects'\nimport MigrateV1 from './MigrateV1'\nimport MigrateV1Exchange from './MigrateV1/MigrateV1Exchange'\nimport RemoveV1Exchange from './MigrateV1/RemoveV1Exchange'\nimport Pool from './Pool'\nimport PoolFinder from './PoolFinder'\n// import Farm from './Farm'\nimport RemoveLiquidity from './RemoveLiquidity'\nimport { RedirectOldRemoveLiquidityPathStructure } from './RemoveLiquidity/redirects'\nimport Swap from './Swap'\nimport { RedirectPathToSwapOnly, RedirectToSwap } from './Swap/redirects'\nimport { EN, allLanguages } from '../constants/localisation/languageCodes'\nimport { LanguageContext } from '../hooks/LanguageContext'\nimport { TranslationsContext } from '../hooks/TranslationsContext'\n\nimport Menu from '../components/NewMenu/Menu'\n\nconst AppWrapper = styled.div`\n  display: flex;\n  flex-flow: column;\n  align-items: flex-start;\n  overflow-x: hidden;\n`\n\nconst BodyWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  padding: 32px 16px;\n  min-height: calc(100vh - 152px);\n  align-items: center;\n  flex: 1;\n  overflow-y: auto;\n  overflow-x: hidden;\n  z-index: 1;\n\n  background-image: url('/static/media/bg.bfd323f2.png');\n  background-repeat: no-repeat;\n  background-position: top;\n  background-size: contain;\n`\n\nconst Marginer = styled.div`\n  margin-top: 5rem;\n`\n\nexport default function App() {\n  const [selectedLanguage, setSelectedLanguage] = useState<any>(undefined)\n  const [translatedLanguage, setTranslatedLanguage] = useState<any>(undefined)\n  const [translations, setTranslations] = useState<Array<any>>([])\n  // const apiKey = `${process.env.REACT_APP_CROWDIN_APIKEY}`\n  // const projectId = parseInt(`${process.env.REACT_APP_CROWDIN_PROJECTID}`)\n  // const fileId = 6\n  //\n  // const credentials: Credentials = {\n  //   token: apiKey\n  // }\n  //\n  // const stringTranslationsApi = new StringTranslations(credentials)\n  //\n  // const getStoredLang = (storedLangCode: string) => {\n  //   return allLanguages.filter(language => {\n  //     return language.code === storedLangCode\n  //   })[0]\n  // }\n\n  // useEffect(() => {\n  //   const storedLangCode = localStorage.getItem('pancakeSwapLanguage')\n  //   if (storedLangCode) {\n  //     const storedLang = getStoredLang(storedLangCode)\n  //     setSelectedLanguage(storedLang)\n  //   } else {\n  //     setSelectedLanguage(EN)\n  //   }\n  // }, [])\n  //\n  // const fetchTranslationsForSelectedLanguage = async () => {\n  //   stringTranslationsApi\n  //     .listLanguageTranslations(projectId, selectedLanguage.code, undefined, fileId, 200)\n  //     .then(translationApiResponse => {\n  //       if (translationApiResponse.data.length < 1) {\n  //         setTranslations(['error'])\n  //       } else {\n  //         setTranslations(translationApiResponse.data)\n  //       }\n  //     })\n  //     .then(() => setTranslatedLanguage(selectedLanguage))\n  //     .catch(error => {\n  //       setTranslations(['error'])\n  //       console.error(error)\n  //     })\n  // }\n  //\n  // useEffect(() => {\n  //   if (selectedLanguage) {\n  //     fetchTranslationsForSelectedLanguage()\n  //   }\n  //   // eslint-disable-next-line react-hooks/exhaustive-deps\n  // }, [selectedLanguage])\n\n  return (\n    <Suspense fallback={null}>\n      <HashRouter>\n        <AppWrapper>\n          <LanguageContext.Provider\n            value={{ selectedLanguage, setSelectedLanguage, translatedLanguage, setTranslatedLanguage }}\n          >\n            <TranslationsContext.Provider value={{ translations, setTranslations }}>\n              <Menu />\n                <BodyWrapper>\n                  <Popups />\n                  <Web3ReactManager>\n                    <Switch>\n                      <Route exact strict path='/swap' component={Swap} />\n                      <Route exact strict path='/swap/:outputCurrency' component={RedirectToSwap} />\n                      <Route exact strict path='/send' component={RedirectPathToSwapOnly} />\n                      <Route exact strict path='/find' component={PoolFinder} />\n                      <Route exact strict path='/pool' component={Pool} />\n                      <Route exact strict path='/create' component={RedirectToAddLiquidity} />\n                      <Route exact path='/add' component={AddLiquidity} />\n                      <Route exact path='/add/:currencyIdA' component={RedirectOldAddLiquidityPathStructure} />\n                      <Route exact path='/add/:currencyIdA/:currencyIdB' component={RedirectDuplicateTokenIds} />\n                      <Route exact strict path='/remove/v1/:address' component={RemoveV1Exchange} />\n                      <Route exact strict path='/remove/:tokens' component={RedirectOldRemoveLiquidityPathStructure} />\n                      <Route exact strict path='/remove/:currencyIdA/:currencyIdB' component={RemoveLiquidity} />\n                      {/* <Route exact strict path='/migrate/v1' component={MigrateV1} /> */}\n                      {/* <Route exact strict path='/migrate/v1/:address' component={MigrateV1Exchange} /> */}\n                      <Route component={RedirectPathToSwapOnly} />\n                    </Switch>\n                  </Web3ReactManager>\n                  <Marginer />\n                </BodyWrapper>\n            </TranslationsContext.Provider>\n          </LanguageContext.Provider>\n        </AppWrapper>\n      </HashRouter>\n    </Suspense>\n  )\n}\n","/home/someone/kucoin/tesnet20_08/amm-front/src/state/multicall/updater.tsx",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/state/transactions/updater.tsx",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/state/application/actions.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/state/lists/actions.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/hooks/useIsWindowVisible.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/hooks/useDebounce.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/hooks/useInterval.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/hooks/useFetchListCallback.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/hooks/TranslationsContext.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/hooks/LanguageContext.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/utils/getLibrary.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/utils/retry.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/utils/chunkArray.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/hooks/useContract.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/state/application/hooks.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/state/multicall/actions.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/state/transactions/actions.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/ThemeContext.tsx",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/pages/AddLiquidity/redirects.tsx",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/pages/RemoveLiquidity/redirects.tsx",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/pages/Swap/redirects.tsx",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/pages/MigrateV1/RemoveV1Exchange.tsx",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/components/NewMenu/Menu.tsx",["783","784","785","786","787","788","789","790","791","792","793","794"],"import React, { useRef, useState } from 'react'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport styled from 'styled-components'\n// import { Link } from 'react-scroll'\nimport { withStyles } from '@material-ui/core/styles'\nimport { Button, Flex, Card, CardBody, Heading, Text } from '@pancakeswap-libs/uikit' \nimport UIMenu from '../Menu'\nimport CustomizedMenus from './CustomizedMenus'\nimport DocsMenu from './DocsMenu'\nimport MobileMenu from './MobileMenu'\nimport YieldMenu from './YieldMenu'\nimport DexMenu from './DexMenu'\n// import MetamaskMenu from './MetamaskMenu'\n\nconst MenuContainer = styled.div`\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  height: 65px;\n  background: white;\n  box-shadow: 0 0 10px #3c3c3c;\n  padding: 25px;\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    display: none;\n  }\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: flex;\n    position: fixed;\n    z-index: 10;\n  }\n  ${({ theme }) => theme.mediaQueries.lg} {\n    display: flex;\n    position: fixed;\n    z-index: 10;\n  }\n\n  & > a > img {\n    max-height: 54px;\n  }\n`\n\nconst MobileMenuContainer = styled.div`\n  ${({ theme }) => theme.mediaQueries.xs} {\n    display: flex;\n  }\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: none !important;\n  }\n  ${({ theme }) => theme.mediaQueries.lg} {\n    display: none !important;\n  }\n`\n\nconst IconImage = styled.img`\n  width: 24px;\n`\n\nconst StyledA = styled.a`\n  margin-left: 10px;\n  margin-right: 10px;\n  font-weight: 500;\n  font-size: 18px;\n\n  & > span {\n    font-size: 12px;\n    vertical-align: top;\n    color: #ff629a;\n  }\n\n  & > img {\n    max-height: 24px;\n  }\n\n\n\n  &:hover{\n    color: #ff629a !important;\n  }\n`\n\nconst StyledElement = styled.div`\n  margin-left: 10px;\n  margin-right: 10px;\n  font-weight: 500;\n  font-size: 18px;\n  cursor: pointer;\n`\n\nconst SmallImage = styled.img`\n  max-height: 24px;\n  margin-right: 10px;\n`\n\nconst RobotoButton = styled(Button)`\n  font-family: 'Roboto', sans-serif;\n  /* width: 300px; */\n  font-weight: 500;\n  font-size: 18px;\n  height: 35px;\n  background-color: rgba(255, 255, 255, 0.5) !important;\n  border: none;\n  box-shadow: 0 0 10px #ff629a;\n  border-radius: 60px;\n  /* font-family: 'Gloria Hallelujah', cursive; */\n  color: #48cae4;\n  transition: all 0.5s ease;\n  padding: 3px 10px;\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    margin: 10px auto;\n  }\n  ${({ theme }) => theme.mediaQueries.md} {\n    margin: 0px auto;\n  }\n  ${({ theme }) => theme.mediaQueries.lg} {\n    margin: 0px auto;\n  }\n\n  &:hover {\n    background-color: rgba(255, 255, 255, 0.5) !important;\n    border-color: white !important;\n    box-shadow: 0 0 35px #ff629a;\n  }\n\n  & > span {\n    font-family: 'Gloria Hallelujah', cursive;\n    margin-left: 6px;\n    font-weight: 600;\n    color: #ff629a;\n  }\n`\n\nconst LinksContainer = styled(Flex)`\n  width: 90%;\n  margin: 0 auto;\n  justify-content: center;\n`\nconst Background = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  min-height: 1400px;\n  background-image: url('/images/common/farms-bg-shady.png');\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: center;\n  z-index: -1;\n`\n\nconst WebContainer = styled.div``\n\nexport default function Menu() {\n  const location = useLocation()\n\n  const setPathName = () => {\n    const shortname = location.pathname.substring(0, 6)\n\n    return shortname === '/farms' || shortname === '/pools'\n      ? '/images/common/farms-bg-shady.png'\n      : '/images/common/landing-bg-shady.png'\n  }\n  return (\n    <>\n      <Background style={{ backgroundImage: `url(${setPathName()})` }} />\n      <MobileMenuContainer>\n        <MobileMenu />\n      </MobileMenuContainer>\n      <MenuContainer>\n        <>\n          <a href=\"/\">\n            <img src=\"/images/common/logo-ku.png\" alt=\"logo\" />\n          </a>\n        </>\n        <LinksContainer>\n          <StyledA href=\"https://kupcakeswap.finance\">\n            Home\n          </StyledA>\n          <StyledA href=\"https://presale.kupcakeswap.finance\">\n            Presale\n          </StyledA>\n          {/* <StyledA href=\"/swap\">Swap</StyledA> */}\n          {/* <StyledA href=\"/liquidity\">Liquidity</StyledA> */}\n          {/* <StyledA href=\"/farms\">Farms</StyledA> */}\n          {/* <StyledA href=\"/pools\">Pools</StyledA> */}\n          <DexMenu />\n          <YieldMenu />\n          <DocsMenu />\n          <CustomizedMenus />\n        </LinksContainer>\n\n        {/* <Flex justify-items=\"space-between\" alignItems=\"center\">\n          <RobotoButton>\n            <SmallImage src=\"/images/common/logo.png\" alt=\"token\" />\n            $00,00\n          </RobotoButton>\n        </Flex> */}\n        <WebContainer>\n          <UIMenu />\n        </WebContainer>\n      </MenuContainer>\n    </>\n  )\n}\n","/home/someone/kucoin/tesnet20_08/amm-front/src/state/index.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/hooks/index.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/constants/index.ts",["795"],"import { ChainId, JSBI, Percent, Token, WETH } from '@pancakeswap-libs/sdk-v2'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\n\n// import { bsc, fortmatic, injected, portis, walletconnect, walletlink } from '../connectors'\nimport { injected, bsc } from '../connectors'\n// TODO\nexport const ROUTER_ADDRESS = '0xA79f431aC13D413e838E01e73a6526f23Ed0a8AE'\n\n// a list of tokens by chain\ntype ChainTokenList = {\n  readonly [chainId in ChainId]: Token[]\n}\n\nexport const DAI = new Token(ChainId.MAINNET, '0x1af3f329e8be154074d8769d1ffa4ee058b1dbc3', 18, 'DAI', 'Dai Stablecoin')\nexport const BUSD = new Token(ChainId.MAINNET, '0xe9e7cea3dedca5984780bafc599bd69add087d56', 18, 'BUSD', 'Binance USD')\nexport const USDT = new Token(ChainId.MAINNET, '0x55d398326f99059ff775485246999027b3197955', 18, 'USDT', 'Tether USD')\nexport const EOS = new Token(ChainId.MAINNET, '0x56b6fb708fc5732dec1afc8d8556423a2edccbd6', 18, 'EOS', 'EOS Token')\nexport const DOT = new Token(ChainId.MAINNET, '0x7083609fce4d1d8dc0c979aab8c869ea2c873402', 18, 'DOT', 'Polkadot Token')\nexport const ETH = new Token(ChainId.MAINNET, '0x2170ed0880ac9a755fd29b2688956bd959f933f8', 18, 'ETH', 'Ethereum Token')\n\nconst WETH_ONLY: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET]],\n  [ChainId.BSCTESTNET]: [WETH[ChainId.BSCTESTNET]]\n}\n\n// used to construct intermediary pairs for trading\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\n  ...WETH_ONLY,\n  [ChainId.MAINNET]: [...WETH_ONLY[ChainId.MAINNET], DAI, BUSD, USDT, EOS, DOT]\n}\n\n/**\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\n * tokens.\n */\nexport const CUSTOM_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {\n    [ETH.address]: [DAI, WETH[ChainId.MAINNET]]\n  }\n}\n\n// used for display in the default list when adding liquidity\nexport const SUGGESTED_BASES: ChainTokenList = {\n  ...WETH_ONLY,\n  [ChainId.MAINNET]: [...WETH_ONLY[ChainId.MAINNET], DAI, BUSD, USDT]\n}\n\n// used to construct the list of all pairs we consider by default in the frontend\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\n  ...WETH_ONLY,\n  [ChainId.MAINNET]: [...WETH_ONLY[ChainId.MAINNET], DAI, BUSD, USDT]\n}\n\nexport const PINNED_PAIRS: { readonly [chainId in ChainId]?: [Token, Token][] } = {\n  [ChainId.MAINNET]: [\n    [\n      new Token(ChainId.MAINNET, '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82', 18, 'CAKE', 'PancakeSwap Token'),\n      new Token(ChainId.MAINNET, '0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c', 18, 'WKUP', 'Wrapped KUP')\n    ],\n    [BUSD, USDT],\n    [DAI, USDT]\n  ]\n}\n\nexport interface WalletInfo {\n  connector?: AbstractConnector\n  name: string\n  iconName: string\n  description: string\n  href: string | null\n  color: string\n  primary?: true\n  mobile?: true\n  mobileOnly?: true\n}\n\nexport const SUPPORTED_WALLETS: { [key: string]: WalletInfo } = {\n  // BSC: {\n  //   connector: bsc,\n  //   name: 'Binance Chain Wallet',\n  //   iconName: 'binance.svg',\n  //   description: 'Easy-to-use browser extension.',\n  //   href: null,\n  //   color: '#E8831D'\n  // },\n  INJECTED: {\n    connector: injected,\n    name: 'Injected',\n    iconName: 'arrow-right.svg',\n    description: 'Injected web3 provider.',\n    href: null,\n    color: '#010101',\n    primary: true\n  },\n  METAMASK: {\n    connector: injected,\n    name: 'MetaMask',\n    iconName: 'metamask.png',\n    description: 'Easy-to-use browser extension.',\n    href: null,\n    color: '#E8831D'\n  }\n  // WALLET_CONNECT: {\n  //   connector: walletconnect,\n  //   name: 'WalletConnect',\n  //   iconName: 'walletConnectIcon.svg',\n  //   description: 'Connect to Trust Wallet, Rainbow Wallet and more...',\n  //   href: null,\n  //   color: '#4196FC',\n  //   mobile: true\n  // },\n  // WALLET_LINK: {\n  //   connector: walletlink,\n  //   name: 'Coinbase Wallet',\n  //   iconName: 'coinbaseWalletIcon.svg',\n  //   description: 'Use Coinbase Wallet app on mobile device',\n  //   href: null,\n  //   color: '#315CF5'\n  // },\n  // COINBASE_LINK: {\n  //   name: 'Open in Coinbase Wallet',\n  //   iconName: 'coinbaseWalletIcon.svg',\n  //   description: 'Open in Coinbase Wallet app.',\n  //   href: 'https://go.cb-w.com/mtUDhEZPy1',\n  //   color: '#315CF5',\n  //   mobile: true,\n  //   mobileOnly: true\n  // },\n  // FORTMATIC: {\n  //   connector: fortmatic,\n  //   name: 'Fortmatic',\n  //   iconName: 'fortmaticIcon.png',\n  //   description: 'Login using Fortmatic hosted wallet',\n  //   href: null,\n  //   color: '#6748FF',\n  //   mobile: true\n  // },\n  // Portis: {\n  //   connector: portis,\n  //   name: 'Portis',\n  //   iconName: 'portisIcon.png',\n  //   description: 'Login using Portis hosted wallet',\n  //   href: null,\n  //   color: '#4A6C9B',\n  //   mobile: true\n  // }\n}\n\nexport const NetworkContextName = 'NETWORK'\n\n// default allowed slippage, in bips\nexport const INITIAL_ALLOWED_SLIPPAGE = 80\n// 20 minutes, denominated in seconds\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20\n\n// one basis point\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000))\nexport const BIPS_BASE = JSBI.BigInt(10000)\n// used for warning states\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\n// for non expert mode disable swaps above this\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\n\n// used to ensure the user doesn't send so much ETH so they end up with <.01\nexport const MIN_ETH: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 ETH\nexport const BETTER_TRADE_LINK_THRESHOLD = new Percent(JSBI.BigInt(75), JSBI.BigInt(10000))\n","/home/someone/kucoin/tesnet20_08/amm-front/src/utils/getTokenList.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/utils/resolveENSContentHash.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/constants/abis/erc20.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/constants/abis/migrator.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/pages/AddLiquidity/index.tsx",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/pages/Swap/index.tsx",["796","797","798","799"],"import { CurrencyAmount, JSBI, Token, Trade } from '@pancakeswap-libs/sdk-v2'\nimport React, { useCallback, useContext, useEffect, useMemo, useState } from 'react'\nimport { ArrowDown } from 'react-feather'\nimport { CardBody, ArrowDownIcon, Button, IconButton, Text, Heading } from '@pancakeswap-libs/uikit'\nimport styled, { ThemeContext } from 'styled-components'\nimport AddressInputPanel from 'components/AddressInputPanel'\nimport Card, { GreyCard } from 'components/Card'\nimport { AutoColumn } from 'components/Column'\nimport ConfirmSwapModal from 'components/swap/ConfirmSwapModal'\nimport CurrencyInputPanel from 'components/CurrencyInputPanel'\nimport CardNav from 'components/CardNav'\nimport { AutoRow, RowBetween } from 'components/Row'\nimport AdvancedSwapDetailsDropdown from 'components/swap/AdvancedSwapDetailsDropdown'\nimport BetterTradeLink from 'components/swap/BetterTradeLink'\nimport confirmPriceImpactWithoutFee from 'components/swap/confirmPriceImpactWithoutFee'\nimport { ArrowWrapper, BottomGrouping, SwapCallbackError, Wrapper } from 'components/swap/styleds'\nimport TradePrice from 'components/swap/TradePrice'\nimport TokenWarningModal from 'components/TokenWarningModal'\nimport SyrupWarningModal from 'components/SyrupWarningModal'\nimport ProgressSteps from 'components/ProgressSteps'\nimport SwapVertIcon from '@material-ui/icons/SwapVert'\nimport { BETTER_TRADE_LINK_THRESHOLD, INITIAL_ALLOWED_SLIPPAGE } from 'constants/index'\nimport { isTradeBetter } from 'data/V1'\nimport { useActiveWeb3React } from 'hooks'\nimport { useCurrency } from 'hooks/Tokens'\nimport { ApprovalState, useApproveCallbackFromTrade } from 'hooks/useApproveCallback'\nimport { useSwapCallback } from 'hooks/useSwapCallback'\nimport useToggledVersion, { Version } from 'hooks/useToggledVersion'\nimport useWrapCallback, { WrapType } from 'hooks/useWrapCallback'\nimport { Field } from 'state/swap/actions'\nimport { useDefaultsFromURLSearch, useDerivedSwapInfo, useSwapActionHandlers, useSwapState } from 'state/swap/hooks'\nimport { useExpertModeManager, useUserDeadline, useUserSlippageTolerance } from 'state/user/hooks'\nimport { LinkStyledButton, TYPE } from 'components/Shared'\nimport { maxAmountSpend } from 'utils/maxAmountSpend'\nimport { computeTradePriceBreakdown, warningSeverity } from 'utils/prices'\nimport Loader from 'components/Loader'\nimport { TranslateString } from 'utils/translateTextHelpers'\nimport PageHeader from 'components/PageHeader'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport AppBody from '../AppBody'\n\nconst { main: Main } = TYPE\n\nconst StyledCardBody = styled(CardBody)`\n  border-radius: 20px;\n`\nconst Header = styled.div`\n  position: relative;\n  margin-top: 5px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: #0c0c0c;\n  background-position-x: center;\n  background-position-y: bottom;\n  background-repeat: no-repeat;\n  background-size: 800px;\n  padding-bottom: 120px;\n  z-index: 100000000;\n\n  & > img {\n    position: absolute;\n    z-index: 50;\n    bottom: -30px;\n    max-width: 800px;\n  }\n`\nconst StyledIconButton = styled(IconButton)`\n  background-color: #48cae4;\n  margin-right: 5px;\n  height: 70px;\n  width: 70px;\n  box-shadow: none;\n  transition: all 0.2s ease-in-out;\n  border: 6px solid white;\n\n  & > svg,\n  & > svg > * {\n    fill: #fff;\n  }\n\n  &:hover {\n    background-color: #fff;\n    border: 6px solid #48cae4 !important;\n\n    & > svg,\n    & > svg > * {\n      fill: #48cae4;\n    }\n  }\n\n  &:focus {\n    box-shadow: none !important;\n  }\n\n  &:active {\n    background-color: #fff;\n  }\n`\n\nconst StyledSwapButton = styled(Button)`\n  background-color: #48cae4;\n  box-shadow: none;\n  transition: all 0.2s ease-in-out;\n  border: 2px solid white;\n  font-size: 20px;\n  font-weight: 600;\n\n  &:hover {\n    background-color: #fff;\n    border: 2px solid #48cae4 !important;\n    color: #48cae4;\n\n    & > svg,\n    & > svg > * {\n      fill: #48cae4;\n    }\n  }\n\n  &:focus {\n    box-shadow: none !important;\n  }\n\n  &:active {\n    background-color: #fff;\n  }\n`\n\n\nconst MainTitle = styled(Heading)`\n  color: #fff;\n  font-size: 60px;\n  font-weight: 500;\n`\n\nconst SubTitle = styled(MainTitle)`\n  font-size: 40px;\n  font-weight: 400;\n  margin: 0;\n  margin-top: -15px;\n`\n\nconst SubTitle2 = styled(SubTitle)`\n  margin-top: 10px;\n  margin-bottom: 10px;\n  color: #86868b;\n`\n\nconst MarginLink = styled.a`\n  margin-top: -5px;\n  margin-bottom: 50px;\n\n  & > * {\n    font-size: 20px;\n  }\n`\n\nconst StyledAutoColumn = styled(AutoColumn)`\n  margin-top: -50px;\n  margin-bottom: -50px;\n  z-index: 10;\n`\nconst StyledSwapVertIcon = styled(SwapVertIcon)`\n  font-size: 40px !important;\n  font-weight: 800 !important;\n`\n\nconst Swap = () => {\n  const loadedUrlParams = useDefaultsFromURLSearch()\n\n  // token warning stuff\n  const [loadedInputCurrency, loadedOutputCurrency] = [\n    useCurrency(loadedUrlParams?.inputCurrencyId),\n    useCurrency(loadedUrlParams?.outputCurrencyId),\n  ]\n  const [dismissTokenWarning, setDismissTokenWarning] = useState<boolean>(false)\n  const [isSyrup, setIsSyrup] = useState<boolean>(false)\n  const [syrupTransactionType, setSyrupTransactionType] = useState<string>('')\n  const urlLoadedTokens: Token[] = useMemo(\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c instanceof Token) ?? [],\n    [loadedInputCurrency, loadedOutputCurrency]\n  )\n  const handleConfirmTokenWarning = useCallback(() => {\n    setDismissTokenWarning(true)\n  }, [])\n\n  const handleConfirmSyrupWarning = useCallback(() => {\n    setIsSyrup(false)\n    setSyrupTransactionType('')\n  }, [])\n\n  const { account } = useActiveWeb3React()\n  const theme = useContext(ThemeContext)\n\n  const [isExpertMode] = useExpertModeManager()\n\n  // get custom setting values for user\n  const [deadline] = useUserDeadline()\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  // swap state\n  const { independentField, typedValue, recipient } = useSwapState()\n  const {\n    v1Trade,\n    v2Trade,\n    currencyBalances,\n    parsedAmount,\n    currencies,\n    inputError: swapInputError,\n  } = useDerivedSwapInfo()\n  const { wrapType, execute: onWrap, inputError: wrapInputError } = useWrapCallback(\n    currencies[Field.INPUT],\n    currencies[Field.OUTPUT],\n    typedValue\n  )\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\n  //   const { address: recipientAddress } = useENSAddress(recipient)\n  const toggledVersion = useToggledVersion()\n  const trade = showWrap\n    ? undefined\n    : {\n        [Version.v1]: v1Trade,\n        [Version.v2]: v2Trade,\n      }[toggledVersion]\n\n  const betterTradeLinkVersion: Version | undefined =\n    toggledVersion === Version.v2 && isTradeBetter(v2Trade, v1Trade, BETTER_TRADE_LINK_THRESHOLD)\n      ? Version.v1\n      : toggledVersion === Version.v1 && isTradeBetter(v1Trade, v2Trade)\n      ? Version.v2\n      : undefined\n\n  const parsedAmounts = showWrap\n    ? {\n        [Field.INPUT]: parsedAmount,\n        [Field.OUTPUT]: parsedAmount,\n      }\n    : {\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\n      }\n\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\n  const isValid = !swapInputError\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\n\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      onUserInput(Field.INPUT, value)\n    },\n    [onUserInput]\n  )\n  const handleTypeOutput = useCallback(\n    (value: string) => {\n      onUserInput(Field.OUTPUT, value)\n    },\n    [onUserInput]\n  )\n\n  // modal and loading\n  const [{ showConfirm, tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\n    showConfirm: boolean\n    tradeToConfirm: Trade | undefined\n    attemptingTxn: boolean\n    swapErrorMessage: string | undefined\n    txHash: string | undefined\n  }>({\n    showConfirm: false,\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined,\n  })\n\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: showWrap\n      ? parsedAmounts[independentField]?.toExact() ?? ''\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  const route = trade?.route\n  const userHasSpecifiedInputOutput = Boolean(\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0))\n  )\n  const noRoute = !route\n\n  // check whether the user has approved the router on the input token\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage)\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  useEffect(() => {\n    if (approval === ApprovalState.PENDING) {\n      setApprovalSubmitted(true)\n    }\n  }, [approval, approvalSubmitted])\n\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\n  const atMaxAmountInput = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput))\n\n  // the callback to execute the swap\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(\n    trade,\n    allowedSlippage,\n    deadline,\n    recipient\n  )\n\n  const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade)\n\n  const handleSwap = useCallback(() => {\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee)) {\n      return\n    }\n    if (!swapCallback) {\n      return\n    }\n    setSwapState((prevState) => ({ ...prevState, attemptingTxn: true, swapErrorMessage: undefined, txHash: undefined }))\n    swapCallback()\n      .then((hash) => {\n        setSwapState((prevState) => ({\n          ...prevState,\n          attemptingTxn: false,\n          swapErrorMessage: undefined,\n          txHash: hash,\n        }))\n      })\n      .catch((error) => {\n        setSwapState((prevState) => ({\n          ...prevState,\n          attemptingTxn: false,\n          swapErrorMessage: error.message,\n          txHash: undefined,\n        }))\n      })\n  }, [priceImpactWithoutFee, swapCallback, setSwapState])\n\n  // errors\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n\n  // warnings on slippage\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n  const showApproveFlow =\n    !swapInputError &&\n    (approval === ApprovalState.NOT_APPROVED ||\n      approval === ApprovalState.PENDING ||\n      (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\n    !(priceImpactSeverity > 3 && !isExpertMode)\n\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState((prevState) => ({ ...prevState, showConfirm: false }))\n\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '')\n    }\n  }, [onUserInput, txHash, setSwapState])\n\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState((prevState) => ({ ...prevState, tradeToConfirm: trade }))\n  }, [trade])\n\n  // This will check to see if the user has selected Syrup to either buy or sell.\n  // If so, they will be alerted with a warning message.\n  const checkForSyrup = useCallback(\n    (selected: string, purchaseType: string) => {\n      if (selected === 'syrup') {\n        setIsSyrup(true)\n        setSyrupTransactionType(purchaseType)\n      }\n    },\n    [setIsSyrup, setSyrupTransactionType]\n  )\n\n  const handleInputSelect = useCallback(\n    (inputCurrency) => {\n      setApprovalSubmitted(false) // reset 2 step UI for approvals\n      onCurrencySelection(Field.INPUT, inputCurrency)\n      if (inputCurrency.symbol.toLowerCase() === 'syrup') {\n        checkForSyrup(inputCurrency.symbol.toLowerCase(), 'Selling')\n      }\n    },\n    [onCurrencySelection, setApprovalSubmitted, checkForSyrup]\n  )\n\n  const handleMaxInput = useCallback(() => {\n    if (maxAmountInput) {\n      onUserInput(Field.INPUT, maxAmountInput.toExact())\n    }\n  }, [maxAmountInput, onUserInput])\n\n  const handleOutputSelect = useCallback(\n    (outputCurrency) => {\n      onCurrencySelection(Field.OUTPUT, outputCurrency)\n      if (outputCurrency.symbol.toLowerCase() === 'syrup') {\n        checkForSyrup(outputCurrency.symbol.toLowerCase(), 'Buying')\n      }\n    },\n    [onCurrencySelection, checkForSyrup]\n  )\n\n  return (\n    <>\n      <TokenWarningModal\n        isOpen={urlLoadedTokens.length > 0 && !dismissTokenWarning}\n        tokens={urlLoadedTokens}\n        onConfirm={handleConfirmTokenWarning}\n      />\n      <SyrupWarningModal\n        isOpen={isSyrup}\n        transactionType={syrupTransactionType}\n        onConfirm={handleConfirmSyrupWarning}\n      />\n\n      <CardNav />\n\n      <AppBody>\n        <Wrapper id=\"swap-page\">\n          <ConfirmSwapModal\n            isOpen={showConfirm}\n            trade={trade}\n            originalTrade={tradeToConfirm}\n            onAcceptChanges={handleAcceptChanges}\n            attemptingTxn={attemptingTxn}\n            txHash={txHash}\n            recipient={recipient}\n            allowedSlippage={allowedSlippage}\n            onConfirm={handleSwap}\n            swapErrorMessage={swapErrorMessage}\n            onDismiss={handleConfirmDismiss}\n          />\n          <PageHeader title=\"Exchange\" description=\"Instantly trade KCC tokens\" />\n          <StyledCardBody>\n            <AutoColumn gap=\"md\">\n              <CurrencyInputPanel\n                label={\n                  independentField === Field.OUTPUT && !showWrap && trade\n                    ? 'From (estimated)'\n                    : TranslateString(76, 'From')\n                }\n                value={formattedAmounts[Field.INPUT]}\n                showMaxButton={!atMaxAmountInput}\n                currency={currencies[Field.INPUT]}\n                onUserInput={handleTypeInput}\n                onMax={handleMaxInput}\n                onCurrencySelect={handleInputSelect}\n                otherCurrency={currencies[Field.OUTPUT]}\n                id=\"swap-currency-input\"\n              />\n              <StyledAutoColumn justify=\"space-between\">\n                <AutoRow justify={isExpertMode ? 'space-between' : 'center'}>\n                  <ArrowWrapper clickable>\n                    <StyledIconButton\n                      variant=\"tertiary\"\n                      onClick={() => {\n                        setApprovalSubmitted(false) // reset 2 step UI for approvals\n                        onSwitchTokens()\n                      }}\n                      style={{ borderRadius: '50%' }}\n                      size=\"sm\"\n                    >\n                      <StyledSwapVertIcon />\n                    </StyledIconButton>\n                  </ArrowWrapper>\n                  {recipient === null && !showWrap && isExpertMode ? (\n                    <LinkStyledButton id=\"add-recipient-button\" onClick={() => onChangeRecipient('')}>\n                      + Add a send (optional)\n                    </LinkStyledButton>\n                  ) : null}\n                </AutoRow>\n              </StyledAutoColumn>\n              <CurrencyInputPanel\n                value={formattedAmounts[Field.OUTPUT]}\n                onUserInput={handleTypeOutput}\n                label={\n                  independentField === Field.INPUT && !showWrap && trade ? 'To (estimated)' : TranslateString(80, 'To')\n                }\n                showMaxButton={false}\n                currency={currencies[Field.OUTPUT]}\n                onCurrencySelect={handleOutputSelect}\n                otherCurrency={currencies[Field.INPUT]}\n                id=\"swap-currency-output\"\n              />\n\n              {recipient !== null && !showWrap ? (\n                <>\n                  <AutoRow justify=\"space-between\">\n                    <ArrowWrapper clickable={false}>\n                      <ArrowDown size=\"16\" color={theme.colors.textSubtle} />\n                    </ArrowWrapper>\n                    <LinkStyledButton id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\n                      - Remove send\n                    </LinkStyledButton>\n                  </AutoRow>\n                  <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\n                </>\n              ) : null}\n\n              {showWrap ? null : (\n                <Card padding=\".25rem .75rem 0 .75rem\" borderRadius=\"20px\">\n                  <AutoColumn gap=\"4px\">\n                    {Boolean(trade) && (\n                      <RowBetween align=\"center\">\n                        <Text fontSize=\"14px\">Price</Text>\n                        <TradePrice\n                          price={trade?.executionPrice}\n                          showInverted={showInverted}\n                          setShowInverted={setShowInverted}\n                        />\n                      </RowBetween>\n                    )}\n                    {allowedSlippage !== INITIAL_ALLOWED_SLIPPAGE && (\n                      <RowBetween align=\"center\">\n                        <Text fontSize=\"14px\">Slippage Tolerance</Text>\n                        <Text fontSize=\"14px\">{allowedSlippage / 100}%</Text>\n                      </RowBetween>\n                    )}\n                  </AutoColumn>\n                </Card>\n              )}\n            </AutoColumn>\n            <BottomGrouping>\n              {!account ? (\n                <ConnectWalletButton fullWidth />\n              ) : showWrap ? (\n                <StyledSwapButton disabled={Boolean(wrapInputError)} onClick={onWrap} fullWidth>\n                  {wrapInputError ??\n                    (wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null)}\n                </StyledSwapButton>\n              ) : noRoute && userHasSpecifiedInputOutput ? (\n                <GreyCard style={{ textAlign: 'center' }}>\n                  <Main mb=\"4px\">Insufficient liquidity for this trade.</Main>\n                </GreyCard>\n              ) : showApproveFlow ? (\n                <RowBetween>\n                  <StyledSwapButton\n                    onClick={approveCallback}\n                    disabled={approval !== ApprovalState.NOT_APPROVED || approvalSubmitted}\n                    style={{ width: '48%' }}\n                    variant={approval === ApprovalState.APPROVED ? 'success' : 'primary'}\n                  >\n                    {approval === ApprovalState.PENDING ? (\n                      <AutoRow gap=\"6px\" justify=\"center\">\n                        Approving <Loader stroke=\"white\" />\n                      </AutoRow>\n                    ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\n                      'Approved'\n                    ) : (\n                      `Approve ${currencies[Field.INPUT]?.symbol}`\n                    )}\n                  </StyledSwapButton>\n                  <StyledSwapButton\n                    onClick={() => {\n                      if (isExpertMode) {\n                        handleSwap()\n                      } else {\n                        setSwapState({\n                          tradeToConfirm: trade,\n                          attemptingTxn: false,\n                          swapErrorMessage: undefined,\n                          showConfirm: true,\n                          txHash: undefined,\n                        })\n                      }\n                    }}\n                    style={{ width: '48%' }}\n                    id=\"swap-button\"\n                    disabled={\n                      !isValid || approval !== ApprovalState.APPROVED || (priceImpactSeverity > 3 && !isExpertMode)\n                    }\n                    variant={isValid && priceImpactSeverity > 2 ? 'danger' : 'primary'}\n                  >\n                    {priceImpactSeverity > 3 && !isExpertMode\n                      ? `Price Impact High`\n                      : `Swap${priceImpactSeverity > 2 ? ' Anyway' : ''}`}\n                  </StyledSwapButton>\n                </RowBetween>\n              ) : (\n                <StyledSwapButton\n                  onClick={() => {\n                    if (isExpertMode) {\n                      handleSwap()\n                    } else {\n                      setSwapState({\n                        tradeToConfirm: trade,\n                        attemptingTxn: false,\n                        swapErrorMessage: undefined,\n                        showConfirm: true,\n                        txHash: undefined,\n                      })\n                    }\n                  }}\n                  id=\"swap-button\"\n                  disabled={!isValid || (priceImpactSeverity > 3 && !isExpertMode) || !!swapCallbackError}\n                  variant={isValid && priceImpactSeverity > 2 && !swapCallbackError ? 'danger' : 'primary'}\n                  fullWidth\n                >\n                  {swapInputError ||\n                    (priceImpactSeverity > 3 && !isExpertMode\n                      ? `Price Impact Too High`\n                      : `Swap${priceImpactSeverity > 2 ? ' Anyway' : ''}`)}\n                </StyledSwapButton>\n              )}\n              {showApproveFlow && <ProgressSteps steps={[approval === ApprovalState.APPROVED]} />}\n              {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n              {betterTradeLinkVersion && <BetterTradeLink version={betterTradeLinkVersion} />}\n            </BottomGrouping>\n          </StyledCardBody>\n        </Wrapper>\n      </AppBody>\n      <AdvancedSwapDetailsDropdown trade={trade} />\n    </>\n  )\n}\n\nexport default Swap\n","/home/someone/kucoin/tesnet20_08/amm-front/src/pages/RemoveLiquidity/index.tsx",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/pages/Pool/index.tsx",["800","801","802","803","804"],"import React, { useContext, useMemo } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\nimport { Pair } from '@pancakeswap-libs/sdk-v2'\nimport { Button, CardBody, Text } from '@pancakeswap-libs/uikit'\nimport { Link } from 'react-router-dom'\nimport CardNav from 'components/CardNav'\nimport Question from 'components/QuestionHelper'\nimport FullPositionCard from 'components/PositionCard'\nimport { useUserHasLiquidityInAllTokens } from 'data/V1'\nimport { useTokenBalancesWithLoadingIndicator } from 'state/wallet/hooks'\nimport { StyledInternalLink, TYPE } from 'components/Shared'\nimport { LightCard, GreyCard } from 'components/Card'\nimport { RowBetween, RowCenter } from 'components/Row'\nimport { AutoColumn } from 'components/Column'\n\nimport { useActiveWeb3React } from 'hooks'\nimport { usePairs } from 'data/Reserves'\nimport { toV2LiquidityToken, useTrackedTokenPairs } from 'state/user/hooks'\nimport { Dots } from 'components/swap/styleds'\nimport TranslatedText from 'components/TranslatedText'\nimport { TranslateString } from 'utils/translateTextHelpers'\nimport PageHeader from 'components/PageHeader'\nimport AppBody from '../AppBody'\n\nconst { body: Body } = TYPE\n\nconst StyledSwapButton = styled(Button)`\n  background-color: #48cae4;\n  color: #fff;\n  display: inline-block !important;\n  box-shadow: none;\n  transition: all 0.2s ease-in-out;\n  border: 2px solid white;\n  font-size: 25px;\n  font-weight: 600;\n  padding: 10px;\n  /* border-radius: 30px; */\n  margin-top: 5px;\n  margin-bottom: 15px;\n  width: 100%;\n  text-align: center;\n  text-transform: capitalize !important;\n  border: 4px solid #fff;\n  &:hover {\n    background-color: #fff;\n    border: 4px solid #48cae4 !important;\n    color: #48cae4;\n\n    & > svg,\n    & > svg > * {\n      fill: #48cae4;\n    }\n  }\n\n  &:focus {\n    box-shadow: none !important;\n  }\n\n  &:active {\n    background-color: #fff;\n  }\n`\nconst StyledPageHeader = styled(PageHeader)`\n  width: 100% !important;\n  display: flex !important;\n  flex-direction: column !important;\n  align-items: center !important;\n  border: 5px solid #fff !important;\n`\nexport default function Pool() {\n  const theme = useContext(ThemeContext)\n  const { account } = useActiveWeb3React()\n\n  // fetch the user's balances of all tracked V2 LP tokens\n  const trackedTokenPairs = useTrackedTokenPairs()\n  const tokenPairsWithLiquidityTokens = useMemo(\n    () => trackedTokenPairs.map((tokens) => ({ liquidityToken: toV2LiquidityToken(tokens), tokens })),\n    [trackedTokenPairs]\n  )\n  const liquidityTokens = useMemo(\n    () => tokenPairsWithLiquidityTokens.map((tpwlt) => tpwlt.liquidityToken),\n    [tokenPairsWithLiquidityTokens]\n  )\n  const [v2PairsBalances, fetchingV2PairBalances] = useTokenBalancesWithLoadingIndicator(\n    account ?? undefined,\n    liquidityTokens\n  )\n\n  // fetch the reserves for all V2 pools in which the user has a balance\n  const liquidityTokensWithBalances = useMemo(\n    () =>\n      tokenPairsWithLiquidityTokens.filter(({ liquidityToken }) =>\n        v2PairsBalances[liquidityToken.address]?.greaterThan('0')\n      ),\n    [tokenPairsWithLiquidityTokens, v2PairsBalances]\n  )\n\n  const v2Pairs = usePairs(liquidityTokensWithBalances.map(({ tokens }) => tokens))\n  const v2IsLoading =\n    fetchingV2PairBalances || v2Pairs?.length < liquidityTokensWithBalances.length || v2Pairs?.some((V2Pair) => !V2Pair)\n\n  const allV2PairsWithLiquidity = v2Pairs.map(([, pair]) => pair).filter((v2Pair): v2Pair is Pair => Boolean(v2Pair))\n\n  const hasV1Liquidity = useUserHasLiquidityInAllTokens()\n\n  return (\n    <>\n      <CardNav activeIndex={1} />\n      <AppBody>\n        <StyledPageHeader title=\"Liquidity\" description=\"Add liquidity to receive LP tokens\">\n          <StyledSwapButton as={Link} to=\"/add/ETH\">\n            Add Liquidity\n          </StyledSwapButton>\n        </StyledPageHeader>\n        <AutoColumn gap=\"lg\" justify=\"center\">\n          <CardBody>\n            <AutoColumn gap=\"12px\" style={{ width: '100%' }}>\n              <RowCenter padding=\"0 8px\">\n                <Text style={{ color: '#ff629a', fontWeight: 600 }} fontSize=\"20px\">\n                  YOUR LIQUIDITY\n                </Text>\n                <Question text=\"When you add liquidity, you are given pool tokens that represent your share. If you don’t see a pool you joined in this list, try importing a pool below.\" />\n              </RowCenter>\n\n              {!account ? (\n                <GreyCard padding=\"40px\">\n                  <Body color=\"#747474\" textAlign=\"center\">\n                    Connect to a wallet to view your liquidity.\n                  </Body>\n                </GreyCard>\n              ) : v2IsLoading ? (\n                <GreyCard padding=\"40px\">\n                  <Body color=\"#747474\" textAlign=\"center\">\n                    <Dots>Loading</Dots>\n                  </Body>\n                </GreyCard>\n              ) : allV2PairsWithLiquidity?.length > 0 ? (\n                <>\n                  {allV2PairsWithLiquidity.map((v2Pair) => (\n                    <FullPositionCard key={v2Pair.liquidityToken.address} pair={v2Pair} />\n                  ))}\n                </>\n              ) : (\n                <GreyCard padding=\"40px\">\n                  <Body color=\"#000\" textAlign=\"center\">\n                    No liquidity found.\n                  </Body>\n                </GreyCard>\n              )}\n\n              <div>\n                <Text\n                  fontSize=\"14px\"\n                  style={{\n                    padding: '.5rem 0 .5rem 0',\n                    color: '#000',\n                    textAlign: 'center',\n                    fontSize: '16px',\n                    fontWeight: 600,\n                  }}\n                >\n                  {hasV1Liquidity ? 'Uniswap V1 liquidity found!' : \"Don't see a pool you joined?\"}{' '}\n                  <StyledInternalLink id=\"import-pool-link\" to={hasV1Liquidity ? '/migrate/v1' : '/find'}>\n                    {hasV1Liquidity ? 'Migrate now.' : 'Import it.'}\n                  </StyledInternalLink>\n                </Text>\n                <Text fontSize=\"14px\" style={{ padding: '.5rem 0 .5rem 0', textAlign:\"center\" }}>\n                  Are your LP tokens in a farm? <br/>Unstake them first and come back to see them show up here.\n                </Text>\n              </div>\n            </AutoColumn>\n          </CardBody>\n        </AutoColumn>\n      </AppBody>\n    </>\n  )\n}\n","/home/someone/kucoin/tesnet20_08/amm-front/src/pages/PoolFinder/index.tsx",["805"],"import { Currency, ETHER, JSBI, TokenAmount } from '@pancakeswap-libs/sdk-v2'\nimport styled from 'styled-components'\nimport React, { useCallback, useEffect, useState } from 'react'\nimport { Button, ChevronDownIcon, AddIcon, CardBody, Text } from '@pancakeswap-libs/uikit'\nimport CardNav from 'components/CardNav'\nimport { LightCard } from 'components/Card'\nimport { AutoColumn, ColumnCenter } from 'components/Column'\nimport CurrencyLogo from 'components/CurrencyLogo'\nimport { FindPoolTabs } from 'components/NavigationTabs'\nimport { MinimalPositionCard } from 'components/PositionCard'\nimport CurrencySearchModal from 'components/SearchModal/CurrencySearchModal'\nimport { PairState, usePair } from 'data/Reserves'\nimport { useActiveWeb3React } from 'hooks'\nimport { usePairAdder } from 'state/user/hooks'\nimport { useTokenBalance } from 'state/wallet/hooks'\nimport { StyledInternalLink } from 'components/Shared'\nimport { currencyId } from 'utils/currencyId'\nimport TranslatedText from 'components/TranslatedText'\nimport AppBody from '../AppBody'\nimport { Dots } from '../Pool/styleds'\n\nenum Fields {\n  TOKEN0 = 0,\n  TOKEN1 = 1\n}\n\nconst StyledSwapButton = styled(Button)`\n  background-color: #48cae4;\n  box-shadow: none;\n  transition: all 0.2s ease-in-out;\n  border: 2px solid white;\n  font-size: 20px;\n  font-weight: 600;\n  margin: 10px auto;\n\n  &:hover {\n    background-color: #fff;\n    border: 2px solid #48cae4 !important;\n    color: #48cae4;\n\n    & > svg,\n    & > svg > * {\n      fill: #48cae4;\n    }\n  }\n\n  &:focus {\n    box-shadow: none !important;\n  }\n\n  &:active {\n    background-color: #fff;\n  }\n`\nexport default function PoolFinder() {\n  const { account } = useActiveWeb3React()\n\n  const [showSearch, setShowSearch] = useState<boolean>(false)\n  const [activeField, setActiveField] = useState<number>(Fields.TOKEN1)\n\n  const [currency0, setCurrency0] = useState<Currency | null>(ETHER)\n  const [currency1, setCurrency1] = useState<Currency | null>(null)\n\n  const [pairState, pair] = usePair(currency0 ?? undefined, currency1 ?? undefined)\n  const addPair = usePairAdder()\n  useEffect(() => {\n    if (pair) {\n      addPair(pair)\n    }\n  }, [pair, addPair])\n\n  const validPairNoLiquidity: boolean =\n    pairState === PairState.NOT_EXISTS ||\n    Boolean(\n      pairState === PairState.EXISTS &&\n        pair &&\n        JSBI.equal(pair.reserve0.raw, JSBI.BigInt(0)) &&\n        JSBI.equal(pair.reserve1.raw, JSBI.BigInt(0))\n    )\n\n  const position: TokenAmount | undefined = useTokenBalance(account ?? undefined, pair?.liquidityToken)\n  const hasPosition = Boolean(position && JSBI.greaterThan(position.raw, JSBI.BigInt(0)))\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      if (activeField === Fields.TOKEN0) {\n        setCurrency0(currency)\n      } else {\n        setCurrency1(currency)\n      }\n    },\n    [activeField]\n  )\n\n  const handleSearchDismiss = useCallback(() => {\n    setShowSearch(false)\n  }, [setShowSearch])\n\n  const prerequisiteMessage = (\n    <LightCard padding=\"45px 10px\">\n      <Text style={{ textAlign: 'center' }}>\n        {!account ? 'Connect to a wallet to find pools' : 'Select a token to find your liquidity.'}\n      </Text>\n    </LightCard>\n  )\n\n  return (\n    <>\n      <CardNav activeIndex={1} />\n      <AppBody>\n        <FindPoolTabs />\n        <CardBody>\n          <AutoColumn gap=\"md\">\n            <Button\n              onClick={() => {\n                setShowSearch(true)\n                setActiveField(Fields.TOKEN0)\n              }}\n              startIcon={currency0 ? <CurrencyLogo currency={currency0} style={{ marginRight: '.5rem' }} /> : null}\n              endIcon={<ChevronDownIcon width=\"24px\" color=\"white\" />}\n              fullWidth\n            >\n              {currency0 ? currency0.symbol : <TranslatedText translationId={82}>Select a Token</TranslatedText>}\n            </Button>\n\n            <ColumnCenter>\n              <AddIcon color=\"textSubtle\" />\n            </ColumnCenter>\n\n            <Button\n              onClick={() => {\n                setShowSearch(true)\n                setActiveField(Fields.TOKEN1)\n              }}\n              startIcon={currency1 ? <CurrencyLogo currency={currency1} style={{ marginRight: '.5rem' }} /> : null}\n              endIcon={<ChevronDownIcon width=\"24px\" color=\"white\" />}\n              fullWidth\n            >\n              {currency1 ? currency1.symbol : <TranslatedText translationId={82}>Select a Token</TranslatedText>}\n            </Button>\n\n            {hasPosition && (\n              <ColumnCenter\n                style={{ justifyItems: 'center', backgroundColor: '', padding: '12px 0px', borderRadius: '12px' }}\n              >\n                <Text style={{ textAlign: 'center' }}>Pool Found!</Text>\n              </ColumnCenter>\n            )}\n\n            {currency0 && currency1 ? (\n              pairState === PairState.EXISTS ? (\n                hasPosition && pair ? (\n                  <MinimalPositionCard pair={pair} />\n                ) : (\n                  <LightCard padding=\"45px 10px\">\n                    <AutoColumn gap=\"sm\" justify=\"center\">\n                      <Text style={{ textAlign: 'center' }}>You don’t have liquidity in this pool yet.</Text>\n                      <StyledInternalLink to={`/add/${currencyId(currency0)}/${currencyId(currency1)}`}>\n                        <Text style={{ textAlign: 'center' }}>\n                          <TranslatedText translationId={9999}>Add Liquidity</TranslatedText>\n                        </Text>\n                      </StyledInternalLink>\n                    </AutoColumn>\n                  </LightCard>\n                )\n              ) : validPairNoLiquidity ? (\n                <LightCard padding=\"45px 10px\">\n                  <AutoColumn gap=\"sm\" justify=\"center\">\n                    <Text style={{ textAlign: 'center' }}>No pool found.</Text>\n                    <StyledInternalLink to={`/add/${currencyId(currency0)}/${currencyId(currency1)}`}>\n                      Create pool.\n                    </StyledInternalLink>\n                  </AutoColumn>\n                </LightCard>\n              ) : pairState === PairState.INVALID ? (\n                <LightCard padding=\"45px 10px\">\n                  <AutoColumn gap=\"sm\" justify=\"center\">\n                    <Text style={{ textAlign: 'center' }}>\n                      <TranslatedText translationId={136}>Invalid pair.</TranslatedText>\n                    </Text>\n                  </AutoColumn>\n                </LightCard>\n              ) : pairState === PairState.LOADING ? (\n                <LightCard padding=\"45px 10px\">\n                  <AutoColumn gap=\"sm\" justify=\"center\">\n                    <Text style={{ textAlign: 'center' }}>\n                      Loading\n                      <Dots />\n                    </Text>\n                  </AutoColumn>\n                </LightCard>\n              ) : null\n            ) : (\n              prerequisiteMessage\n            )}\n          </AutoColumn>\n\n          <CurrencySearchModal\n            isOpen={showSearch}\n            onCurrencySelect={handleCurrencySelect}\n            onDismiss={handleSearchDismiss}\n            showCommonBases\n            selectedCurrency={(activeField === Fields.TOKEN0 ? currency1 : currency0) ?? undefined}\n          />\n        </CardBody>\n      </AppBody>\n    </>\n  )\n}\n","/home/someone/kucoin/tesnet20_08/amm-front/src/components/Popups/index.tsx",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/components/Web3ReactManager/index.tsx",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/data/TotalSupply.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/components/NewMenu/DocsMenu.tsx",["806"],"import React from 'react'\nimport styled from 'styled-components'\nimport { withStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport Menu, { MenuProps } from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport DescriptionIcon from '@material-ui/icons/Description'\nimport TimelineIcon from '@material-ui/icons/Timeline'\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline'\nimport GitHubIcon from '@material-ui/icons/GitHub';\n\nconst StyledMenu = withStyles({\n  paper: {\n    marginTop: '20px',\n    border: '1px solid #d3d4d5',\n    boxShadow: '0 0 15px #d3d4d5 !important'\n  },\n})((props: MenuProps) => (\n  <Menu\n    elevation={0}\n    getContentAnchorEl={null}\n    anchorOrigin={{\n      vertical: 'bottom',\n      horizontal: 'center',\n    }}\n    transformOrigin={{\n      vertical: 'top',\n      horizontal: 'center',\n    }}\n    {...props}\n  />\n))\n\nconst IconImage = styled.img`\n  width: 24px;\n`\nconst StyledButton = styled(Button)`\n  font-family: 'Roboto', sans-serif !important;\n  font-weight: 500 !important;\n  font-size: 18px !important;\n  text-transform: none !important;\n  background-color: transparent !important;\n  box-shadow: none !important;\n  height: 25px !important;\n  /* width: 30px !important; */\n  padding: 0px !important;\n  margin-left: 10px !important;\n\n  &:hover {\n    color: #ff629a !important;\n  }\n`\n\nconst StyledMenuItem = withStyles((theme) => ({\n  root: {\n    '&:hover': {\n      backgroundColor: '#48cae4',\n      '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\n        color: theme.palette.common.white,\n        fontWeight: 500,\n      },\n    },\n  },\n}))(MenuItem)\n\nexport default function CustomizedMenus() {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null)\n\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  return (\n    <div>\n      <StyledButton\n        aria-controls=\"customized-menu\"\n        aria-haspopup=\"true\"\n        variant=\"contained\"\n        color=\"inherit\"\n        onClick={handleClick}\n      >\n        Docs\n      </StyledButton>\n      <StyledMenu id=\"customized-menu\" anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={handleClose}>\n        <a href=\"https://docs.kupcakeswap.finance/\" target=\"_blank\" rel=\"noreferrer\">\n          <StyledMenuItem>\n            <ListItemIcon>\n              <DescriptionIcon fontSize=\"small\" />\n            </ListItemIcon>\n            <ListItemText primary=\"Project Documentation\" />\n          </StyledMenuItem>\n        </a>\n\n        <a href=\"https://docs.kupcakeswap.finance/roadmap\" target=\"_blank\" rel=\"noreferrer\">\n          <StyledMenuItem>\n            <ListItemIcon>\n              <TimelineIcon fontSize=\"small\" />\n            </ListItemIcon>\n            <ListItemText primary=\"Roadmap\" />\n          </StyledMenuItem>\n        </a>\n\n        <a href=\"https://docs.kupcakeswap.finance/technical-info/howto-buy\" target=\"_blank\" rel=\"noreferrer\">\n          <StyledMenuItem>\n            <ListItemIcon>\n              <HelpOutlineIcon fontSize=\"small\" />\n            </ListItemIcon>\n            <ListItemText primary=\"How to buy ?\" />\n          </StyledMenuItem>\n        </a>\n\n        <a href=\"https://github.com/kupcake-finance\" target=\"_blank\" rel=\"noreferrer\">\n          <StyledMenuItem>\n            <ListItemIcon>\n              <GitHubIcon fontSize=\"small\" />\n            </ListItemIcon>\n            <ListItemText primary=\"Github\" />\n          </StyledMenuItem>\n        </a>\n      </StyledMenu>\n    </div>\n  )\n}\n","/home/someone/kucoin/tesnet20_08/amm-front/src/components/NewMenu/MobileMenu.tsx",["807","808","809","810","811","812","813"],"import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport clsx from 'clsx'\nimport { makeStyles, useTheme, Theme, createStyles } from '@material-ui/core/styles'\nimport Drawer from '@material-ui/core/Drawer'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport List from '@material-ui/core/List'\nimport Typography from '@material-ui/core/Typography'\nimport Divider from '@material-ui/core/Divider'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport HomeIcon from '@material-ui/icons/Home'\nimport MailIcon from '@material-ui/icons/Mail'\nimport UIMenu from '../Menu'\n\nconst drawerWidth = 240\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      backgroundColor: 'rgba(255,255,255, 1)',\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n      border: '1px solid #ff629a',\n      color: '#ff629a',\n      borderRadius: '5px',\n      height: '35px',\n      width: '35px',\n    },\n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    drawerHeader: {\n      display: 'flex',\n      alignItems: 'center',\n      padding: theme.spacing(0, 1),\n      // necessary for content to be below app bar\n      ...theme.mixins.toolbar,\n      justifyContent: 'flex-end',\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      marginLeft: -drawerWidth,\n    },\n    contentShift: {\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      marginLeft: 0,\n    },\n    logoBanner: {\n      maxHeight: '50px',\n    },\n  }),\n)\n\nconst LogoBanner = styled.img`\n  max-height: 50px;\n`\nconst Button = styled.button``\n\nconst Flex = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  & > * {\n    flex-direction: column;\n\n    & > *, & > * > button {\n      width: 170px !important;\n      height: 40px;\n      font-size: 17px;\n      font-weight: 600;\n      margin: 5px auto;\n    }\n  }\n`\nexport default function PersistentDrawerLeft() {\n  const classes = useStyles()\n  const theme = useTheme()\n  const [open, setOpen] = React.useState(false)\n  const [addressMeta, setAddressMeta] = useState()\n\n  const handleDrawerOpen = () => {\n    setOpen(true)\n  }\n\n  const handleDrawerClose = () => {\n    setOpen(false)\n  }\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"default\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <LogoBanner className=\"logoBanner\" src=\"/images/common/logo-ku.png\" alt=\"logo\" />\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          <ListItem button key=\"Home\">\n            <a href=\"https://kupcakeswap.finance\">\n              <ListItemText primary=\"Home\" />\n            </a>\n          </ListItem>\n          <ListItem button key=\"Presale\">\n            <a href=\"https://presale.kupcakeswap.finance\">\n              <ListItemText primary=\"Presale\" />\n            </a>\n          </ListItem>\n          <Divider />\n          <ListItem button key=\"Swap\">\n            <a href=\"https://dex.kupcakeswap.finance/#/swap\">\n              <ListItemText primary=\"Swap\" />\n            </a>\n          </ListItem>\n          <ListItem button key=\"Liquidity\">\n            <a href=\"https://dex.kupcakeswap.finance/#/pool\">\n              <ListItemText primary=\"Liquidity\" />\n            </a>\n          </ListItem>\n          <Divider />\n          <ListItem button key=\"Documentation\">\n            <a href=\"https://docs.kupcakeswap.finance\">\n              <ListItemText primary=\"Documentation\" />\n            </a>\n          </ListItem>\n          <ListItem button key=\"FAQ\">\n            <a href=\"https://docs.kupcakeswap.finance/general-help/general-help-1/faq\">\n              <ListItemText primary=\"FAQ\" />\n            </a>\n          </ListItem>\n          <ListItem button key=\"Token\">\n            <a href=\"https://qugkgjziv7l.typeform.com/to/PxxOYSX4\">\n              <ListItemText primary=\"Token Submission\" />\n            </a>\n          </ListItem>\n          <Divider />\n\n          <ListItem button key=\"Telegram Ann.\">\n            <a href=\"https://t.me/KupcakeSwap_ann\">\n              <ListItemText primary=\"Telegram Ann.\" />\n            </a>\n          </ListItem>\n          <ListItem button key=\"Telegram ENG\">\n            <a href=\"https://t.me/KupcakeSwap\">\n              <ListItemText primary=\"Telegram ENG\" />\n            </a>\n          </ListItem>\n          <ListItem button key=\"Twitter\">\n            <a href=\"https://twitter.com/KupcakeSwap\">\n              <ListItemText primary=\"Twitter\" />\n            </a>\n          </ListItem>\n          <Divider style={{ marginBottom: '20px' }} />\n          <Flex>\n            <UIMenu />\n          </Flex>\n        </List>\n      </Drawer>\n    </div>\n  )\n}\n","/home/someone/kucoin/tesnet20_08/amm-front/src/components/NewMenu/CustomizedMenus.tsx",["814"],"import React from 'react'\nimport styled from 'styled-components'\nimport { withStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport Menu, { MenuProps } from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport TelegramIcon from '@material-ui/icons/Telegram'\nimport TwitterIcon from '@material-ui/icons/Twitter'\n\nconst StyledMenu = withStyles({\n  paper: {\n    marginTop: '20px',\n    border: '1px solid #d3d4d5',\n  },\n})((props: MenuProps) => (\n  <Menu\n    elevation={0}\n    getContentAnchorEl={null}\n    anchorOrigin={{\n      vertical: 'bottom',\n      horizontal: 'center',\n    }}\n    transformOrigin={{\n      vertical: 'top',\n      horizontal: 'center',\n    }}\n    {...props}\n  />\n))\n\nconst IconImage = styled.img`\n  width: 24px;\n`\nconst StyledButton = styled(Button)`\n  font-family: 'Roboto', sans-serif !important;\n  font-weight: 500 !important;\n  font-size: 18px !important;\n  text-transform: none !important;\n  background-color: transparent !important;\n  box-shadow: none !important;\n  height: 25px !important;\n  /* width: 30px !important; */\n  padding: 0px !important;\n  margin-left: 10px !important;\n\n&:hover{\n  color: #ff629a !important;\n}\n`\n\nconst StyledMenuItem = withStyles((theme) => ({\n  root: {\n    '&:hover': {\n      backgroundColor: '#48cae4',\n      '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\n        color: theme.palette.common.white,\n        fontWeight: 500,\n      },\n    },\n  },\n}))(MenuItem)\n\nexport default function CustomizedMenus() {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null)\n\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  return (\n    <div>\n      <StyledButton\n        aria-controls=\"customized-menu\"\n        aria-haspopup=\"true\"\n        variant=\"contained\"\n        color=\"inherit\"\n        onClick={handleClick}\n      >\n        Follow Us\n      </StyledButton>\n      <StyledMenu id=\"customized-menu\" anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={handleClose}>\n        <a href=\"https://twitter.com/KupcakeSwap\" target=\"_blank\" rel=\"noreferrer\">\n          <StyledMenuItem>\n            <ListItemIcon>\n              <TwitterIcon fontSize=\"small\" />\n            </ListItemIcon>\n            <ListItemText primary=\"Twitter\" />\n          </StyledMenuItem>\n        </a>\n\n        <a href=\"https://t.me/KupcakeSwap\" target=\"_blank\" rel=\"noreferrer\">\n          <StyledMenuItem>\n            <ListItemIcon>\n              <TelegramIcon fontSize=\"small\" />\n            </ListItemIcon>\n            <ListItemText primary=\"TG English\" />\n          </StyledMenuItem>\n        </a>\n\n        <a href=\"https://t.me/KupcakeSwap_ann\" target=\"_blank\" rel=\"noreferrer\">\n          <StyledMenuItem>\n            <ListItemIcon>\n              <TelegramIcon fontSize=\"small\" />\n            </ListItemIcon>\n            <ListItemText primary=\"TG Announcements\" />\n          </StyledMenuItem>\n        </a>\n      </StyledMenu>\n    </div>\n  )\n}\n","/home/someone/kucoin/tesnet20_08/amm-front/src/state/multicall/hooks.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/hooks/Tokens.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/components/swap/styleds.tsx",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/pages/MigrateV1/MigrateV1Exchange.tsx",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/pages/MigrateV1/EmptyState.tsx",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/pages/AppBody.tsx",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/state/wallet/hooks.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/state/transactions/hooks.tsx",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/utils/theme.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/state/multicall/reducer.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/state/lists/reducer.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/state/transactions/reducer.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/state/application/reducer.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/utils/index.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/connectors/index.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/state/mint/reducer.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/state/burn/reducer.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/state/swap/reducer.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/state/user/reducer.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/state/global/actions.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/constants/v1/index.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/constants/multicall/index.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/pages/AddLiquidity/PoolPriceBar.tsx",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/state/user/hooks.tsx",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/components/Popups/PopupItem.tsx",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/data/Reserves.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/hooks/useApproveCallback.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/components/Shared/index.tsx",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/components/Row/index.tsx",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/components/QuestionHelper/index.tsx",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/components/Column/index.tsx",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/components/Card/index.tsx",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/constants/lists.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/state/mint/actions.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/state/swap/actions.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/state/burn/actions.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/state/user/actions.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/connectors/bsc/bscConnector.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/connectors/Fortmatic.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/connectors/NetworkConnector.ts",["815","816","817"],"import { ConnectorUpdate } from '@web3-react/types'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\nimport invariant from 'tiny-invariant'\n\ninterface NetworkConnectorArguments {\n  urls: { [chainId: number]: string }\n  defaultChainId?: number\n}\n\n// taken from ethers.js, compatible interface with web3 provider\ntype AsyncSendable = {\n  isMetaMask?: boolean\n  host?: string\n  path?: string\n  sendAsync?: (request: any, callback: (error: any, response: any) => void) => void\n  send?: (request: any, callback: (error: any, response: any) => void) => void\n}\n\nclass RequestError extends Error {\n  constructor(message: string, public code: number, public data?: unknown) {\n    super(message)\n  }\n}\n\ninterface BatchItem {\n  request: { jsonrpc: '2.0'; id: number; method: string; params: unknown }\n  resolve: (result: any) => void\n  reject: (error: Error) => void\n}\n\nclass MiniRpcProvider implements AsyncSendable {\n  public readonly isMetaMask: false = false\n\n  public readonly chainId: number\n\n  public readonly url: string\n\n  public readonly host: string\n\n  public readonly path: string\n\n  public readonly batchWaitTimeMs: number\n\n  private nextId = 1\n\n  private batchTimeoutId: ReturnType<typeof setTimeout> | null = null\n\n  private batch: BatchItem[] = []\n\n  constructor(chainId: number, url: string, batchWaitTimeMs?: number) {\n    this.chainId = chainId\n    this.url = url\n    const parsed = new URL(url)\n    this.host = parsed.host\n    this.path = parsed.pathname\n    // how long to wait to batch calls\n    this.batchWaitTimeMs = batchWaitTimeMs ?? 50\n  }\n\n  public readonly clearBatch = async () => {\n    console.info('Clearing batch', this.batch)\n    const { batch } = this\n    this.batch = []\n    this.batchTimeoutId = null\n    let response: Response\n    try {\n      response = await fetch(this.url, {\n        method: 'POST',\n        headers: { 'content-type': 'application/json', accept: 'application/json' },\n        body: JSON.stringify(batch.map((item) => item.request)),\n      })\n    } catch (error) {\n      batch.forEach(({ reject }) => reject(new Error('Failed to send batch call')))\n      return\n    }\n\n    if (!response.ok) {\n      batch.forEach(({ reject }) => reject(new RequestError(`${response.status}: ${response.statusText}`, -32000)))\n      return\n    }\n\n    let json\n    try {\n      json = await response.json()\n    } catch (error) {\n      batch.forEach(({ reject }) => reject(new Error('Failed to parse JSON response')))\n      return\n    }\n    const byKey = batch.reduce<{ [id: number]: BatchItem }>((memo, current) => {\n      memo[current.request.id] = current\n      return memo\n    }, {})\n    // eslint-disable-next-line no-restricted-syntax\n    for (const result of json) {\n      const {\n        resolve,\n        reject,\n        request: { method },\n      } = byKey[result.id]\n      // if (resolve && reject) {\n      //   if ('error' in result) {\n      //     reject(new RequestError(result?.error?.message, result?.error?.code, result?.error?.data))\n      //   } else if ('result' in result) {\n      //     resolve(result.result)\n      //   } else {\n      //     reject(new RequestError(`Received unexpected JSON-RPC response to ${method} request.`, -32000, result))\n      //   }\n      // }\n    }\n  }\n\n  public readonly sendAsync = (\n    request: { jsonrpc: '2.0'; id: number | string | null; method: string; params?: any },\n    callback: (error: any, response: any) => void\n  ): void => {\n    this.request(request.method, request.params)\n      .then((result) => callback(null, { jsonrpc: '2.0', id: request.id, result }))\n      .catch((error) => callback(error, null))\n  }\n\n  public readonly request = async (\n    method: string | { method: string; params: unknown[] },\n    params?: any\n  ): Promise<unknown> => {\n    if (typeof method !== 'string') {\n      return this.request(method.method, method.params)\n    }\n    if (method === 'eth_chainId') {\n      return `0x${this.chainId.toString(16)}`\n    }\n    const promise = new Promise((resolve, reject) => {\n      this.batch.push({\n        request: {\n          jsonrpc: '2.0',\n          id: this.nextId++,\n          method,\n          params,\n        },\n        resolve,\n        reject,\n      })\n    })\n    this.batchTimeoutId = this.batchTimeoutId ?? setTimeout(this.clearBatch, this.batchWaitTimeMs)\n    return promise\n  }\n}\n\nexport class NetworkConnector extends AbstractConnector {\n  private readonly providers: { [chainId: number]: MiniRpcProvider }\n\n  private currentChainId: number\n\n  constructor({ urls, defaultChainId }: NetworkConnectorArguments) {\n    invariant(defaultChainId || Object.keys(urls).length === 1, 'defaultChainId is a required argument with >1 url')\n    super({ supportedChainIds: Object.keys(urls).map((k): number => Number(k)) })\n\n    this.currentChainId = defaultChainId || Number(Object.keys(urls)[0])\n    this.providers = Object.keys(urls).reduce<{ [chainId: number]: MiniRpcProvider }>((accumulator, chainId) => {\n      accumulator[Number(chainId)] = new MiniRpcProvider(Number(chainId), urls[Number(chainId)])\n      return accumulator\n    }, {})\n  }\n\n  public get provider(): MiniRpcProvider {\n    return this.providers[this.currentChainId]\n  }\n\n  public async activate(): Promise<ConnectorUpdate> {\n    return { provider: this.providers[this.currentChainId], chainId: this.currentChainId, account: null }\n  }\n\n  public async getProvider(): Promise<MiniRpcProvider> {\n    return this.providers[this.currentChainId]\n  }\n\n  public async getChainId(): Promise<number> {\n    return this.currentChainId\n  }\n\n  public async getAccount(): Promise<null> {\n    return null\n  }\n\n  public deactivate() {\n    return null\n  }\n}\n\nexport default NetworkConnector\n","/home/someone/kucoin/tesnet20_08/amm-front/src/components/Loader/index.tsx",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/utils/wrappedCurrency.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/hooks/useToggledVersion.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/components/Popups/TransactionPopup.tsx",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/utils/prices.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/data/V1.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/data/Allowances.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/components/CurrencyLogo/index.tsx",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/components/Shared/Type.tsx",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/components/Shared/Common.tsx",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/components/ConnectWalletButton/index.tsx",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/hooks/useParsedQueryString.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/state/lists/hooks.ts",["818"],"import { ChainId, Token } from '@pancakeswap-libs/sdk-v2'\nimport { Tags, TokenInfo, TokenList } from '@uniswap/token-lists'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { AppState } from '../index'\n\ntype TagDetails = Tags[keyof Tags]\nexport interface TagInfo extends TagDetails {\n  id: string\n}\n\n/**\n * Token instances created from token info.\n */\nexport class WrappedTokenInfo extends Token {\n  public readonly tokenInfo: TokenInfo\n\n  public readonly tags: TagInfo[]\n\n  constructor(tokenInfo: TokenInfo, tags: TagInfo[]) {\n    super(tokenInfo.chainId, tokenInfo.address, tokenInfo.decimals, tokenInfo.symbol, tokenInfo.name)\n    this.tokenInfo = tokenInfo\n    this.tags = tags\n  }\n\n  public get logoURI(): string | undefined {\n    return this.tokenInfo.logoURI\n  }\n}\n\nexport type TokenAddressMap = Readonly<{ [chainId in ChainId]: Readonly<{ [tokenAddress: string]: WrappedTokenInfo }> }>\n\n/**\n * An empty result, useful as a default.\n */\nconst EMPTY_LIST: TokenAddressMap = {\n  [ChainId.MAINNET]: {},\n  [ChainId.BSCTESTNET]: {}\n}\n\nconst listCache: WeakMap<TokenList, TokenAddressMap> | null =\n  typeof WeakMap !== 'undefined' ? new WeakMap<TokenList, TokenAddressMap>() : null\n\nexport function listToTokenMap(list: TokenList): TokenAddressMap {\n  const result = listCache?.get(list)\n  if (result) return result\n\n  const map = list.tokens.reduce<TokenAddressMap>(\n    (tokenMap, tokenInfo) => {\n      const tags: TagInfo[] =\n        tokenInfo.tags\n          ?.map(tagId => {\n            if (!list.tags?.[tagId]) return undefined\n            return { ...list.tags[tagId], id: tagId }\n          })\n          ?.filter((x): x is TagInfo => Boolean(x)) ?? []\n      const token = new WrappedTokenInfo(tokenInfo, tags)\n      if (tokenMap[token.chainId][token.address] !== undefined) throw Error('Duplicate tokens.')\n      return {\n        ...tokenMap,\n        [token.chainId]: {\n          ...tokenMap[token.chainId],\n          [token.address]: token\n        }\n      }\n    },\n    { ...EMPTY_LIST }\n  )\n  listCache?.set(list, map)\n  return map\n}\n\nexport function useTokenList(url: string | undefined): TokenAddressMap {\n  const lists = useSelector<AppState, AppState['lists']['byUrl']>(state => state.lists.byUrl)\n  return useMemo(() => {\n    if (!url) return EMPTY_LIST\n    const current = lists[url]?.current\n    if (!current) return EMPTY_LIST\n    try {\n      return listToTokenMap(current)\n    } catch (error) {\n      console.error('Could not show token list due to error', error)\n      return EMPTY_LIST\n    }\n  }, [lists, url])\n}\n\nexport function useSelectedListUrl(): string | undefined {\n  return useSelector<AppState, AppState['lists']['selectedListUrl']>(state => state.lists.selectedListUrl)\n}\n\nexport function useSelectedTokenList(): TokenAddressMap {\n  return useTokenList(useSelectedListUrl())\n}\n\nexport function useSelectedListInfo(): { current: TokenList | null; pending: TokenList | null; loading: boolean } {\n  const selectedUrl = useSelectedListUrl()\n  const listsByUrl = useSelector<AppState, AppState['lists']['byUrl']>(state => state.lists.byUrl)\n  const list = selectedUrl ? listsByUrl[selectedUrl] : undefined\n  return {\n    current: list?.current ?? null,\n    pending: list?.pendingUpdate ?? null,\n    loading: list?.loadingRequestId !== null\n  }\n}\n\n// returns all downloaded current lists\nexport function useAllLists(): TokenList[] {\n  const lists = useSelector<AppState, AppState['lists']['byUrl']>(state => state.lists.byUrl)\n  console.log(\"lists: \", lists)\n\n  return useMemo(\n    () =>\n      Object.keys(lists)\n        .map(url => lists[url].current)\n        .filter((l): l is TokenList => Boolean(l)),\n    [lists]\n  )\n}\n","/home/someone/kucoin/tesnet20_08/amm-front/src/hooks/useHttpLocations.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/components/pancake/CoinLogo.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/components/Tooltip/index.tsx",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/hooks/useENSContentHash.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/utils/uriToHttp.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/components/Logo/index.tsx",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/utils/parseENSAddress.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/utils/contenthashToUri.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/hooks/useI18n.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/utils/isZero.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/components/Popover/index.tsx",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/utils/translateTextHelpers.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/components/Popups/ListUpdatePopup.tsx",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/pages/Pool/styleds.tsx",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/state/burn/hooks.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/utils/currencyId.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/utils/useDebouncedChangeHandler.tsx",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/utils/listVersionLabel.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/state/swap/hooks.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/pages/AddLiquidity/ConfirmAddModalBottom.tsx",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/components/SearchModal/CurrencySearchModal.tsx",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/components/Slider/index.tsx",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/components/NavigationTabs/index.tsx",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/components/PositionCard/index.tsx",["819","820"],"import React, { useState } from 'react'\nimport { JSBI, Pair, Percent } from '@pancakeswap-libs/sdk-v2'\nimport { StyledInternalLink, TYPE } from 'components/Shared'\nimport { Button, Card as UIKitCard, CardBody, Text } from '@pancakeswap-libs/uikit'\nimport { darken } from 'polished'\nimport { ChevronDown, ChevronUp } from 'react-feather'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { useTotalSupply } from '../../data/TotalSupply'\nimport { useActiveWeb3React } from '../../hooks'\nimport { useTokenBalance } from '../../state/wallet/hooks'\nimport { currencyId } from '../../utils/currencyId'\nimport { unwrappedToken } from '../../utils/wrappedCurrency'\nimport Card from '../Card'\nimport { AutoColumn } from '../Column'\nimport CurrencyLogo from '../CurrencyLogo'\nimport DoubleCurrencyLogo from '../DoubleLogo'\nimport { RowBetween, RowFixed } from '../Row'\nimport { Dots } from '../swap/styleds'\n\nexport const FixedHeightRow = styled(RowBetween)`\n  height: 24px;\n`\nconst StyledButton = styled(Button)`\n  background-color: #48cae4;\n  box-shadow: none;\n  transition: all 0.2s ease-in-out;\n  border: 2px solid white;\n  font-size: 20px;\n  font-weight: 600;\n  margin: 10px auto;\n\n  &:hover {\n    background-color: #fff;\n    border: 2px solid #48cae4 !important;\n    color: #48cae4;\n\n    & > svg,\n    & > svg > * {\n      fill: #48cae4;\n    }\n  }\n\n  &:focus {\n    box-shadow: none !important;\n  }\n\n  &:active {\n    background-color: #fff;\n  }\n`\n\nconst CustomLink = styled(Link)`\n  text-decoration: none !important;\n`\n\nexport const HoverCard = styled(Card)`\n  border: 1px solid ${({ theme }) => darken(0.06, theme.colors.invertedContrast)};\n  :hover {\n    border: 1px solid #48cae4;\n  }\n`\nconst StyledCard = styled(UIKitCard)`\n  padding: 0px;\n  /* margin: 0 auto; */\n  border-radius: 20px;\n  width: 400px;\n  max-width: 100%;\n`\n\ninterface PositionCardProps {\n  pair: Pair\n  // eslint-disable-next-line react/no-unused-prop-types\n  showUnwrapped?: boolean\n}\n\nexport function MinimalPositionCard({ pair, showUnwrapped = false }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const currency0 = showUnwrapped ? pair.token0 : unwrappedToken(pair.token0)\n  const currency1 = showUnwrapped ? pair.token1 : unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <>\n      {userPoolBalance && (\n        <StyledCard>\n          <CardBody>\n            <AutoColumn gap=\"12px\">\n              <FixedHeightRow>\n                <RowFixed>\n                  <Text style={{ textTransform: 'uppercase', fontWeight: 600 }} fontSize=\"15px\" color=\"textSubtle\">\n                    LP Tokens in your Wallet\n                  </Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <FixedHeightRow onClick={() => setShowMore(!showMore)}>\n                <RowFixed>\n                  <DoubleCurrencyLogo currency0={currency0} currency1={currency1} margin size={20} />\n                  <Text fontSize=\"15px\">\n                    {currency0.symbol}/{currency1.symbol}\n                  </Text>\n                </RowFixed>\n                <RowFixed>\n                  <Text fontSize=\"15px\">{userPoolBalance ? userPoolBalance.toSignificant(4) : '-'}</Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <AutoColumn gap=\"4px\">\n                <FixedHeightRow>\n                  <Text fontSize=\"15px\">{currency0.symbol}:</Text>\n                  {token0Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\" fontSize=\"15px\">\n                        {token0Deposited?.toSignificant(6)}\n                      </Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text fontSize=\"15px\">{currency1.symbol}:</Text>\n                  {token1Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\" fontSize=\"15px\">\n                        {token1Deposited?.toSignificant(6)}\n                      </Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n              </AutoColumn>\n            </AutoColumn>\n          </CardBody>\n        </StyledCard>\n      )}\n    </>\n  )\n}\n\nexport default function FullPositionCard({ pair }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const currency0 = unwrappedToken(pair.token0)\n  const currency1 = unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <HoverCard>\n      <AutoColumn gap=\"12px\">\n        <FixedHeightRow onClick={() => setShowMore(!showMore)} style={{ cursor: 'pointer' }}>\n          <RowFixed>\n            <DoubleCurrencyLogo currency0={currency0} currency1={currency1} margin size={20} />\n            <Text>{!currency0 || !currency1 ? <Dots>Loading</Dots> : `${currency0.symbol}/${currency1.symbol}`}</Text>\n          </RowFixed>\n          <RowFixed>\n            {showMore ? (\n              <ChevronUp size=\"20\" style={{ marginLeft: '10px' }} />\n            ) : (\n              <ChevronDown size=\"20\" style={{ marginLeft: '10px' }} />\n            )}\n          </RowFixed>\n        </FixedHeightRow>\n        {showMore && (\n          <AutoColumn gap=\"8px\">\n            <FixedHeightRow>\n              <RowFixed>\n                <Text>Pooled {currency0.symbol}:</Text>\n              </RowFixed>\n              {token0Deposited ? (\n                <RowFixed>\n                  <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n                  <CurrencyLogo size=\"20px\" style={{ marginLeft: '8px' }} currency={currency0} />\n                </RowFixed>\n              ) : (\n                '-'\n              )}\n            </FixedHeightRow>\n\n            <FixedHeightRow>\n              <RowFixed>\n                <Text>Pooled {currency1.symbol}:</Text>\n              </RowFixed>\n              {token1Deposited ? (\n                <RowFixed>\n                  <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n                  <CurrencyLogo size=\"20px\" style={{ marginLeft: '8px' }} currency={currency1} />\n                </RowFixed>\n              ) : (\n                '-'\n              )}\n            </FixedHeightRow>\n            <FixedHeightRow>\n              <Text>Your pool tokens:</Text>\n              <Text>{userPoolBalance ? userPoolBalance.toSignificant(4) : '-'}</Text>\n            </FixedHeightRow>\n            <FixedHeightRow>\n              <Text>Your pool share:</Text>\n              <Text>{poolTokenPercentage ? `${poolTokenPercentage.toFixed(2)}%` : '-'}</Text>\n            </FixedHeightRow>\n\n            <RowBetween marginTop=\"10px\">\n              <StyledInternalLink\n                as={CustomLink}\n                to={`/add/${currencyId(currency0)}/${currencyId(currency1)}`}\n                style={{ width: '48%' }}\n              >\n                Add\n              </StyledInternalLink>\n              <StyledInternalLink\n                as={CustomLink}\n                style={{ width: '48%' }}\n                to={`/remove/${currencyId(currency0)}/${currencyId(currency1)}`}\n              >\n                Remove\n              </StyledInternalLink>\n            </RowBetween>\n          </AutoColumn>\n        )}\n      </AutoColumn>\n    </HoverCard>\n  )\n}\n","/home/someone/kucoin/tesnet20_08/amm-front/src/components/DoubleLogo/index.tsx",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/components/CurrencyInputPanel/index.tsx",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/components/TransactionConfirmationModal/index.tsx",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/utils/maxAmountSpend.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/hooks/useWrapCallback.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/hooks/useSwapCallback.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/components/swap/TradePrice.tsx",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/components/swap/confirmPriceImpactWithoutFee.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/components/swap/BetterTradeLink.tsx",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/components/swap/AdvancedSwapDetailsDropdown.tsx",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/state/mint/hooks.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/components/swap/ConfirmSwapModal.tsx",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/components/TranslatedText/index.tsx",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/hooks/useENS.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/hooks/Trades.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/components/CardNav/index.tsx",["821"],"import React from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap-libs/uikit'\nimport TranslatedText from '../TranslatedText'\n\nconst StyledNav = styled.div`\n  margin-top: 100px;\n  margin-bottom: 40px;\n`\n\nconst StyledTranslatedText = styled.span`\n  font-weight: 600 !important;\n`\n\nconst Nav = ({ activeIndex = 0 }: { activeIndex?: number }) => (\n  <StyledNav>\n    <ButtonMenu activeIndex={activeIndex} size=\"sm\" variant=\"subtle\">\n      <ButtonMenuItem id=\"swap-nav-link\" to=\"/swap\" as={Link}>\n        <StyledTranslatedText>Swap</StyledTranslatedText>\n      </ButtonMenuItem>\n      <ButtonMenuItem id=\"pool-nav-link\" to=\"/pool\" as={Link}>\n        <StyledTranslatedText>Liquidity</StyledTranslatedText>\n      </ButtonMenuItem>\n      {/* <ButtonMenuItem\n        id=\"pool-nav-link\"\n        as=\"a\"\n        href=\"https://trade.kucoin.com/KCS-USDT\"\n        target=\"_blank\"\n        rel=\"noreferrer noopener\"\n      >\n        Bridge\n      </ButtonMenuItem> */}\n    </ButtonMenu>\n  </StyledNav>\n)\n\nexport default Nav\n","/home/someone/kucoin/tesnet20_08/amm-front/src/components/PageHeader/index.tsx",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/hooks/useLast.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/components/SearchModal/CurrencySearch.tsx",["822","823"],"import { Currency, ETHER, Token } from '@pancakeswap-libs/sdk-v2'\nimport React, { KeyboardEvent, RefObject, useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react'\nimport { Text, CloseIcon } from '@pancakeswap-libs/uikit'\nimport { useSelector } from 'react-redux'\nimport { useTranslation } from 'react-i18next'\nimport { FixedSizeList } from 'react-window'\nimport styled, { ThemeContext } from 'styled-components'\nimport AutoSizer from 'react-virtualized-auto-sizer'\nimport { useActiveWeb3React } from '../../hooks'\nimport { AppState } from '../../state'\nimport { useAllTokens, useToken } from '../../hooks/Tokens'\nimport { useSelectedListInfo } from '../../state/lists/hooks'\nimport { LinkStyledButton, TYPE } from '../Shared'\nimport { isAddress } from '../../utils'\nimport Card from '../Card'\nimport Column from '../Column'\nimport ListLogo from '../ListLogo'\nimport QuestionHelper from '../QuestionHelper'\nimport Row, { RowBetween } from '../Row'\nimport CommonBases from './CommonBases'\nimport CurrencyList from './CurrencyList'\nimport { filterTokens } from './filtering'\nimport SortButton from './SortButton'\nimport { useTokenComparator } from './sorting'\nimport { PaddedColumn, SearchInput, Separator } from './styleds'\nimport TranslatedText from '../TranslatedText'\nimport { TranslateString } from '../../utils/translateTextHelpers'\n\nconst { main: Main } = TYPE\nconst StyledColumn = styled(Column)`\n  border-radius: 19px;\n  border: 6px solid #ff629a;\n`\nconst StyledPaddedColumn = styled(PaddedColumn)``\n\nconst StyledTranslatedText = styled.div`\n  font-size: 25px !important;\n  display: flex;\n  color: #48cae4;\n  font-weight: 600;\n`\nconst StyledSearchInput = styled(SearchInput)`\n    font-family: 'M PLUS Rounded 1c',sans-serif !important;\n  font-weight: 500;\n  border: 2px solid #48cae4;\n\n  &:focus, &:active, &:hover{\n  border: 2px solid #48cae4;\n  }\n`\n\nconst SmallStyledTranslatedText = styled(StyledTranslatedText)`\n  font-size: 18px !important;\n\n  & > span {\n    color: #ff629a !important;\n  }\n`\n\ninterface CurrencySearchProps {\n  isOpen: boolean\n  onDismiss: () => void\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showCommonBases?: boolean\n  onChangeList: () => void\n}\n\nexport function CurrencySearch({\n  selectedCurrency,\n  onCurrencySelect,\n  otherSelectedCurrency,\n  showCommonBases,\n  onDismiss,\n  isOpen,\n  onChangeList,\n}: CurrencySearchProps) {\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n  const theme = useContext(ThemeContext)\n\n  const fixedList = useRef<FixedSizeList>()\n  const [searchQuery, setSearchQuery] = useState<string>('')\n  const [invertSearchOrder, setInvertSearchOrder] = useState<boolean>(false)\n  const allTokens = useAllTokens()\n\n  // if they input an address, use it\n  const isAddressSearch = isAddress(searchQuery)\n  const searchToken = useToken(searchQuery)\n\n  const showETH: boolean = useMemo(() => {\n    const s = searchQuery.toLowerCase().trim()\n    return s === '' || s === 'e' || s === 'et' || s === 'eth'\n  }, [searchQuery])\n\n  const tokenComparator = useTokenComparator(invertSearchOrder)\n\n  const audioPlay = useSelector<AppState, AppState['user']['audioPlay']>((state) => state.user.audioPlay)\n\n  const filteredTokens: Token[] = useMemo(() => {\n    if (isAddressSearch) return searchToken ? [searchToken] : []\n    return filterTokens(Object.values(allTokens), searchQuery)\n  }, [isAddressSearch, searchToken, allTokens, searchQuery])\n\n  const filteredSortedTokens: Token[] = useMemo(() => {\n    if (searchToken) return [searchToken]\n    const sorted = filteredTokens.sort(tokenComparator)\n    const symbolMatch = searchQuery\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s) => s.length > 0)\n    if (symbolMatch.length > 1) return sorted\n\n    return [\n      ...(searchToken ? [searchToken] : []),\n      // sort any exact symbol matches first\n      ...sorted.filter((token) => token.symbol?.toLowerCase() === symbolMatch[0]),\n      ...sorted.filter((token) => token.symbol?.toLowerCase() !== symbolMatch[0]),\n    ]\n  }, [filteredTokens, searchQuery, searchToken, tokenComparator])\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onCurrencySelect(currency)\n      onDismiss()\n      if (audioPlay) {\n        const audio = document.getElementById('bgMusic') as HTMLAudioElement\n        if (audio) {\n          audio.play()\n        }\n      }\n    },\n    [onDismiss, onCurrencySelect, audioPlay]\n  )\n\n  // clear the input on open\n  useEffect(() => {\n    if (isOpen) setSearchQuery('')\n  }, [isOpen])\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n    fixedList.current?.scrollTo(0)\n  }, [])\n\n  const handleEnter = useCallback(\n    (e: KeyboardEvent<HTMLInputElement>) => {\n      if (e.key === 'Enter') {\n        const s = searchQuery.toLowerCase().trim()\n        if (s === 'eth') {\n          handleCurrencySelect(ETHER)\n        } else if (filteredSortedTokens.length > 0) {\n          if (\n            filteredSortedTokens[0].symbol?.toLowerCase() === searchQuery.trim().toLowerCase() ||\n            filteredSortedTokens.length === 1\n          ) {\n            handleCurrencySelect(filteredSortedTokens[0])\n          }\n        }\n      }\n    },\n    [filteredSortedTokens, handleCurrencySelect, searchQuery]\n  )\n\n  const selectedListInfo = useSelectedListInfo()\n\n  return (\n    <StyledColumn style={{ width: '100%', flex: '1 1' }}>\n      <StyledPaddedColumn gap=\"14px\">\n        <RowBetween>\n          <Text>\n            <StyledTranslatedText>\n              Select a token\n              <QuestionHelper text=\"Find a token by searching for its name or symbol or by pasting its address below.\" />\n            </StyledTranslatedText>\n          </Text>\n          <CloseIcon onClick={onDismiss} />\n        </RowBetween>\n        <StyledSearchInput\n          type=\"text\"\n          id=\"token-search-input\"\n          placeholder={t('tokenSearchPlaceholder')}\n          value={searchQuery}\n          ref={inputRef as RefObject<HTMLInputElement>}\n          onChange={handleInput}\n          onKeyDown={handleEnter}\n        />\n        {showCommonBases && (\n          <CommonBases chainId={chainId} onSelect={handleCurrencySelect} selectedCurrency={selectedCurrency} />\n        )}\n        <RowBetween>\n          <Text fontSize=\"14px\">\n            <SmallStyledTranslatedText ><span>Token&nbsp;</span> name</SmallStyledTranslatedText>\n          </Text>\n          <SortButton ascending={invertSearchOrder} toggleSortOrder={() => setInvertSearchOrder((iso) => !iso)} />\n        </RowBetween>\n      </StyledPaddedColumn>\n\n      <Separator />\n\n      <div style={{ flex: '1' }}>\n        <AutoSizer disableWidth>\n          {({ height }) => (\n            <CurrencyList\n              height={height}\n              showETH={showETH}\n              currencies={filteredSortedTokens}\n              onCurrencySelect={handleCurrencySelect}\n              otherCurrency={otherSelectedCurrency}\n              selectedCurrency={selectedCurrency}\n              fixedListRef={fixedList}\n            />\n          )}\n        </AutoSizer>\n      </div>\n\n      {null && (\n        <>\n          <Separator />\n          <Card>\n            <RowBetween>\n              {selectedListInfo.current ? (\n                <Row>\n                  {selectedListInfo.current.logoURI ? (\n                    <ListLogo\n                      style={{ marginRight: 12 }}\n                      logoURI={selectedListInfo.current.logoURI}\n                      alt={`${selectedListInfo.current.name} list logo`}\n                    />\n                  ) : null}\n                  <Main id=\"currency-search-selected-list-name\">{selectedListInfo.current.name}</Main>\n                </Row>\n              ) : null}\n              <LinkStyledButton\n                style={{ fontWeight: 500, color: theme.colors.textSubtle, fontSize: 16 }}\n                onClick={onChangeList}\n                id=\"currency-search-change-list-button\"\n              >\n                {selectedListInfo.current ? 'Change' : 'Select a list'}\n              </LinkStyledButton>\n            </RowBetween>\n          </Card>\n        </>\n      )}\n    </StyledColumn>\n  )\n}\n\nexport default CurrencySearch\n","/home/someone/kucoin/tesnet20_08/amm-front/src/components/SearchModal/ListSelect.tsx",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/utils/v1SwapArguments.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/components/TransactionConfirmationModal/TransactionSubmittedContent.tsx",["824","825"],"import { ChainId } from '@pancakeswap-libs/sdk-v2'\nimport React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\nimport { Button, LinkExternal } from '@pancakeswap-libs/uikit'\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport { ArrowUpCircle } from 'react-feather'\nimport { AutoColumn } from '../Column'\nimport { getEtherscanLink } from '../../utils'\nimport { Wrapper, Section, ConfirmedIcon, ContentHeader } from './helpers'\n\ntype TransactionSubmittedContentProps = {\n  onDismiss: () => void\n  hash: string | undefined\n  chainId: ChainId\n}\nconst StyledButton = styled(Button)`\n  background-color: #48cae4;\n  box-shadow: none;\n  transition: all 0.2s ease-in-out;\n  border: 2px solid white;\n  font-size: 20px;\n  font-weight: 600;\n\n  &:hover {\n    background-color: #fff;\n    border: 2px solid #48cae4 !important;\n    color: #48cae4;\n\n    & > svg,\n    & > svg > * {\n      fill: #48cae4;\n    }\n  }\n\n  &:focus {\n    box-shadow: none !important;\n  }\n\n  &:active {\n    background-color: #fff;\n  }\n`\n\nconst StyledCloudUploadIcon = styled(CloudUploadIcon)`\n  font-size: 100px !important;\n  color: #ff629a !important;\n  margin: -10px auto !important;\n`\n\nconst TransactionSubmittedContent = ({ onDismiss, chainId, hash }: TransactionSubmittedContentProps) => {\n  const theme = useContext(ThemeContext)\n\n  return (\n    <Wrapper>\n      <Section>\n        <ContentHeader onDismiss={onDismiss}>Transaction submitted</ContentHeader>\n        <ConfirmedIcon>\n          <StyledCloudUploadIcon />\n        </ConfirmedIcon>\n        <AutoColumn gap=\"8px\" justify=\"center\">\n          {chainId && hash && (\n            <LinkExternal href={getEtherscanLink(chainId, hash, 'transaction')}>View on KCC Explorer</LinkExternal>\n          )}\n          <StyledButton onClick={onDismiss} mt=\"20px\">\n            Close\n          </StyledButton>\n        </AutoColumn>\n      </Section>\n    </Wrapper>\n  )\n}\n\nexport default TransactionSubmittedContent\n","/home/someone/kucoin/tesnet20_08/amm-front/src/components/TransactionConfirmationModal/TransactionErrorContent.tsx",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/components/TransactionConfirmationModal/ConfirmationModalContent.tsx",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/components/TransactionConfirmationModal/ConfirmationPendingContent.tsx",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/components/TransactionConfirmationModal/TransactionConfirmationModal.tsx",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/components/ProgressSteps/index.tsx",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/components/SyrupWarningModal/index.tsx",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/components/TokenWarningModal/index.tsx",["826"],"import { Token } from '@pancakeswap-libs/sdk-v2'\nimport { transparentize } from 'polished'\nimport { Button, Text } from '@pancakeswap-libs/uikit'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { AlertTriangle } from 'react-feather'\nimport { useActiveWeb3React } from '../../hooks'\nimport { useAllTokens } from '../../hooks/Tokens'\nimport { ExternalLink, TYPE } from '../Shared'\nimport { getEtherscanLink, shortenAddress } from '../../utils'\nimport CurrencyLogo from '../CurrencyLogo'\nimport Modal from '../Modal'\nimport { AutoRow, RowBetween } from '../Row'\nimport { AutoColumn } from '../Column'\n\nconst { main: Main, blue: Blue } = TYPE\n\nconst Wrapper = styled.div<{ error: boolean }>`\n  background: rgba(255, 255, 255, 0.8);\n  padding: 0.75rem;\n  border-radius: 20px;\n`\n\nconst WarningContainer = styled.div`\n  width: 500px;\n  width: 100%;\n  padding: 1rem;\n  /* background: rgba(255, 255, 255, 0.8); */\n  border: 5px solid #fff;\n  border-radius: 20px;\n  overflow: auto;\n`\n\nconst StyledWarningIcon = styled(AlertTriangle)`\n  stroke: ${({ theme }) => theme.colors.failure};\n`\n\ninterface TokenWarningCardProps {\n  token?: Token\n}\n\nfunction TokenWarningCard({ token }: TokenWarningCardProps) {\n  const { chainId } = useActiveWeb3React()\n\n  const tokenSymbol = token?.symbol?.toLowerCase() ?? ''\n  const tokenName = token?.name?.toLowerCase() ?? ''\n\n  const allTokens = useAllTokens()\n\n  const duplicateNameOrSymbol = useMemo(() => {\n    if (!token || !chainId) return false\n\n    return Object.keys(allTokens).some((tokenAddress) => {\n      const userToken = allTokens[tokenAddress]\n      if (userToken.equals(token)) {\n        return false\n      }\n      return userToken.symbol?.toLowerCase() === tokenSymbol || userToken.name?.toLowerCase() === tokenName\n    })\n  }, [token, chainId, allTokens, tokenSymbol, tokenName])\n\n  if (!token) return null\n\n  return (\n    <Wrapper error={duplicateNameOrSymbol}>\n      <AutoRow gap=\"6px\">\n        <AutoColumn gap=\"24px\">\n          <CurrencyLogo currency={token} size=\"16px\" />\n          <div> </div>\n        </AutoColumn>\n        <AutoColumn gap=\"10px\" justify=\"flex-start\">\n          <Main>\n            {token && token.name && token.symbol && token.name !== token.symbol\n              ? `${token.name} (${token.symbol})`\n              : token.name || token.symbol}{' '}\n          </Main>\n          {chainId && (\n            <ExternalLink style={{ fontWeight: 400 }} href={getEtherscanLink(chainId, token.address, 'token')}>\n              <Blue title={token.address}>{shortenAddress(token.address)} (View on KCC Explorer)</Blue>\n            </ExternalLink>\n          )}\n        </AutoColumn>\n      </AutoRow>\n    </Wrapper>\n  )\n}\n\nexport default function TokenWarningModal({\n  isOpen,\n  tokens,\n  onConfirm,\n}: {\n  isOpen: boolean\n  tokens: Token[]\n  onConfirm: () => void\n}) {\n  const [understandChecked, setUnderstandChecked] = useState(false)\n  const toggleUnderstand = useCallback(() => setUnderstandChecked((uc) => !uc), [])\n\n  const handleDismiss = useCallback(() => null, [])\n  return (\n    <Modal isOpen={isOpen} onDismiss={handleDismiss} maxHeight={90}>\n      <WarningContainer className=\"token-warning-container\">\n        <AutoColumn gap=\"lg\">\n          <AutoRow gap=\"6px\">\n            <StyledWarningIcon />\n            <Text color=\"failure\">Token imported</Text>\n          </AutoRow>\n          <Text style={{textAlign:'justify'}}>\n            Anyone can create a token on KCC with <em>any</em> name, including creating fake versions of existing\n            tokens and tokens that claim to represent projects that do not have a token.\n          </Text>\n          <Text style={{textAlign:'justify'}}>\n            This interface can load arbitrary tokens by token addresses. Please take extra caution and do your research\n            when interacting with arbitrary BEP20 tokens.\n          </Text>\n          <Text style={{textAlign:'justify'}}>\n            If you purchase an arbitrary token, <strong>you may be unable to sell it back.</strong>\n          </Text>\n          {tokens.map((token) => {\n            return <TokenWarningCard key={token.address} token={token} />\n          })}\n          <RowBetween>\n            <div>\n              <label htmlFor=\"understand-checkbox\" style={{ cursor: 'pointer', userSelect: 'none' }}>\n                <input\n                  id=\"understand-checkbox\"\n                  type=\"checkbox\"\n                  className=\"understand-checkbox\"\n                  checked={understandChecked}\n                  onChange={toggleUnderstand}\n                />{' '}\n                <Text as=\"span\" ml=\"4px\">\n                  I understand\n                </Text>\n              </label>\n            </div>\n            <Button\n              disabled={!understandChecked}\n              variant=\"danger\"\n              style={{ width: '140px' }}\n              className=\"token-dismiss-button\"\n              onClick={() => {\n                onConfirm()\n              }}\n            >\n              Continue\n            </Button>\n          </RowBetween>\n        </AutoColumn>\n      </WarningContainer>\n    </Modal>\n  )\n}\n","/home/someone/kucoin/tesnet20_08/amm-front/src/hooks/useENSAddress.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/hooks/useENSName.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/components/AddressInputPanel/index.tsx",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/components/Pane/index.tsx",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/components/swap/AdvancedSwapDetails.tsx",["827"],"import React from 'react'\nimport styled from 'styled-components'\nimport { Trade, TradeType } from '@pancakeswap-libs/sdk-v2'\nimport { Card, CardBody, Text } from '@pancakeswap-libs/uikit'\nimport { Field } from '../../state/swap/actions'\nimport { useUserSlippageTolerance } from '../../state/user/hooks'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown } from '../../utils/prices'\nimport { AutoColumn } from '../Column'\nimport QuestionHelper from '../QuestionHelper'\nimport { RowBetween, RowFixed } from '../Row'\nimport FormattedPriceImpact from './FormattedPriceImpact'\nimport { SectionBreak } from './styleds'\nimport SwapRoute from './SwapRoute'\n\nconst StyledCard = styled(Card)`\n  padding: 0px;\n  /* margin: 0 auto; */\n  border-radius: 20px;\n`\n\nconst RedText = styled(Text)`\n  color: #ff629a;\n  margin-bottom: 10px;\n`\nconst BlueText = styled(Text)`\n  color: #48cae4;\n  font-weight: 600;\n  margin-bottom: 10px;\n`\n\nfunction TradeSummary({ trade, allowedSlippage }: { trade: Trade; allowedSlippage: number }) {\n  const { priceImpactWithoutFee, realizedLPFee } = computeTradePriceBreakdown(trade)\n  const isExactIn = trade.tradeType === TradeType.EXACT_INPUT\n  const slippageAdjustedAmounts = computeSlippageAdjustedAmounts(trade, allowedSlippage)\n\n  return (\n    <StyledCard>\n      <CardBody>\n        <RowBetween>\n          <RowFixed>\n            <BlueText fontSize=\"17px\">{isExactIn ? 'Minimum received' : 'Maximum sold'}</BlueText>\n            <QuestionHelper text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\" />\n          </RowFixed>\n          <RowFixed>\n            <Text fontSize=\"17px\">\n              {isExactIn\n                ? `${slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4)} ${trade.outputAmount.currency.symbol}` ??\n                  '-'\n                : `${slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4)} ${trade.inputAmount.currency.symbol}` ??\n                  '-'}\n            </Text>\n          </RowFixed>\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <BlueText fontSize=\"17px\">Price Impact</BlueText>\n            <QuestionHelper text=\"The difference between the market price and estimated price due to trade size.\" />\n          </RowFixed>\n          <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n        </RowBetween>\n\n        <RowBetween>\n          <RowFixed>\n            <BlueText fontSize=\"17px\">Provider Fee</BlueText>\n            <QuestionHelper text=\"For each trade a 0.2% fee is paid. 0.17% goes to liquidity providers and 0.03% goes to the PancakeSwap treasury.\" />\n          </RowFixed>\n          <Text fontSize=\"17px\">\n            {realizedLPFee ? `${realizedLPFee.toSignificant(4)} ${trade.inputAmount.currency.symbol}` : '-'}\n          </Text>\n        </RowBetween>\n      </CardBody>\n    </StyledCard>\n  )\n}\n\nexport interface AdvancedSwapDetailsProps {\n  trade?: Trade\n}\n\nexport function AdvancedSwapDetails({ trade }: AdvancedSwapDetailsProps) {\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const showRoute = Boolean(trade && trade.route.path.length > 2)\n\n  return (\n    <AutoColumn gap=\"md\">\n      {trade && (\n        <>\n          <TradeSummary trade={trade} allowedSlippage={allowedSlippage} />\n          {showRoute && (\n            <>\n              <SectionBreak />\n              <AutoColumn style={{ padding: '0 24px' }}>\n                <RowFixed>\n                  <Text fontSize=\"16px\">Route</Text>\n                  <QuestionHelper text=\"Routing through these tokens resulted in the best price for your trade.\" />\n                </RowFixed>\n                <SwapRoute trade={trade} />\n              </AutoColumn>\n            </>\n          )}\n        </>\n      )}\n    </AutoColumn>\n  )\n}\n","/home/someone/kucoin/tesnet20_08/amm-front/src/components/swap/SwapModalHeader.tsx",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/components/swap/SwapModalFooter.tsx",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/components/PageHeader/SettingsModal.tsx",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/components/PageHeader/RecentTransactionsModal.tsx",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/components/SearchModal/filtering.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/components/SearchModal/sorting.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/hooks/useToggle.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/components/Modal/index.tsx",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/components/SearchModal/styleds.tsx",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/components/SearchModal/SortButton.tsx",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/components/SearchModal/CommonBases.tsx",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/hooks/useOnClickOutside.tsx",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/components/SearchModal/CurrencyList.tsx",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/components/NumericalInput/index.tsx",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/components/TransactionConfirmationModal/helpers.tsx",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/components/swap/FormattedPriceImpact.tsx",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/components/swap/SwapRoute.tsx",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/components/PageHeader/TransactionDeadlineSetting.tsx",["828"],"import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { Input, Text } from '@pancakeswap-libs/uikit'\nimport { useUserDeadline } from 'state/user/hooks'\nimport QuestionHelper from '../QuestionHelper'\nimport TranslatedText from '../TranslatedText'\n\nconst StyledTransactionDeadlineSetting = styled.div`\n  margin-bottom: 16px;\n`\n\nconst Label = styled.div`\n  align-items: center;\n  display: flex;\n  margin-bottom: 8px;\n`\n\nconst Field = styled.div`\n  align-items: center;\n  display: inline-flex;\n\n  & > ${Input} {\n    max-width: 100px;\n  }\n\n  & > ${Text} {\n    font-size: 14px;\n    margin-left: 8px;\n  }\n`\nconst StyledText = styled.div`\n  color: #000 !important;\n\n  & > * > *{\n  color: #000 !important;\n  }\n`\nconst TransactionDeadlineSetting = () => {\n  const [deadline, setDeadline] = useUserDeadline()\n  const [value, setValue] = useState(deadline / 60) // deadline in minutes\n  const [error, setError] = useState<string | null>(null)\n\n  const handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    const { value: inputValue } = evt.target\n    setValue(parseInt(inputValue, 10))\n  }\n\n  // Updates local storage if value is valid\n  useEffect(() => {\n    try {\n      const rawValue = value * 60\n      if (!Number.isNaN(rawValue) && rawValue > 0) {\n        setDeadline(rawValue)\n        setError(null)\n      } else {\n        setError('Enter a valid deadline')\n      }\n    } catch {\n      setError('Enter a valid deadline')\n    }\n  }, [value, setError, setDeadline])\n\n  return (\n    <StyledTransactionDeadlineSetting>\n      <Label>\n        <Text style={{ fontWeight: 600 }}>\n          <StyledText>Transaction deadline</StyledText>\n        </Text>\n        <QuestionHelper text=\"Your transaction will revert if it is pending for more than this long.\" />\n      </Label>\n      <Field>\n        <Input type=\"number\" step=\"1\" min=\"1\" value={value} onChange={handleChange} />\n        <Text>Minutes</Text>\n      </Field>\n      {error && (\n        <Text mt=\"8px\" color=\"failure\">\n          {error}\n        </Text>\n      )}\n    </StyledTransactionDeadlineSetting>\n  )\n}\n\nexport default TransactionDeadlineSetting\n","/home/someone/kucoin/tesnet20_08/amm-front/src/components/PageHeader/SlippageToleranceSetting.tsx",["829"],"import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, Flex, Input, Text } from '@pancakeswap-libs/uikit'\nimport { useUserSlippageTolerance } from 'state/user/hooks'\nimport QuestionHelper from '../QuestionHelper'\nimport TranslatedText from '../TranslatedText'\n\nconst MAX_SLIPPAGE = 5000\nconst RISKY_SLIPPAGE_LOW = 50\nconst RISKY_SLIPPAGE_HIGH = 500\n\nconst StyledSlippageToleranceSettings = styled.div`\n  margin-bottom: 16px;\n`\n\nconst Option = styled.div`\n  padding: 0 4px;\n`\nconst StyledButton = styled(Button)`\n  font-family: 'Roboto', sans-serif !important;\n  background-color: #48cae4;\n  margin-right: 5px;\n  height: 40px;\n  font-weight: 600;\n  /* width: 40px; */\n  box-shadow: none;\n  transition: all 0.2s ease-in-out;\n    border: 2px solid #fff !important;\n\n  & > svg,\n  & > svg > * {\n    fill: #fff;\n  }\n\n  &:hover {\n    color: #48cae4;\n    background-color: #fff;\n    border: 2px solid #48cae4 !important;\n\n    & > svg,\n    & > svg > * {\n      fill: #48cae4;\n    }\n  }\n\n  &:focus {\n    box-shadow: none !important;\n  }\n\n  &:active {\n    background-color: #fff;\n  }\n`\nconst Options = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n\n  ${Option}:first-child {\n    padding-left: 0;\n  }\n\n  ${Option}:last-child {\n    padding-right: 0;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n  }\n`\n\nconst Label = styled.div`\n  align-items: center;\n  display: flex;\n  margin-bottom: 8px;\n`\nconst StyledText = styled.div`\n  color: #000 !important;\n\n  & > * > *{\n  color: #000 !important;\n  }\n`\n\nconst predefinedValues = [\n  { label: '0.1%', value: 0.1 },\n  { label: '0.5%', value: 0.5 },\n  { label: '1%', value: 1 }\n]\n\nconst SlippageToleranceSettings = () => {\n  const [userSlippageTolerance, setUserslippageTolerance] = useUserSlippageTolerance()\n  const [value, setValue] = useState(userSlippageTolerance / 100)\n  const [error, setError] = useState<string | null>(null)\n\n  const handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    const { value: inputValue } = evt.target\n    setValue(parseFloat(inputValue))\n  }\n\n  // Updates local storage if value is valid\n  useEffect(() => {\n    try {\n      const rawValue = value * 100\n      if (!Number.isNaN(rawValue) && rawValue > 0 && rawValue < MAX_SLIPPAGE) {\n        setUserslippageTolerance(rawValue)\n        setError(null)\n      } else {\n        setError('Enter a valid slippage percentage')\n      }\n    } catch {\n      setError('Enter a valid slippage percentage')\n    }\n  }, [value, setError, setUserslippageTolerance])\n\n  // Notify user if slippage is risky\n  useEffect(() => {\n    if (userSlippageTolerance < RISKY_SLIPPAGE_LOW) {\n      setError('Your transaction may fail')\n    } else if (userSlippageTolerance > RISKY_SLIPPAGE_HIGH) {\n      setError('Your transaction may be frontrun')\n    }\n  }, [userSlippageTolerance, setError])\n\n  return (\n    <StyledSlippageToleranceSettings>\n      <Label>\n        <Text style={{ fontWeight: 600 }}>\n          <StyledText>Slippage tolerance</StyledText>\n        </Text>\n        <QuestionHelper text=\"Your transaction will revert if the price changes unfavorably by more than this percentage.\" />\n      </Label>\n      <Options>\n        <Flex mb={['8px', 0]} mr={[0, '8px']}>\n          {predefinedValues.map(({ label, value: predefinedValue }) => {\n            const handleClick = () => setValue(predefinedValue)\n\n            return (\n              <Option key={predefinedValue}>\n                <StyledButton variant={value === predefinedValue ? 'primary' : 'tertiary'} onClick={handleClick}>\n                  {label}\n                </StyledButton>\n              </Option>\n            )\n          })}\n        </Flex>\n        <Flex alignItems=\"center\">\n          <Option>\n            <Input\n              type=\"number\"\n              scale=\"lg\"\n              step={0.1}\n              min={0.1}\n              placeholder=\"5%\"\n              value={value}\n              onChange={handleChange}\n              isWarning={error !== null}\n            />\n          </Option>\n          <Option>\n            <Text fontSize=\"18px\">%</Text>\n          </Option>\n        </Flex>\n      </Options>\n      {error && (\n        <Text mt=\"8px\" color=\"failure\">\n          {error}\n        </Text>\n      )}\n    </StyledSlippageToleranceSettings>\n  )\n}\n\nexport default SlippageToleranceSettings\n","/home/someone/kucoin/tesnet20_08/amm-front/src/components/ListLogo/index.tsx",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/components/NewMenu/DexMenu.tsx",["830","831","832","833"],"import React from 'react'\nimport styled from 'styled-components'\nimport { withStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport Menu, { MenuProps } from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport DescriptionIcon from '@material-ui/icons/Description'\nimport TimelineIcon from '@material-ui/icons/Timeline'\nimport AutorenewIcon from '@material-ui/icons/Autorenew'\nimport CompareArrowsIcon from '@material-ui/icons/CompareArrows';\nimport PlaylistAddIcon from '@material-ui/icons/PlaylistAdd';\n\nconst StyledMenu = withStyles({\n  paper: {\n    marginTop: '20px',\n    border: '1px solid #d3d4d5',\n  },\n})((props: MenuProps) => (\n  <Menu\n    elevation={0}\n    getContentAnchorEl={null}\n    anchorOrigin={{\n      vertical: 'bottom',\n      horizontal: 'center',\n    }}\n    transformOrigin={{\n      vertical: 'top',\n      horizontal: 'center',\n    }}\n    {...props}\n  />\n))\n\n\n\nconst IconImage = styled.img`\n  width: 24px;\n`\nconst StyledButton = styled(Button)`\n  font-family: 'Roboto', sans-serif !important;\n  font-weight: 500 !important;\n  font-size: 18px !important;\n  text-transform: none !important;\n  background-color: transparent !important;\n  box-shadow: none !important;\n  height: 25px !important;\n  /* width: 30px !important; */\n  padding: 0px !important;\n  margin-left: 10px !important;\n\n  &:hover{\n    color: #ff629a !important;\n  }\n`\n\nconst StyledMenuItem = withStyles((theme) => ({\n  root: {\n    '&:hover': {\n      backgroundColor: '#48cae4',\n      '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\n        color: theme.palette.common.white,\n        fontWeight: 500,\n      },\n    },\n  },\n}))(MenuItem)\n\nexport default function CustomizedMenus() {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null)\n\n  const baseUrl = (route) => {\n    return window.location.origin + route;\n  }\n\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  return (\n    <div>\n      <StyledButton\n        aria-controls=\"customized-menu\"\n        aria-haspopup=\"true\"\n        variant=\"contained\"\n        color=\"inherit\"\n        onClick={handleClick}\n      >\n        DEX\n      </StyledButton>\n      <StyledMenu id=\"customized-menu\" anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={handleClose}>\n        <a href=\"https://dex.kupcakeswap.finance/#/swap\">\n          <StyledMenuItem>\n            <ListItemIcon>\n              <AutorenewIcon fontSize=\"medium\" />\n            </ListItemIcon>\n            <ListItemText primary=\"Swap\" />\n          </StyledMenuItem>\n        </a>\n\n        <a href=\"https://dex.kupcakeswap.finance/#/pool\">\n          <StyledMenuItem>\n            <ListItemIcon>\n              <CompareArrowsIcon fontSize=\"medium\" />\n            </ListItemIcon>\n            <ListItemText primary=\"Liquidity\" />\n          </StyledMenuItem>\n        </a>\n\n        <a href=\"https://qugkgjziv7l.typeform.com/to/PxxOYSX4\">\n          <StyledMenuItem>\n            <ListItemIcon>\n              <PlaylistAddIcon fontSize=\"medium\" />\n            </ListItemIcon>\n            <ListItemText primary=\"Submit &amp; list your token\" />\n          </StyledMenuItem>\n        </a>\n      </StyledMenu>\n    </div>\n  )\n}\n","/home/someone/kucoin/tesnet20_08/amm-front/src/components/NewMenu/YieldMenu.tsx",["834","835","836","837"],"import React from 'react'\nimport styled from 'styled-components'\nimport { withStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport Menu, { MenuProps } from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport DescriptionIcon from '@material-ui/icons/Description'\nimport TimelineIcon from '@material-ui/icons/Timeline'\nimport AutorenewIcon from '@material-ui/icons/Autorenew'\nimport TollIcon from '@material-ui/icons/Toll';\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\n\nconst StyledMenu = withStyles({\n  paper: {\n    marginTop: '20px',\n    border: '1px solid #d3d4d5',\n  },\n})((props: MenuProps) => (\n  <Menu\n    elevation={0}\n    getContentAnchorEl={null}\n    anchorOrigin={{\n      vertical: 'bottom',\n      horizontal: 'center',\n    }}\n    transformOrigin={{\n      vertical: 'top',\n      horizontal: 'center',\n    }}\n    {...props}\n  />\n))\n\nconst IconImage = styled.img`\n  width: 24px;\n`\nconst StyledButton = styled(Button)`\n  font-family: 'Roboto', sans-serif !important;\n  font-weight: 500 !important;\n  font-size: 18px !important;\n  text-transform: none !important;\n  background-color: transparent !important;\n  box-shadow: none !important;\n  height: 25px !important;\n  /* width: 30px !important; */\n  padding: 0px !important;\n  margin-left: 10px !important;\n\n&:hover{\n  color: #ff629a !important;\n}\n`\n\nconst StyledMenuItem = withStyles((theme) => ({\n  root: {\n    '&:hover': {\n      backgroundColor: '#48cae4',\n      '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\n        color: theme.palette.common.white,\n        fontWeight: 500,\n      },\n    },\n  },\n}))(MenuItem)\n\nexport default function CustomizedMenus() {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null)\n\n  const baseUrl = (route) => {\n    return window.location.origin + route;\n  }\n\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  return (\n    <div>\n      <StyledButton\n        aria-controls=\"customized-menu\"\n        aria-haspopup=\"true\"\n        variant=\"contained\"\n        color=\"inherit\"\n        onClick={handleClick}\n      >\n        Yield\n      </StyledButton>\n      <StyledMenu id=\"customized-menu\" anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={handleClose}>\n        <a href={baseUrl('/farms')}>\n          <StyledMenuItem>\n            <ListItemIcon>\n              <TollIcon fontSize=\"medium\" />\n            </ListItemIcon>\n            <ListItemText primary=\"Farms\" />\n          </StyledMenuItem>\n        </a>\n\n        <a href={baseUrl('/pools')}>\n          <StyledMenuItem>\n            <ListItemIcon>\n              <RadioButtonUncheckedIcon fontSize=\"small\" />\n            </ListItemIcon>\n            <ListItemText primary=\"Pools\" />\n          </StyledMenuItem>\n        </a>\n      </StyledMenu>\n    </div>\n  )\n}\n","/home/someone/kucoin/tesnet20_08/amm-front/src/components/Menu/index.tsx",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/components/Menu/config.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/hooks/useGetPriceData.ts",["838","839","840"],"import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useMulticallContract } from './useContract'\nimport ERC20_INTERFACE from '../constants/abis/erc20'\nimport priceContracts from '../constants/eggPriceContracts'\n\ntype ApiResponse = {\n  prices: {\n    [key: string]: string\n  }\n  update_at: string\n}\n\n/**\n * Due to Cors the api was forked and a proxy was created\n * @see https://github.com/pancakeswap/gatsby-pancake-api/commit/e811b67a43ccc41edd4a0fa1ee704b2f510aa0ba\n */\nconst api = 'https://api.pancakeswap.com/api/v1/price'\n\nconst useGetPriceData = () => {\n  const [data, setData] = useState<number>(0)\n\n  const multicallContract = useMulticallContract();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        if(multicallContract){\n          const {cakeAddress, busdAddress, lpAddress} = priceContracts;\n          const calls = [\n            [cakeAddress, ERC20_INTERFACE.encodeFunctionData(\"balanceOf\", [lpAddress])],\n            [busdAddress, ERC20_INTERFACE.encodeFunctionData(\"balanceOf\", [lpAddress])],\n          ];\n\n          const [resultsBlockNumber, result] = await multicallContract.aggregate(calls);\n          const [cakeAmount, busdAmount] = result.map(r=>ERC20_INTERFACE.decodeFunctionResult(\"balanceOf\", r));\n          const cake = new BigNumber(cakeAmount);\n          const busd = new BigNumber(busdAmount);\n          const cakePrice = busd.div(cake).toNumber();\n          setData(cakePrice)\n        }\n      } catch (error) {\n        console.error('Unable to fetch price data:', error)\n      }\n    }\n\n    fetchData()\n  }, [multicallContract])\n\n  return data\n}\n\nexport default useGetPriceData\n","/home/someone/kucoin/tesnet20_08/amm-front/src/hooks/useTheme.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/constants/localisation/languageCodes.ts",[],"/home/someone/kucoin/tesnet20_08/amm-front/src/constants/eggPriceContracts.ts",[],{"ruleId":"841","replacedBy":"842"},{"ruleId":"843","replacedBy":"844"},{"ruleId":"845","replacedBy":"846"},{"ruleId":"847","replacedBy":"848"},{"ruleId":"849","replacedBy":"850"},{"ruleId":"851","severity":1,"message":"852","line":1,"column":27,"nodeType":"853","messageId":"854","endLine":1,"endColumn":36},{"ruleId":"851","severity":1,"message":"855","line":13,"column":8,"nodeType":"853","messageId":"854","endLine":13,"endColumn":17},{"ruleId":"851","severity":1,"message":"856","line":14,"column":8,"nodeType":"853","messageId":"854","endLine":14,"endColumn":25},{"ruleId":"851","severity":1,"message":"857","line":23,"column":10,"nodeType":"853","messageId":"854","endLine":23,"endColumn":12},{"ruleId":"851","severity":1,"message":"858","line":23,"column":14,"nodeType":"853","messageId":"854","endLine":23,"endColumn":26},{"ruleId":"851","severity":1,"message":"859","line":1,"column":17,"nodeType":"853","messageId":"854","endLine":1,"endColumn":23},{"ruleId":"851","severity":1,"message":"860","line":1,"column":25,"nodeType":"853","messageId":"854","endLine":1,"endColumn":33},{"ruleId":"851","severity":1,"message":"861","line":2,"column":10,"nodeType":"853","messageId":"854","endLine":2,"endColumn":20},{"ruleId":"851","severity":1,"message":"862","line":5,"column":10,"nodeType":"853","messageId":"854","endLine":5,"endColumn":20},{"ruleId":"851","severity":1,"message":"863","line":6,"column":24,"nodeType":"853","messageId":"854","endLine":6,"endColumn":28},{"ruleId":"851","severity":1,"message":"864","line":6,"column":30,"nodeType":"853","messageId":"854","endLine":6,"endColumn":38},{"ruleId":"851","severity":1,"message":"865","line":6,"column":40,"nodeType":"853","messageId":"854","endLine":6,"endColumn":47},{"ruleId":"851","severity":1,"message":"866","line":6,"column":49,"nodeType":"853","messageId":"854","endLine":6,"endColumn":53},{"ruleId":"851","severity":1,"message":"867","line":55,"column":7,"nodeType":"853","messageId":"854","endLine":55,"endColumn":16},{"ruleId":"851","severity":1,"message":"868","line":82,"column":7,"nodeType":"853","messageId":"854","endLine":82,"endColumn":20},{"ruleId":"851","severity":1,"message":"869","line":90,"column":7,"nodeType":"853","messageId":"854","endLine":90,"endColumn":17},{"ruleId":"851","severity":1,"message":"870","line":95,"column":7,"nodeType":"853","messageId":"854","endLine":95,"endColumn":19},{"ruleId":"851","severity":1,"message":"871","line":5,"column":20,"nodeType":"853","messageId":"854","endLine":5,"endColumn":23},{"ruleId":"851","severity":1,"message":"872","line":4,"column":20,"nodeType":"853","messageId":"854","endLine":4,"endColumn":33},{"ruleId":"851","severity":1,"message":"873","line":47,"column":7,"nodeType":"853","messageId":"854","endLine":47,"endColumn":13},{"ruleId":"851","severity":1,"message":"874","line":143,"column":7,"nodeType":"853","messageId":"854","endLine":143,"endColumn":16},{"ruleId":"851","severity":1,"message":"875","line":149,"column":7,"nodeType":"853","messageId":"854","endLine":149,"endColumn":17},{"ruleId":"851","severity":1,"message":"876","line":12,"column":10,"nodeType":"853","messageId":"854","endLine":12,"endColumn":19},{"ruleId":"851","severity":1,"message":"877","line":13,"column":10,"nodeType":"853","messageId":"854","endLine":13,"endColumn":20},{"ruleId":"851","severity":1,"message":"878","line":20,"column":8,"nodeType":"853","messageId":"854","endLine":20,"endColumn":22},{"ruleId":"851","severity":1,"message":"879","line":21,"column":10,"nodeType":"853","messageId":"854","endLine":21,"endColumn":25},{"ruleId":"851","severity":1,"message":"880","line":71,"column":9,"nodeType":"853","messageId":"854","endLine":71,"endColumn":14},{"ruleId":"851","severity":1,"message":"881","line":27,"column":7,"nodeType":"853","messageId":"854","endLine":27,"endColumn":23},{"ruleId":"851","severity":1,"message":"867","line":36,"column":7,"nodeType":"853","messageId":"854","endLine":36,"endColumn":16},{"ruleId":"851","severity":1,"message":"882","line":10,"column":8,"nodeType":"853","messageId":"854","endLine":10,"endColumn":18},{"ruleId":"851","severity":1,"message":"883","line":17,"column":8,"nodeType":"853","messageId":"854","endLine":17,"endColumn":20},{"ruleId":"851","severity":1,"message":"884","line":19,"column":8,"nodeType":"853","messageId":"854","endLine":19,"endColumn":16},{"ruleId":"851","severity":1,"message":"885","line":20,"column":8,"nodeType":"853","messageId":"854","endLine":20,"endColumn":16},{"ruleId":"851","severity":1,"message":"886","line":96,"column":7,"nodeType":"853","messageId":"854","endLine":96,"endColumn":13},{"ruleId":"851","severity":1,"message":"887","line":118,"column":10,"nodeType":"853","messageId":"854","endLine":118,"endColumn":21},{"ruleId":"851","severity":1,"message":"888","line":118,"column":23,"nodeType":"853","messageId":"854","endLine":118,"endColumn":37},{"ruleId":"851","severity":1,"message":"867","line":33,"column":7,"nodeType":"853","messageId":"854","endLine":33,"endColumn":16},{"ruleId":"851","severity":1,"message":"889","line":96,"column":9,"nodeType":"853","messageId":"854","endLine":96,"endColumn":16},{"ruleId":"851","severity":1,"message":"890","line":97,"column":9,"nodeType":"853","messageId":"854","endLine":97,"endColumn":15},{"ruleId":"851","severity":1,"message":"891","line":98,"column":20,"nodeType":"853","messageId":"854","endLine":98,"endColumn":26},{"ruleId":"892","severity":1,"message":"893","line":110,"column":3,"nodeType":"894","messageId":"895","endLine":110,"endColumn":14},{"ruleId":"851","severity":1,"message":"896","line":3,"column":30,"nodeType":"853","messageId":"854","endLine":3,"endColumn":34},{"ruleId":"851","severity":1,"message":"897","line":24,"column":7,"nodeType":"853","messageId":"854","endLine":24,"endColumn":19},{"ruleId":"851","severity":1,"message":"878","line":5,"column":8,"nodeType":"853","messageId":"854","endLine":5,"endColumn":22},{"ruleId":"851","severity":1,"message":"878","line":26,"column":8,"nodeType":"853","messageId":"854","endLine":26,"endColumn":22},{"ruleId":"851","severity":1,"message":"879","line":27,"column":10,"nodeType":"853","messageId":"854","endLine":27,"endColumn":25},{"ruleId":"851","severity":1,"message":"898","line":6,"column":10,"nodeType":"853","messageId":"854","endLine":6,"endColumn":23},{"ruleId":"851","severity":1,"message":"880","line":51,"column":9,"nodeType":"853","messageId":"854","endLine":51,"endColumn":14},{"ruleId":"851","severity":1,"message":"899","line":2,"column":10,"nodeType":"853","messageId":"854","endLine":2,"endColumn":24},{"ruleId":"851","severity":1,"message":"900","line":21,"column":7,"nodeType":"853","messageId":"854","endLine":21,"endColumn":14},{"ruleId":"851","severity":1,"message":"878","line":6,"column":8,"nodeType":"853","messageId":"854","endLine":6,"endColumn":22},{"ruleId":"851","severity":1,"message":"878","line":6,"column":8,"nodeType":"853","messageId":"854","endLine":6,"endColumn":22},{"ruleId":"851","severity":1,"message":"901","line":9,"column":8,"nodeType":"853","messageId":"854","endLine":9,"endColumn":23},{"ruleId":"851","severity":1,"message":"902","line":10,"column":8,"nodeType":"853","messageId":"854","endLine":10,"endColumn":20},{"ruleId":"851","severity":1,"message":"867","line":38,"column":7,"nodeType":"853","messageId":"854","endLine":38,"endColumn":16},{"ruleId":"851","severity":1,"message":"903","line":73,"column":9,"nodeType":"853","messageId":"854","endLine":73,"endColumn":16},{"ruleId":"851","severity":1,"message":"901","line":9,"column":8,"nodeType":"853","messageId":"854","endLine":9,"endColumn":23},{"ruleId":"851","severity":1,"message":"902","line":10,"column":8,"nodeType":"853","messageId":"854","endLine":10,"endColumn":20},{"ruleId":"851","severity":1,"message":"904","line":11,"column":8,"nodeType":"853","messageId":"854","endLine":11,"endColumn":21},{"ruleId":"851","severity":1,"message":"867","line":36,"column":7,"nodeType":"853","messageId":"854","endLine":36,"endColumn":16},{"ruleId":"851","severity":1,"message":"905","line":7,"column":6,"nodeType":"853","messageId":"854","endLine":7,"endColumn":17},{"ruleId":"851","severity":1,"message":"906","line":18,"column":7,"nodeType":"853","messageId":"854","endLine":18,"endColumn":10},{"ruleId":"851","severity":1,"message":"907","line":35,"column":18,"nodeType":"853","messageId":"854","endLine":35,"endColumn":36},"lines-around-directive",["908"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'MigrateV1' is defined but never used.","'MigrateV1Exchange' is defined but never used.","'EN' is defined but never used.","'allLanguages' is defined but never used.","'useRef' is defined but never used.","'useState' is defined but never used.","'useHistory' is defined but never used.","'withStyles' is defined but never used.","'Card' is defined but never used.","'CardBody' is defined but never used.","'Heading' is defined but never used.","'Text' is defined but never used.","'IconImage' is assigned a value but never used.","'StyledElement' is assigned a value but never used.","'SmallImage' is assigned a value but never used.","'RobotoButton' is assigned a value but never used.","'bsc' is defined but never used.","'ArrowDownIcon' is defined but never used.","'Header' is assigned a value but never used.","'SubTitle2' is assigned a value but never used.","'MarginLink' is assigned a value but never used.","'LightCard' is defined but never used.","'RowBetween' is defined but never used.","'TranslatedText' is defined but never used.","'TranslateString' is defined but never used.","'theme' is assigned a value but never used.","'StyledSwapButton' is assigned a value but never used.","'Typography' is defined but never used.","'ListItemIcon' is defined but never used.","'HomeIcon' is defined but never used.","'MailIcon' is defined but never used.","'Button' is assigned a value but never used.","'addressMeta' is assigned a value but never used.","'setAddressMeta' is assigned a value but never used.","'resolve' is assigned a value but never used.","'reject' is assigned a value but never used.","'method' is assigned a value but never used.","no-console","Unexpected console statement.","MemberExpression","unexpected","'TYPE' is defined but never used.","'StyledButton' is assigned a value but never used.","'ArrowUpCircle' is defined but never used.","'transparentize' is defined but never used.","'RedText' is assigned a value but never used.","'DescriptionIcon' is defined but never used.","'TimelineIcon' is defined but never used.","'baseUrl' is assigned a value but never used.","'AutorenewIcon' is defined but never used.","'ApiResponse' is defined but never used.","'api' is assigned a value but never used.","'resultsBlockNumber' is assigned a value but never used.","padding-line-between-statements"]